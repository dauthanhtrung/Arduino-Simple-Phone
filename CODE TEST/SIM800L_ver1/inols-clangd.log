






Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":16244,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server983633147\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server983633147/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2552

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server983633147/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 27 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid NhanTin();\n#line 36 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid GoiDien();\n#line 40 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 45 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // NhanTin();\n}\nvoid NhanTin(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868606540\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"TRUN TRUN NEEEEEE\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid GoiDien(){\n\n\n}\nvoid loop()\n{\n updateSerial();\n}\n\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server983633147/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server983633147/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":36,"character":17},"end":{"line":36,"character":17}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server983633147/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 2134

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"NhanTin","range":{"end":{"character":14,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":12,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GoiDien","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":38},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"NhanTin","range":{"end":{"character":1,"line":47},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":12,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"GoiDien","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":12,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":55},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":17,"line":57},"start":{"character":5,"line":57}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server983633147/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":19,"character":1},"end":{"line":19,"character":1}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":4,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}






Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":4968,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server037221415\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server037221415/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server037221415/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server037221415/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server037221415/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":22,"character":23},"end":{"line":22,"character":23}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server037221415/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":3,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":17840,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server464017279\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":22,"character":23},"end":{"line":22,"character":23}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":24,"character":34}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":3,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":35,"line":24},"start":{"character":34,"line":24}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":24,"character":33}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":4,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":29,"character":53}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":5,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":28,"character":17},"end":{"line":28,"character":17}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server464017279/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":21},"end":{"line":49,"character":21}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":8,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":18180,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server024548191\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":21},"end":{"line":49,"character":21}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":31,"character":35}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":3,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":2}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `sms`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid sms()\n```"},"range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}}}}
>>>
Content-Length: 242

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":2}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":1,"range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}}},{"kind":1,"range":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":3}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":3}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":7,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `sms`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid sms()\n```"},"range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}}}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":2}},"text":"// "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp","version":2}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":6}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 2433

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":54,"character":25}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":9,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":25,"line":54},"start":{"character":16,"line":54}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 1742

{"id":10,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server024548191/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":25}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":18180,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server504404723\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server504404723/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server504404723/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server504404723/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server504404723/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":25}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server504404723/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":3,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":1456,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server788322599\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":25}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":8}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 245

{"id":3,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `updateSerial`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid updateSerial()\n```"},"range":{"end":{"character":14,"line":34},"start":{"character":2,"line":34}}}}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":7}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `sms`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid sms()\n```"},"range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}}}}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 242

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":4}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":1,"range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}}},{"kind":1,"range":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":4}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":4}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":7,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `sms`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid sms()\n```"},"range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}}}}
>>>
Content-Length: 235

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":4}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"id":8,"jsonrpc":"2.0","result":[{"range":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}},"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":2}},"text":"// "}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":6},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":7},"end":{"line":35,"character":7}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":2}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":4}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":10,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":9},"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":17}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":11,"jsonrpc":"2.0","result":null}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 2433

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":17}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 1742

{"id":13,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":11},"jsonrpc":"2.0"}Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":40,"character":17},"end":{"line":40,"character":17}},"context":{"diagnostics":[]}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":14,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":17}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":15,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":13}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"id":16,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `size_t`  \nParameters:  \n- `uint8_t byte`\n\n---\n```cpp\n// In SoftwareSerial\npublic: virtual size_t write(uint8_t byte)\n```"},"range":{"end":{"character":16,"line":49},"start":{"character":11,"line":49}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":14},"jsonrpc":"2.0"}Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":9}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"id":17,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mySerial`  \n\n---\nType: `class SoftwareSerial`  \nSIM800L Tx & Rx is connected to Arduino #3 & #2  \n\n---\n```cpp\nSoftwareSerial mySerial(3, 2)\n```"},"range":{"end":{"character":10,"line":47},"start":{"character":2,"line":47}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":60,"character":29}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"id":18,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `read`  \n\n---\n→ `int`  \n\n---\n```cpp\n// In SoftwareSerial\npublic: virtual int read()\n```"},"range":{"end":{"character":30,"line":60},"start":{"character":26,"line":60}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":60,"character":60}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":60,"character":21}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"id":20,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mySerial`  \n\n---\nType: `class SoftwareSerial`  \nSIM800L Tx & Rx is connected to Arduino #3 & #2  \n\n---\n```cpp\nSoftwareSerial mySerial(3, 2)\n```"},"range":{"end":{"character":25,"line":60},"start":{"character":17,"line":60}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":60,"character":9}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"id":21,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":10,"line":60},"start":{"character":4,"line":60}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":18}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":22,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":3}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"id":23,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mySerial`  \n\n---\nType: `class SoftwareSerial`  \nSIM800L Tx & Rx is connected to Arduino #3 & #2  \n\n---\n```cpp\nSoftwareSerial mySerial(3, 2)\n```"},"range":{"end":{"character":10,"line":49},"start":{"character":2,"line":49}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":53,"character":5}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 284

{"id":24,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"end":{"character":7,"line":53},"start":{"character":2,"line":53}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":22},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":45}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":25,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":1},"end":{"line":50,"character":1}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":43,"character":25}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":27,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":0}},"text":"V"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":1},"context":{"triggerKind":1}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 16469

{"id":28,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"filterText":"void","insertText":"void","insertTextFormat":2,"kind":14,"label":" void","score":8,"sortText":"3f000000void","textEdit":{"newText":"void","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"volatile","insertText":"volatile","insertTextFormat":2,"kind":14,"label":" volatile","score":8,"sortText":"3f000000volatile","textEdit":{"newText":"volatile","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_list","insertText":"va_list","insertTextFormat":2,"kind":8,"label":" va_list","score":1.1826096773147583,"sortText":"4068a03fva_list","textEdit":{"newText":"va_list","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\c vfprintf is the central facility of the \\\\c printf family of functions. It outputs values to \\\\c stream under control of a format string passed in \\\\c fmt. The actual values to print are passed as a variable argument list \\\\c ap.  \n\\\\c vfprintf returns the number of characters written to \\\\c stream,  \nor \\\\c EOF in case of an error. Currently, this will only happen if \\\\c stream has not been opened with write intent.  \nThe format string is composed of zero or more directives: ordinary characters (not \\\\c %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the \\\\c % character. The arguments must properly correspond (after type promotion) with the conversion specifier. After the \\\\c %, the following appear in sequence:  \n\\- Zero or more of the following flags:  \n\\<ul> \\<li> \\\\c # The value should be converted to an \"alternate form\". For c, d, i, s, and u conversions, this option has no effect.  \nFor o conversions, the precision of the number is increased to force the first character of the output string to a zero (except if a zero value is printed with an explicit precision of zero). For x and X conversions,  \na non-zero result has the string \\`0x' (or \\`0X' for X conversions) prepended to it.\\</li> \\<li> \\\\c 0 (zero) Zero padding. For all conversions, the converted value is padded on the left with zeros rather than blanks.  \nIf a precision is given with a numeric conversion (d, i,  \no, u, i, x, and X), the 0 flag is ignored.\\</li> \\<li> \\\\c - A negative field width flag; the converted value is to be left adjusted on the field boundary. The converted value is padded on the right with blanks, rather than on the left with blanks or zeros. A - overrides a 0 if both are given.\\</li> \\<li> ' ' (space) A blank should be left before a positive number produced by a signed conversion (d, or i).\\</li> \\<li> \\\\c + A sign must always be placed before a number produced by a signed conversion. A + overrides a space if both are used.\\</li> \\</ul>  \n\\- An optional decimal digit string specifying a minimum field width.  \nIf the converted value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the left-adjustment flag has been given) to fill out the field width.  \n\\- An optional precision, in the form of a period . followed by an optional digit string. If the digit string is omitted, the precision is taken as zero. This gives the minimum number of digits to appear for d, i, o, u, x, and X conversions, or the maximum number of characters to be printed from a string for \\\\c s conversions.  \n\\- An optional \\\\c l or \\\\c h length modifier, that specifies that the argument for the d, i, o, u, x, or X conversion is a \\\\c \"long int\" rather than \\\\c int. The \\\\c h is ignored, as \\\\c \"short int\" is equivalent to \\\\c int.  \n\\- A character that specifies the type of conversion to be applied.  \nThe conversion specifiers and their meanings are:  \n\\- \\\\c diouxX The int (or appropriate variant) argument is converted to signed decimal (d and i), unsigned octal (o), unsigned decimal (u), or unsigned hexadecimal (x and X) notation.  \nThe letters \"abcdef\" are used for x conversions; the letters \"ABCDEF\" are used for X conversions. The precision, if any, gives the minimum number of digits that must appear; if the converted value requires fewer digits,  \nit is padded on the left with zeros.  \n\\- \\\\c p The \\<tt>void \\*\\</tt> argument is taken as an unsigned integer,  \nand converted similarly as a \\<tt>%\\\\#x\\</tt> command would do.  \n\\- \\\\c c The \\\\c int argument is converted to an \\\\c \"unsigned char\", and the resulting character is written.  \n\\- \\\\c s The \\\\c \"char \\*\" argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating NUL character; if a precision is specified, no more than the number specified are written. If a precision is given, no null character need be present; if the precision is not specified, or is greater than the size of the array, the array must contain a terminating NUL character.  \n\\- \\\\c % A \\\\c % is written. No argument is converted. The complete conversion specification is \"%%\".  \n\\- \\\\c eE The double argument is rounded and converted in the format  \n\\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision; if the precision is missing, it is taken as 6; if the precision is zero, no decimal-point character appears. An \\\\e E conversion uses the letter \\\\c 'E' (rather than \\\\c 'e') to introduce the exponent. The exponent always contains two digits; if the value is zero,  \nthe exponent is 00.  \n\\- \\\\c fF The double argument is rounded and converted to decimal notation in the format \\\\c \"[-]ddd.ddd\", where the number of digits after the decimal-point character is equal to the precision specification.  \nIf the precision is missing, it is taken as 6; if the precision is explicitly zero, no decimal-point character appears. If a decimal point appears, at least one digit appears before it.  \n\\- \\\\c gG The double argument is converted in style \\\\c f or \\\\c e (or  \n\\\\c F or \\\\c E for \\\\c G conversions). The precision specifies the number of significant digits. If the precision is missing, 6 digits are given; if the precision is zero, it is treated as 1. Style \\\\c e is used if the exponent from its conversion is less than -4 or greater than or equal to the precision. Trailing zeros are removed from the fractional part of the result; a decimal point appears only if it is followed by at least one digit.  \n\\- \\\\c S Similar to the \\\\c s format, except the pointer is expected to point to a program-memory (ROM) string instead of a RAM string.  \nIn no case does a non-existent or small field width cause truncation of a numeric field; if the result of a conversion is wider than the field width, the field is expanded to contain the conversion result.  \nSince the full implementation of all the mentioned features becomes fairly large, three different flavours of vfprintf() can be selected using linker options. The default vfprintf() implements all the mentioned functionality except floating point conversions.  \nA minimized version of vfprintf() is available that only implements the very basic integer and string conversion facilities, but only the \\\\c # additional option can be specified using conversion flags (these flags are parsed correctly from the format specification, but then simply ignored). This version can be requested using the following \\\\ref gcc_minusW \"compiler options\":  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_min  \n\\\\endcode  \nIf the full functionality including the floating point conversions is required, the following options should be used:  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_flt -lm  \n\\\\endcode  \n\\\\par Limitations:  \n\\- The specified width and precision can be at most 255.  \n\\\\par Notes:  \n\\- For floating-point conversions, if you link default or minimized version of vfprintf(), the symbol \\\\c ? will be output and double argument will be skiped. So you output below will not be crashed.  \nFor default version the width field and the \"pad to left\" ( symbol minus ) option will work in this case.  \n\\- The \\\\c hh length modifier is ignored (\\\\c char argument is promouted to \\\\c int). More exactly, this realization does not check the number of \\\\c h symbols.  \n\\- But the \\\\c ll length modifier will to abort the output, as this realization does not operate \\\\c long \\\\c long arguments.  \n\\- The variable width or precision field (an asterisk \\\\c * symbol) is not realized and will to abort the output."},"filterText":"vfprintf","insertText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfprintf(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfprintf","textEdit":{"newText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vfprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vfprintf_P","insertText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfprintf_P(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfprintf_P","textEdit":{"newText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","filterText":"vfscanf","insertText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfscanf(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfscanf","textEdit":{"newText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of vfscanf() using a \\\\c fmt string in program memory."},"filterText":"vfscanf_P","insertText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfscanf_P(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfscanf_P","textEdit":{"newText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"wiring_private.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"kind":8,"label":"•voidFuncPtr","score":1.1826096773147583,"sortText":"4068a03fvoidFuncPtr","textEdit":{"newText":"voidFuncPtr","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vprintf performs formatted output to stream  \n\\\\c stdout, taking a variable argument list as in vfprintf().  \nSee vfprintf() for details."},"filterText":"vprintf","insertText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vprintf(const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvprintf","textEdit":{"newText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vscanf performs formatted input from stream  \n\\\\c stdin, taking a variable argument list as in vfscanf().  \nSee vfscanf() for details."},"filterText":"vscanf","insertText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vscanf(const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvscanf","textEdit":{"newText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c vsprintf(), but instead of assuming \\\\c s to be of infinite size, no more than \\\\c n characters (including the trailing NUL character) will be converted to \\\\c s.  \nReturns the number of characters that would have been written to  \n\\\\c s if there were enough space."},"filterText":"vsnprintf","insertText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsnprintf(char *__s, size_t __n, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsnprintf","textEdit":{"newText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsnprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vsnprintf_P","insertText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsnprintf_P(char *__s, size_t __n, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsnprintf_P","textEdit":{"newText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c sprintf() but takes a variable argument list for the arguments."},"filterText":"vsprintf","insertText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsprintf(char *__s, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsprintf","textEdit":{"newText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vsprintf_P","insertText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsprintf_P(char *__s, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsprintf_P","textEdit":{"newText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_arg","insertText":"va_arg(${1:v}, ${2:l})","insertTextFormat":2,"kind":1,"label":" va_arg(v, l)","score":0.53754985332489014,"sortText":"40f66322va_arg","textEdit":{"newText":"va_arg(${1:v}, ${2:l})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_copy","insertText":"va_copy(${1:d}, ${2:s})","insertTextFormat":2,"kind":1,"label":" va_copy(d, s)","score":0.53754985332489014,"sortText":"40f66322va_copy","textEdit":{"newText":"va_copy(${1:d}, ${2:s})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_end","insertText":"va_end(${1:v})","insertTextFormat":2,"kind":1,"label":" va_end(v)","score":0.53754985332489014,"sortText":"40f66322va_end","textEdit":{"newText":"va_end(${1:v})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_start","insertText":"va_start(${1:v}, ${2:l})","insertTextFormat":2,"kind":1,"label":" va_start(v, l)","score":0.53754985332489014,"sortText":"40f66322va_start","textEdit":{"newText":"va_start(${1:v}, ${2:l})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}}]}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":37,"character":1},"end":{"line":37,"character":1}},"text":"O"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 378

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'V'","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":4}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":37,"character":2},"end":{"line":37,"character":2}},"text":"I"}]},"jsonrpc":"2.0"}Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}Content-Length: 380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'VOI'","range":{"end":{"character":3,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":6}}
>>>
Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":3},"context":{"triggerKind":3}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 800

{"id":30,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"void","insertText":"void","insertTextFormat":2,"kind":14,"label":" void","score":8,"sortText":"3f2aaaaavoid","textEdit":{"newText":"void","range":{"end":{"character":3,"line":37},"start":{"character":0,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"wiring_private.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"kind":8,"label":"•voidFuncPtr","score":1.1826096773147583,"sortText":"4083b5bdvoidFuncPtr","textEdit":{"newText":"voidFuncPtr","range":{"end":{"character":3,"line":37},"start":{"character":0,"line":37}}}}]}}
>>>
Content-Length: 473

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'VOI'"}]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":37,"character":2},"end":{"line":37,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":2},"context":{"triggerKind":1}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 1051

{"id":32,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"void","insertText":"void","insertTextFormat":2,"kind":14,"label":" void","score":8,"sortText":"3f200000void","textEdit":{"newText":"void","range":{"end":{"character":2,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"volatile","insertText":"volatile","insertTextFormat":2,"kind":14,"label":" volatile","score":8,"sortText":"3f200000volatile","textEdit":{"newText":"volatile","range":{"end":{"character":2,"line":37},"start":{"character":0,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"wiring_private.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"kind":8,"label":"•voidFuncPtr","score":1.1826096773147583,"sortText":"407b8c37voidFuncPtr","textEdit":{"newText":"voidFuncPtr","range":{"end":{"character":2,"line":37},"start":{"character":0,"line":37}}}}]}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":37,"character":1},"end":{"line":37,"character":2}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":1},"context":{"triggerKind":1}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 379

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'VO'","range":{"end":{"character":2,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":7}}Content-Length: 16470

{"id":33,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"void","insertText":"void","insertTextFormat":2,"kind":14,"label":" void","score":8,"sortText":"3f000000void","textEdit":{"newText":"void","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"volatile","insertText":"volatile","insertTextFormat":2,"kind":14,"label":" volatile","score":8,"sortText":"3f000000volatile","textEdit":{"newText":"volatile","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_list","insertText":"va_list","insertTextFormat":2,"kind":8,"label":" va_list","score":1.1826096773147583,"sortText":"4068a03fva_list","textEdit":{"newText":"va_list","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\c vfprintf is the central facility of the \\\\c printf family of functions. It outputs values to \\\\c stream under control of a format string passed in \\\\c fmt. The actual values to print are passed as a variable argument list \\\\c ap.  \n\\\\c vfprintf returns the number of characters written to \\\\c stream,  \nor \\\\c EOF in case of an error. Currently, this will only happen if \\\\c stream has not been opened with write intent.  \nThe format string is composed of zero or more directives: ordinary characters (not \\\\c %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the \\\\c % character. The arguments must properly correspond (after type promotion) with the conversion specifier. After the \\\\c %, the following appear in sequence:  \n\\- Zero or more of the following flags:  \n\\<ul> \\<li> \\\\c # The value should be converted to an \"alternate form\". For c, d, i, s, and u conversions, this option has no effect.  \nFor o conversions, the precision of the number is increased to force the first character of the output string to a zero (except if a zero value is printed with an explicit precision of zero). For x and X conversions,  \na non-zero result has the string \\`0x' (or \\`0X' for X conversions) prepended to it.\\</li> \\<li> \\\\c 0 (zero) Zero padding. For all conversions, the converted value is padded on the left with zeros rather than blanks.  \nIf a precision is given with a numeric conversion (d, i,  \no, u, i, x, and X), the 0 flag is ignored.\\</li> \\<li> \\\\c - A negative field width flag; the converted value is to be left adjusted on the field boundary. The converted value is padded on the right with blanks, rather than on the left with blanks or zeros. A - overrides a 0 if both are given.\\</li> \\<li> ' ' (space) A blank should be left before a positive number produced by a signed conversion (d, or i).\\</li> \\<li> \\\\c + A sign must always be placed before a number produced by a signed conversion. A + overrides a space if both are used.\\</li> \\</ul>  \n\\- An optional decimal digit string specifying a minimum field width.  \nIf the converted value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the left-adjustment flag has been given) to fill out the field width.  \n\\- An optional precision, in the form of a period . followed by an optional digit string. If the digit string is omitted, the precision is taken as zero. This gives the minimum number of digits to appear for d, i, o, u, x, and X conversions, or the maximum number of characters to be printed from a string for \\\\c s conversions.  \n\\- An optional \\\\c l or \\\\c h length modifier, that specifies that the argument for the d, i, o, u, x, or X conversion is a \\\\c \"long int\" rather than \\\\c int. The \\\\c h is ignored, as \\\\c \"short int\" is equivalent to \\\\c int.  \n\\- A character that specifies the type of conversion to be applied.  \nThe conversion specifiers and their meanings are:  \n\\- \\\\c diouxX The int (or appropriate variant) argument is converted to signed decimal (d and i), unsigned octal (o), unsigned decimal (u), or unsigned hexadecimal (x and X) notation.  \nThe letters \"abcdef\" are used for x conversions; the letters \"ABCDEF\" are used for X conversions. The precision, if any, gives the minimum number of digits that must appear; if the converted value requires fewer digits,  \nit is padded on the left with zeros.  \n\\- \\\\c p The \\<tt>void \\*\\</tt> argument is taken as an unsigned integer,  \nand converted similarly as a \\<tt>%\\\\#x\\</tt> command would do.  \n\\- \\\\c c The \\\\c int argument is converted to an \\\\c \"unsigned char\", and the resulting character is written.  \n\\- \\\\c s The \\\\c \"char \\*\" argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating NUL character; if a precision is specified, no more than the number specified are written. If a precision is given, no null character need be present; if the precision is not specified, or is greater than the size of the array, the array must contain a terminating NUL character.  \n\\- \\\\c % A \\\\c % is written. No argument is converted. The complete conversion specification is \"%%\".  \n\\- \\\\c eE The double argument is rounded and converted in the format  \n\\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision; if the precision is missing, it is taken as 6; if the precision is zero, no decimal-point character appears. An \\\\e E conversion uses the letter \\\\c 'E' (rather than \\\\c 'e') to introduce the exponent. The exponent always contains two digits; if the value is zero,  \nthe exponent is 00.  \n\\- \\\\c fF The double argument is rounded and converted to decimal notation in the format \\\\c \"[-]ddd.ddd\", where the number of digits after the decimal-point character is equal to the precision specification.  \nIf the precision is missing, it is taken as 6; if the precision is explicitly zero, no decimal-point character appears. If a decimal point appears, at least one digit appears before it.  \n\\- \\\\c gG The double argument is converted in style \\\\c f or \\\\c e (or  \n\\\\c F or \\\\c E for \\\\c G conversions). The precision specifies the number of significant digits. If the precision is missing, 6 digits are given; if the precision is zero, it is treated as 1. Style \\\\c e is used if the exponent from its conversion is less than -4 or greater than or equal to the precision. Trailing zeros are removed from the fractional part of the result; a decimal point appears only if it is followed by at least one digit.  \n\\- \\\\c S Similar to the \\\\c s format, except the pointer is expected to point to a program-memory (ROM) string instead of a RAM string.  \nIn no case does a non-existent or small field width cause truncation of a numeric field; if the result of a conversion is wider than the field width, the field is expanded to contain the conversion result.  \nSince the full implementation of all the mentioned features becomes fairly large, three different flavours of vfprintf() can be selected using linker options. The default vfprintf() implements all the mentioned functionality except floating point conversions.  \nA minimized version of vfprintf() is available that only implements the very basic integer and string conversion facilities, but only the \\\\c # additional option can be specified using conversion flags (these flags are parsed correctly from the format specification, but then simply ignored). This version can be requested using the following \\\\ref gcc_minusW \"compiler options\":  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_min  \n\\\\endcode  \nIf the full functionality including the floating point conversions is required, the following options should be used:  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_flt -lm  \n\\\\endcode  \n\\\\par Limitations:  \n\\- The specified width and precision can be at most 255.  \n\\\\par Notes:  \n\\- For floating-point conversions, if you link default or minimized version of vfprintf(), the symbol \\\\c ? will be output and double argument will be skiped. So you output below will not be crashed.  \nFor default version the width field and the \"pad to left\" ( symbol minus ) option will work in this case.  \n\\- The \\\\c hh length modifier is ignored (\\\\c char argument is promouted to \\\\c int). More exactly, this realization does not check the number of \\\\c h symbols.  \n\\- But the \\\\c ll length modifier will to abort the output, as this realization does not operate \\\\c long \\\\c long arguments.  \n\\- The variable width or precision field (an asterisk \\\\c * symbol) is not realized and will to abort the output."},"filterText":"vfprintf","insertText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfprintf(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfprintf","textEdit":{"newText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vfprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vfprintf_P","insertText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfprintf_P(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfprintf_P","textEdit":{"newText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","filterText":"vfscanf","insertText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfscanf(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfscanf","textEdit":{"newText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of vfscanf() using a \\\\c fmt string in program memory."},"filterText":"vfscanf_P","insertText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfscanf_P(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfscanf_P","textEdit":{"newText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"wiring_private.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"kind":8,"label":"•voidFuncPtr","score":1.1826096773147583,"sortText":"4068a03fvoidFuncPtr","textEdit":{"newText":"voidFuncPtr","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vprintf performs formatted output to stream  \n\\\\c stdout, taking a variable argument list as in vfprintf().  \nSee vfprintf() for details."},"filterText":"vprintf","insertText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vprintf(const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvprintf","textEdit":{"newText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vscanf performs formatted input from stream  \n\\\\c stdin, taking a variable argument list as in vfscanf().  \nSee vfscanf() for details."},"filterText":"vscanf","insertText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vscanf(const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvscanf","textEdit":{"newText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c vsprintf(), but instead of assuming \\\\c s to be of infinite size, no more than \\\\c n characters (including the trailing NUL character) will be converted to \\\\c s.  \nReturns the number of characters that would have been written to  \n\\\\c s if there were enough space."},"filterText":"vsnprintf","insertText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsnprintf(char *__s, size_t __n, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsnprintf","textEdit":{"newText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsnprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vsnprintf_P","insertText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsnprintf_P(char *__s, size_t __n, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsnprintf_P","textEdit":{"newText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c sprintf() but takes a variable argument list for the arguments."},"filterText":"vsprintf","insertText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsprintf(char *__s, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsprintf","textEdit":{"newText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vsprintf_P","insertText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsprintf_P(char *__s, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsprintf_P","textEdit":{"newText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_arg","insertText":"va_arg(${1:v}, ${2:l})","insertTextFormat":2,"kind":1,"label":" va_arg(v, l)","score":0.53754985332489014,"sortText":"40f66322va_arg","textEdit":{"newText":"va_arg(${1:v}, ${2:l})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_copy","insertText":"va_copy(${1:d}, ${2:s})","insertTextFormat":2,"kind":1,"label":" va_copy(d, s)","score":0.53754985332489014,"sortText":"40f66322va_copy","textEdit":{"newText":"va_copy(${1:d}, ${2:s})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_end","insertText":"va_end(${1:v})","insertTextFormat":2,"kind":1,"label":" va_end(v)","score":0.53754985332489014,"sortText":"40f66322va_end","textEdit":{"newText":"va_end(${1:v})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_start","insertText":"va_start(${1:v}, ${2:l})","insertTextFormat":2,"kind":1,"label":" va_start(v, l)","score":0.53754985332489014,"sortText":"40f66322va_start","textEdit":{"newText":"va_start(${1:v}, ${2:l})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}}]}}Content-Length: 378

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'V'","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":8}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":9}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":0}},"text":"v"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":1},"context":{"triggerKind":1}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 16470

{"id":34,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"void","insertText":"void","insertTextFormat":2,"kind":14,"label":" void","score":8,"sortText":"3f000000void","textEdit":{"newText":"void","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"volatile","insertText":"volatile","insertTextFormat":2,"kind":14,"label":" volatile","score":8,"sortText":"3f000000volatile","textEdit":{"newText":"volatile","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_list","insertText":"va_list","insertTextFormat":2,"kind":8,"label":" va_list","score":1.1826096773147583,"sortText":"4068a03fva_list","textEdit":{"newText":"va_list","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\c vfprintf is the central facility of the \\\\c printf family of functions. It outputs values to \\\\c stream under control of a format string passed in \\\\c fmt. The actual values to print are passed as a variable argument list \\\\c ap.  \n\\\\c vfprintf returns the number of characters written to \\\\c stream,  \nor \\\\c EOF in case of an error. Currently, this will only happen if \\\\c stream has not been opened with write intent.  \nThe format string is composed of zero or more directives: ordinary characters (not \\\\c %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the \\\\c % character. The arguments must properly correspond (after type promotion) with the conversion specifier. After the \\\\c %, the following appear in sequence:  \n\\- Zero or more of the following flags:  \n\\<ul> \\<li> \\\\c # The value should be converted to an \"alternate form\". For c, d, i, s, and u conversions, this option has no effect.  \nFor o conversions, the precision of the number is increased to force the first character of the output string to a zero (except if a zero value is printed with an explicit precision of zero). For x and X conversions,  \na non-zero result has the string \\`0x' (or \\`0X' for X conversions) prepended to it.\\</li> \\<li> \\\\c 0 (zero) Zero padding. For all conversions, the converted value is padded on the left with zeros rather than blanks.  \nIf a precision is given with a numeric conversion (d, i,  \no, u, i, x, and X), the 0 flag is ignored.\\</li> \\<li> \\\\c - A negative field width flag; the converted value is to be left adjusted on the field boundary. The converted value is padded on the right with blanks, rather than on the left with blanks or zeros. A - overrides a 0 if both are given.\\</li> \\<li> ' ' (space) A blank should be left before a positive number produced by a signed conversion (d, or i).\\</li> \\<li> \\\\c + A sign must always be placed before a number produced by a signed conversion. A + overrides a space if both are used.\\</li> \\</ul>  \n\\- An optional decimal digit string specifying a minimum field width.  \nIf the converted value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the left-adjustment flag has been given) to fill out the field width.  \n\\- An optional precision, in the form of a period . followed by an optional digit string. If the digit string is omitted, the precision is taken as zero. This gives the minimum number of digits to appear for d, i, o, u, x, and X conversions, or the maximum number of characters to be printed from a string for \\\\c s conversions.  \n\\- An optional \\\\c l or \\\\c h length modifier, that specifies that the argument for the d, i, o, u, x, or X conversion is a \\\\c \"long int\" rather than \\\\c int. The \\\\c h is ignored, as \\\\c \"short int\" is equivalent to \\\\c int.  \n\\- A character that specifies the type of conversion to be applied.  \nThe conversion specifiers and their meanings are:  \n\\- \\\\c diouxX The int (or appropriate variant) argument is converted to signed decimal (d and i), unsigned octal (o), unsigned decimal (u), or unsigned hexadecimal (x and X) notation.  \nThe letters \"abcdef\" are used for x conversions; the letters \"ABCDEF\" are used for X conversions. The precision, if any, gives the minimum number of digits that must appear; if the converted value requires fewer digits,  \nit is padded on the left with zeros.  \n\\- \\\\c p The \\<tt>void \\*\\</tt> argument is taken as an unsigned integer,  \nand converted similarly as a \\<tt>%\\\\#x\\</tt> command would do.  \n\\- \\\\c c The \\\\c int argument is converted to an \\\\c \"unsigned char\", and the resulting character is written.  \n\\- \\\\c s The \\\\c \"char \\*\" argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating NUL character; if a precision is specified, no more than the number specified are written. If a precision is given, no null character need be present; if the precision is not specified, or is greater than the size of the array, the array must contain a terminating NUL character.  \n\\- \\\\c % A \\\\c % is written. No argument is converted. The complete conversion specification is \"%%\".  \n\\- \\\\c eE The double argument is rounded and converted in the format  \n\\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision; if the precision is missing, it is taken as 6; if the precision is zero, no decimal-point character appears. An \\\\e E conversion uses the letter \\\\c 'E' (rather than \\\\c 'e') to introduce the exponent. The exponent always contains two digits; if the value is zero,  \nthe exponent is 00.  \n\\- \\\\c fF The double argument is rounded and converted to decimal notation in the format \\\\c \"[-]ddd.ddd\", where the number of digits after the decimal-point character is equal to the precision specification.  \nIf the precision is missing, it is taken as 6; if the precision is explicitly zero, no decimal-point character appears. If a decimal point appears, at least one digit appears before it.  \n\\- \\\\c gG The double argument is converted in style \\\\c f or \\\\c e (or  \n\\\\c F or \\\\c E for \\\\c G conversions). The precision specifies the number of significant digits. If the precision is missing, 6 digits are given; if the precision is zero, it is treated as 1. Style \\\\c e is used if the exponent from its conversion is less than -4 or greater than or equal to the precision. Trailing zeros are removed from the fractional part of the result; a decimal point appears only if it is followed by at least one digit.  \n\\- \\\\c S Similar to the \\\\c s format, except the pointer is expected to point to a program-memory (ROM) string instead of a RAM string.  \nIn no case does a non-existent or small field width cause truncation of a numeric field; if the result of a conversion is wider than the field width, the field is expanded to contain the conversion result.  \nSince the full implementation of all the mentioned features becomes fairly large, three different flavours of vfprintf() can be selected using linker options. The default vfprintf() implements all the mentioned functionality except floating point conversions.  \nA minimized version of vfprintf() is available that only implements the very basic integer and string conversion facilities, but only the \\\\c # additional option can be specified using conversion flags (these flags are parsed correctly from the format specification, but then simply ignored). This version can be requested using the following \\\\ref gcc_minusW \"compiler options\":  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_min  \n\\\\endcode  \nIf the full functionality including the floating point conversions is required, the following options should be used:  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_flt -lm  \n\\\\endcode  \n\\\\par Limitations:  \n\\- The specified width and precision can be at most 255.  \n\\\\par Notes:  \n\\- For floating-point conversions, if you link default or minimized version of vfprintf(), the symbol \\\\c ? will be output and double argument will be skiped. So you output below will not be crashed.  \nFor default version the width field and the \"pad to left\" ( symbol minus ) option will work in this case.  \n\\- The \\\\c hh length modifier is ignored (\\\\c char argument is promouted to \\\\c int). More exactly, this realization does not check the number of \\\\c h symbols.  \n\\- But the \\\\c ll length modifier will to abort the output, as this realization does not operate \\\\c long \\\\c long arguments.  \n\\- The variable width or precision field (an asterisk \\\\c * symbol) is not realized and will to abort the output."},"filterText":"vfprintf","insertText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfprintf(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfprintf","textEdit":{"newText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vfprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vfprintf_P","insertText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfprintf_P(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfprintf_P","textEdit":{"newText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","filterText":"vfscanf","insertText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfscanf(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfscanf","textEdit":{"newText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of vfscanf() using a \\\\c fmt string in program memory."},"filterText":"vfscanf_P","insertText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vfscanf_P(FILE *__stream, const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvfscanf_P","textEdit":{"newText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"wiring_private.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"kind":8,"label":"•voidFuncPtr","score":1.1826096773147583,"sortText":"4068a03fvoidFuncPtr","textEdit":{"newText":"voidFuncPtr","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vprintf performs formatted output to stream  \n\\\\c stdout, taking a variable argument list as in vfprintf().  \nSee vfprintf() for details."},"filterText":"vprintf","insertText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vprintf(const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvprintf","textEdit":{"newText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vscanf performs formatted input from stream  \n\\\\c stdin, taking a variable argument list as in vfscanf().  \nSee vfscanf() for details."},"filterText":"vscanf","insertText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"kind":3,"label":" vscanf(const char *__fmt, va_list __ap)","score":1.1826096773147583,"sortText":"4068a03fvscanf","textEdit":{"newText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c vsprintf(), but instead of assuming \\\\c s to be of infinite size, no more than \\\\c n characters (including the trailing NUL character) will be converted to \\\\c s.  \nReturns the number of characters that would have been written to  \n\\\\c s if there were enough space."},"filterText":"vsnprintf","insertText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsnprintf(char *__s, size_t __n, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsnprintf","textEdit":{"newText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsnprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vsnprintf_P","insertText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsnprintf_P(char *__s, size_t __n, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsnprintf_P","textEdit":{"newText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c sprintf() but takes a variable argument list for the arguments."},"filterText":"vsprintf","insertText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsprintf(char *__s, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsprintf","textEdit":{"newText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"vsprintf_P","insertText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"kind":3,"label":" vsprintf_P(char *__s, const char *__fmt, va_list ap)","score":1.1826096773147583,"sortText":"4068a03fvsprintf_P","textEdit":{"newText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_arg","insertText":"va_arg(${1:v}, ${2:l})","insertTextFormat":2,"kind":1,"label":" va_arg(v, l)","score":0.53754985332489014,"sortText":"40f66322va_arg","textEdit":{"newText":"va_arg(${1:v}, ${2:l})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_copy","insertText":"va_copy(${1:d}, ${2:s})","insertTextFormat":2,"kind":1,"label":" va_copy(d, s)","score":0.53754985332489014,"sortText":"40f66322va_copy","textEdit":{"newText":"va_copy(${1:d}, ${2:s})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_end","insertText":"va_end(${1:v})","insertTextFormat":2,"kind":1,"label":" va_end(v)","score":0.53754985332489014,"sortText":"40f66322va_end","textEdit":{"newText":"va_end(${1:v})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}},{"filterText":"va_start","insertText":"va_start(${1:v}, ${2:l})","insertTextFormat":2,"kind":1,"label":" va_start(v, l)","score":0.53754985332489014,"sortText":"40f66322va_start","textEdit":{"newText":"va_start(${1:v}, ${2:l})","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}}}}]}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":37,"character":1},"end":{"line":37,"character":1}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 379

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'v'","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":10}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":37,"character":2},"end":{"line":37,"character":2}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 644

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'voi'; did you mean 'void'? (fix available)","range":{"end":{"character":3,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'void' declaration specifier","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":12}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'void' declaration specifier","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":13}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'void' declaration specifier","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":14}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":5}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":6},"context":{"triggerKind":1}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 29536

{"id":35,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"double","documentation":{"kind":"markdown","value":"The tan() function returns the tangent of \\\\a \\_\\_x, measured in radians."},"filterText":"tan","insertText":"tan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tan(double __x)","score":1.5037370920181274,"sortText":"403f858btan","textEdit":{"newText":"tan(${1:double __x})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tanh() function returns the hyperbolic tangent of \\\\a \\_\\_x."},"filterText":"tanh","insertText":"tanh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tanh(double __x)","score":1.5037370920181274,"sortText":"403f858btanh","textEdit":{"newText":"tanh(${1:double __x})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toAscii","insertText":"toAscii(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toAscii(int c)","score":1.5037370920181274,"sortText":"403f858btoAscii","textEdit":{"newText":"toAscii(${1:int c})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toLowerCase","insertText":"toLowerCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toLowerCase(int c)","score":1.5037370920181274,"sortText":"403f858btoLowerCase","textEdit":{"newText":"toLowerCase(${1:int c})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toUpperCase","insertText":"toUpperCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toUpperCase(int c)","score":1.5037370920181274,"sortText":"403f858btoUpperCase","textEdit":{"newText":"toUpperCase(${1:int c})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The trunc() function rounds \\\\a \\_\\_x to the nearest integer not larger in absolute value."},"filterText":"trunc","insertText":"trunc(${1:double __x})","insertTextFormat":2,"kind":3,"label":" trunc(double __x)","score":1.5037370920181274,"sortText":"403f858btrunc","textEdit":{"newText":"trunc(${1:double __x})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"tx_buffer_index_t","insertText":"tx_buffer_index_t","insertTextFormat":2,"kind":8,"label":"•tx_buffer_index_t","score":1.5037370920181274,"sortText":"403f858btx_buffer_index_t","textEdit":{"newText":"tx_buffer_index_t","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts \\\\c c to a 7-bit unsigned char value that fits into the ASCII character set, by clearing the high-order bits.  \n\\\\warning Many people will be unhappy if you use this function. This function will convert accented letters into random characters."},"filterText":"toascii","insertText":"toascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toascii(int __c)","score":1.2690916061401367,"sortText":"405d8e68toascii","textEdit":{"newText":"toascii(${1:int __c})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to lower case, if possible."},"filterText":"tolower","insertText":"tolower(${1:int __c})","insertTextFormat":2,"kind":3,"label":" tolower(int __c)","score":1.2690916061401367,"sortText":"405d8e68tolower","textEdit":{"newText":"tolower(${1:int __c})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nfrequency (in hertz) and duration (in milliseconds)."},"filterText":"tone","insertText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","insertTextFormat":2,"kind":3,"label":" tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)","score":1.2690916061401367,"sortText":"405d8e68tone","textEdit":{"newText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to upper case, if possible."},"filterText":"toupper","insertText":"toupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toupper(int __c)","score":1.2690916061401367,"sortText":"405d8e68toupper","textEdit":{"newText":"toupper(${1:int __c})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"FILE *","filterText":"tmpfile","insertText":"tmpfile()","insertTextFormat":2,"kind":3,"label":" tmpfile()","score":1.1826096773147583,"sortText":"4068a03ftmpfile","textEdit":{"newText":"tmpfile()","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"detail":"char *","filterText":"tmpnam","insertText":"tmpnam(${1:char *s})","insertTextFormat":2,"kind":3,"label":" tmpnam(char *s)","score":1.1826096773147583,"sortText":"4068a03ftmpnam","textEdit":{"newText":"tmpnam(${1:char *s})","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCCR0B","insertText":"TCCR0B","insertTextFormat":2,"kind":1,"label":" TCCR0B","score":0.57685983180999756,"sortText":"40ec52eaTCCR0B","textEdit":{"newText":"TCCR0B","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCCR1A","insertText":"TCCR1A","insertTextFormat":2,"kind":1,"label":" TCCR1A","score":0.57685983180999756,"sortText":"40ec52eaTCCR1A","textEdit":{"newText":"TCCR1A","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCN2UB","insertText":"TCN2UB","insertTextFormat":2,"kind":1,"label":" TCN2UB","score":0.57685983180999756,"sortText":"40ec52eaTCN2UB","textEdit":{"newText":"TCN2UB","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT0","insertText":"TCNT0","insertTextFormat":2,"kind":1,"label":" TCNT0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0","textEdit":{"newText":"TCNT0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT0_0","insertText":"TCNT0_0","insertTextFormat":2,"kind":1,"label":" TCNT0_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_0","textEdit":{"newText":"TCNT0_0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT0_2","insertText":"TCNT0_2","insertTextFormat":2,"kind":1,"label":" TCNT0_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_2","textEdit":{"newText":"TCNT0_2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT0_3","insertText":"TCNT0_3","insertTextFormat":2,"kind":1,"label":" TCNT0_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_3","textEdit":{"newText":"TCNT0_3","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT0_5","insertText":"TCNT0_5","insertTextFormat":2,"kind":1,"label":" TCNT0_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_5","textEdit":{"newText":"TCNT0_5","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT0_6","insertText":"TCNT0_6","insertTextFormat":2,"kind":1,"label":" TCNT0_6","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_6","textEdit":{"newText":"TCNT0_6","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT0_7","insertText":"TCNT0_7","insertTextFormat":2,"kind":1,"label":" TCNT0_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_7","textEdit":{"newText":"TCNT0_7","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H","insertText":"TCNT1H","insertTextFormat":2,"kind":1,"label":" TCNT1H","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H","textEdit":{"newText":"TCNT1H","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H0","insertText":"TCNT1H0","insertTextFormat":2,"kind":1,"label":" TCNT1H0","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H0","textEdit":{"newText":"TCNT1H0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H1","insertText":"TCNT1H1","insertTextFormat":2,"kind":1,"label":" TCNT1H1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H1","textEdit":{"newText":"TCNT1H1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H2","insertText":"TCNT1H2","insertTextFormat":2,"kind":1,"label":" TCNT1H2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H2","textEdit":{"newText":"TCNT1H2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H3","insertText":"TCNT1H3","insertTextFormat":2,"kind":1,"label":" TCNT1H3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H3","textEdit":{"newText":"TCNT1H3","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H4","insertText":"TCNT1H4","insertTextFormat":2,"kind":1,"label":" TCNT1H4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H4","textEdit":{"newText":"TCNT1H4","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H5","insertText":"TCNT1H5","insertTextFormat":2,"kind":1,"label":" TCNT1H5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H5","textEdit":{"newText":"TCNT1H5","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1H6","insertText":"TCNT1H6","insertTextFormat":2,"kind":1,"label":" TCNT1H6","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H6","textEdit":{"newText":"TCNT1H6","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1L","insertText":"TCNT1L","insertTextFormat":2,"kind":1,"label":" TCNT1L","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L","textEdit":{"newText":"TCNT1L","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1L1","insertText":"TCNT1L1","insertTextFormat":2,"kind":1,"label":" TCNT1L1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L1","textEdit":{"newText":"TCNT1L1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1L2","insertText":"TCNT1L2","insertTextFormat":2,"kind":1,"label":" TCNT1L2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L2","textEdit":{"newText":"TCNT1L2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1L3","insertText":"TCNT1L3","insertTextFormat":2,"kind":1,"label":" TCNT1L3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L3","textEdit":{"newText":"TCNT1L3","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1L4","insertText":"TCNT1L4","insertTextFormat":2,"kind":1,"label":" TCNT1L4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L4","textEdit":{"newText":"TCNT1L4","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1L5","insertText":"TCNT1L5","insertTextFormat":2,"kind":1,"label":" TCNT1L5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L5","textEdit":{"newText":"TCNT1L5","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT1L6","insertText":"TCNT1L6","insertTextFormat":2,"kind":1,"label":" TCNT1L6","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L6","textEdit":{"newText":"TCNT1L6","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2","insertText":"TCNT2","insertTextFormat":2,"kind":1,"label":" TCNT2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2","textEdit":{"newText":"TCNT2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2_0","insertText":"TCNT2_0","insertTextFormat":2,"kind":1,"label":" TCNT2_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_0","textEdit":{"newText":"TCNT2_0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2_1","insertText":"TCNT2_1","insertTextFormat":2,"kind":1,"label":" TCNT2_1","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_1","textEdit":{"newText":"TCNT2_1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2_2","insertText":"TCNT2_2","insertTextFormat":2,"kind":1,"label":" TCNT2_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_2","textEdit":{"newText":"TCNT2_2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2_3","insertText":"TCNT2_3","insertTextFormat":2,"kind":1,"label":" TCNT2_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_3","textEdit":{"newText":"TCNT2_3","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2_4","insertText":"TCNT2_4","insertTextFormat":2,"kind":1,"label":" TCNT2_4","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_4","textEdit":{"newText":"TCNT2_4","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2_5","insertText":"TCNT2_5","insertTextFormat":2,"kind":1,"label":" TCNT2_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_5","textEdit":{"newText":"TCNT2_5","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCNT2_7","insertText":"TCNT2_7","insertTextFormat":2,"kind":1,"label":" TCNT2_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_7","textEdit":{"newText":"TCNT2_7","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCR2AUB","insertText":"TCR2AUB","insertTextFormat":2,"kind":1,"label":" TCR2AUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2AUB","textEdit":{"newText":"TCR2AUB","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TCR2BUB","insertText":"TCR2BUB","insertTextFormat":2,"kind":1,"label":" TCR2BUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2BUB","textEdit":{"newText":"TCR2BUB","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIFR0","insertText":"TIFR0","insertTextFormat":2,"kind":1,"label":" TIFR0","score":0.57685983180999756,"sortText":"40ec52eaTIFR0","textEdit":{"newText":"TIFR0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIFR1","insertText":"TIFR1","insertTextFormat":2,"kind":1,"label":" TIFR1","score":0.57685983180999756,"sortText":"40ec52eaTIFR1","textEdit":{"newText":"TIFR1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIFR2","insertText":"TIFR2","insertTextFormat":2,"kind":1,"label":" TIFR2","score":0.57685983180999756,"sortText":"40ec52eaTIFR2","textEdit":{"newText":"TIFR2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER0_COMPA_vect_num","insertText":"TIMER0_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPA_vect_num","textEdit":{"newText":"TIMER0_COMPA_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER0_COMPB_vect","insertText":"TIMER0_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPB_vect","textEdit":{"newText":"TIMER0_COMPB_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER0_OVF_vect","insertText":"TIMER0_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_OVF_vect","textEdit":{"newText":"TIMER0_OVF_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER0_OVF_vect_num","insertText":"TIMER0_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_OVF_vect_num","textEdit":{"newText":"TIMER0_OVF_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER1_CAPT_vect","insertText":"TIMER1_CAPT_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_CAPT_vect","textEdit":{"newText":"TIMER1_CAPT_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER1_CAPT_vect_num","insertText":"TIMER1_CAPT_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_CAPT_vect_num","textEdit":{"newText":"TIMER1_CAPT_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER1_COMPA_vect","insertText":"TIMER1_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPA_vect","textEdit":{"newText":"TIMER1_COMPA_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER1_COMPA_vect_num","insertText":"TIMER1_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPA_vect_num","textEdit":{"newText":"TIMER1_COMPA_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER1_COMPB_vect","insertText":"TIMER1_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPB_vect","textEdit":{"newText":"TIMER1_COMPB_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER1_COMPB_vect_num","insertText":"TIMER1_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPB_vect_num","textEdit":{"newText":"TIMER1_COMPB_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER1_OVF_vect_num","insertText":"TIMER1_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_OVF_vect_num","textEdit":{"newText":"TIMER1_OVF_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER2_COMPA_vect","insertText":"TIMER2_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect","textEdit":{"newText":"TIMER2_COMPA_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER2_COMPA_vect_num","insertText":"TIMER2_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect_num","textEdit":{"newText":"TIMER2_COMPA_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER2_COMPB_vect","insertText":"TIMER2_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPB_vect","textEdit":{"newText":"TIMER2_COMPB_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER2_COMPB_vect_num","insertText":"TIMER2_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPB_vect_num","textEdit":{"newText":"TIMER2_COMPB_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER2_OVF_vect","insertText":"TIMER2_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect","textEdit":{"newText":"TIMER2_OVF_vect","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMER2_OVF_vect_num","insertText":"TIMER2_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect_num","textEdit":{"newText":"TIMER2_OVF_vect_num","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMSK0","insertText":"TIMSK0","insertTextFormat":2,"kind":1,"label":" TIMSK0","score":0.57685983180999756,"sortText":"40ec52eaTIMSK0","textEdit":{"newText":"TIMSK0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TIMSK1","insertText":"TIMSK1","insertTextFormat":2,"kind":1,"label":" TIMSK1","score":0.57685983180999756,"sortText":"40ec52eaTIMSK1","textEdit":{"newText":"TIMSK1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TOV0","insertText":"TOV0","insertTextFormat":2,"kind":1,"label":" TOV0","score":0.57685983180999756,"sortText":"40ec52eaTOV0","textEdit":{"newText":"TOV0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TOV1","insertText":"TOV1","insertTextFormat":2,"kind":1,"label":" TOV1","score":0.57685983180999756,"sortText":"40ec52eaTOV1","textEdit":{"newText":"TOV1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TSM","insertText":"TSM","insertTextFormat":2,"kind":1,"label":" TSM","score":0.57685983180999756,"sortText":"40ec52eaTSM","textEdit":{"newText":"TSM","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWA1","insertText":"TWA1","insertTextFormat":2,"kind":1,"label":" TWA1","score":0.57685983180999756,"sortText":"40ec52eaTWA1","textEdit":{"newText":"TWA1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWA2","insertText":"TWA2","insertTextFormat":2,"kind":1,"label":" TWA2","score":0.57685983180999756,"sortText":"40ec52eaTWA2","textEdit":{"newText":"TWA2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWA4","insertText":"TWA4","insertTextFormat":2,"kind":1,"label":" TWA4","score":0.57685983180999756,"sortText":"40ec52eaTWA4","textEdit":{"newText":"TWA4","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWA5","insertText":"TWA5","insertTextFormat":2,"kind":1,"label":" TWA5","score":0.57685983180999756,"sortText":"40ec52eaTWA5","textEdit":{"newText":"TWA5","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWAM0","insertText":"TWAM0","insertTextFormat":2,"kind":1,"label":" TWAM0","score":0.57685983180999756,"sortText":"40ec52eaTWAM0","textEdit":{"newText":"TWAM0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWAM1","insertText":"TWAM1","insertTextFormat":2,"kind":1,"label":" TWAM1","score":0.57685983180999756,"sortText":"40ec52eaTWAM1","textEdit":{"newText":"TWAM1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWAM4","insertText":"TWAM4","insertTextFormat":2,"kind":1,"label":" TWAM4","score":0.57685983180999756,"sortText":"40ec52eaTWAM4","textEdit":{"newText":"TWAM4","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWAM5","insertText":"TWAM5","insertTextFormat":2,"kind":1,"label":" TWAM5","score":0.57685983180999756,"sortText":"40ec52eaTWAM5","textEdit":{"newText":"TWAM5","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWAMR","insertText":"TWAMR","insertTextFormat":2,"kind":1,"label":" TWAMR","score":0.57685983180999756,"sortText":"40ec52eaTWAMR","textEdit":{"newText":"TWAMR","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWAR","insertText":"TWAR","insertTextFormat":2,"kind":1,"label":" TWAR","score":0.57685983180999756,"sortText":"40ec52eaTWAR","textEdit":{"newText":"TWAR","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWBR","insertText":"TWBR","insertTextFormat":2,"kind":1,"label":" TWBR","score":0.57685983180999756,"sortText":"40ec52eaTWBR","textEdit":{"newText":"TWBR","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWBR0","insertText":"TWBR0","insertTextFormat":2,"kind":1,"label":" TWBR0","score":0.57685983180999756,"sortText":"40ec52eaTWBR0","textEdit":{"newText":"TWBR0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWBR1","insertText":"TWBR1","insertTextFormat":2,"kind":1,"label":" TWBR1","score":0.57685983180999756,"sortText":"40ec52eaTWBR1","textEdit":{"newText":"TWBR1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWBR4","insertText":"TWBR4","insertTextFormat":2,"kind":1,"label":" TWBR4","score":0.57685983180999756,"sortText":"40ec52eaTWBR4","textEdit":{"newText":"TWBR4","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWBR6","insertText":"TWBR6","insertTextFormat":2,"kind":1,"label":" TWBR6","score":0.57685983180999756,"sortText":"40ec52eaTWBR6","textEdit":{"newText":"TWBR6","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWBR7","insertText":"TWBR7","insertTextFormat":2,"kind":1,"label":" TWBR7","score":0.57685983180999756,"sortText":"40ec52eaTWBR7","textEdit":{"newText":"TWBR7","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWD0","insertText":"TWD0","insertTextFormat":2,"kind":1,"label":" TWD0","score":0.57685983180999756,"sortText":"40ec52eaTWD0","textEdit":{"newText":"TWD0","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWD1","insertText":"TWD1","insertTextFormat":2,"kind":1,"label":" TWD1","score":0.57685983180999756,"sortText":"40ec52eaTWD1","textEdit":{"newText":"TWD1","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWD2","insertText":"TWD2","insertTextFormat":2,"kind":1,"label":" TWD2","score":0.57685983180999756,"sortText":"40ec52eaTWD2","textEdit":{"newText":"TWD2","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWD4","insertText":"TWD4","insertTextFormat":2,"kind":1,"label":" TWD4","score":0.57685983180999756,"sortText":"40ec52eaTWD4","textEdit":{"newText":"TWD4","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWD6","insertText":"TWD6","insertTextFormat":2,"kind":1,"label":" TWD6","score":0.57685983180999756,"sortText":"40ec52eaTWD6","textEdit":{"newText":"TWD6","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWD7","insertText":"TWD7","insertTextFormat":2,"kind":1,"label":" TWD7","score":0.57685983180999756,"sortText":"40ec52eaTWD7","textEdit":{"newText":"TWD7","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWDR","insertText":"TWDR","insertTextFormat":2,"kind":1,"label":" TWDR","score":0.57685983180999756,"sortText":"40ec52eaTWDR","textEdit":{"newText":"TWDR","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWEA","insertText":"TWEA","insertTextFormat":2,"kind":1,"label":" TWEA","score":0.57685983180999756,"sortText":"40ec52eaTWEA","textEdit":{"newText":"TWEA","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWEN","insertText":"TWEN","insertTextFormat":2,"kind":1,"label":" TWEN","score":0.57685983180999756,"sortText":"40ec52eaTWEN","textEdit":{"newText":"TWEN","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWIE","insertText":"TWIE","insertTextFormat":2,"kind":1,"label":" TWIE","score":0.57685983180999756,"sortText":"40ec52eaTWIE","textEdit":{"newText":"TWIE","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"TWINT","insertText":"TWINT","insertTextFormat":2,"kind":1,"label":" TWINT","score":0.57685983180999756,"sortText":"40ec52eaTWINT","textEdit":{"newText":"TWINT","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}}}}]}}Content-Length: 632

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":6,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":15}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":37,"character":6},"end":{"line":37,"character":6}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":7},"context":{"triggerKind":3}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 2062

{"id":36,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"double","documentation":{"kind":"markdown","value":"The tan() function returns the tangent of \\\\a \\_\\_x, measured in radians."},"filterText":"tan","insertText":"tan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tan(double __x)","score":1.5037370920181274,"sortText":"403f858btan","textEdit":{"newText":"tan(${1:double __x})","range":{"end":{"character":7,"line":37},"start":{"character":5,"line":37}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tanh() function returns the hyperbolic tangent of \\\\a \\_\\_x."},"filterText":"tanh","insertText":"tanh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tanh(double __x)","score":1.5037370920181274,"sortText":"403f858btanh","textEdit":{"newText":"tanh(${1:double __x})","range":{"end":{"character":7,"line":37},"start":{"character":5,"line":37}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nConverts c to a 7-bit unsigned char value that fits into the ASCII character set, by clearing the high-order bits."},"filterText":"toAscii","insertText":"toAscii(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toAscii(int c)","score":1.5037373304367065,"sortText":"406fa427toAscii","textEdit":{"newText":"toAscii(${1:int c})","range":{"end":{"character":7,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"tanf","insertText":"tanf","insertTextFormat":2,"kind":1,"label":" tanf","score":0.68351686000823975,"sortText":"40d1050atanf","textEdit":{"newText":"tanf","range":{"end":{"character":7,"line":37},"start":{"character":5,"line":37}}}},{"filterText":"tanhf","insertText":"tanhf","insertTextFormat":2,"kind":1,"label":" tanhf","score":0.68351686000823975,"sortText":"40d1050atanhf","textEdit":{"newText":"tanhf","range":{"end":{"character":7,"line":37},"start":{"character":5,"line":37}}}}]}}Content-Length: 632

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":7,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":16}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":37,"character":7},"end":{"line":37,"character":7}},"text":"c"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 632

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":8,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":17}}
>>>
Content-Length: 499

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":8},"end":{"line":37,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":8}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"}]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":37,"character":8},"end":{"line":37,"character":8}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 632

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":9,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":18}}
>>>
Content-Length: 499

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":9}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"}]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"text":"C"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":10},"context":{"triggerKind":1}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":39,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":10,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":19}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":10}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":11},"context":{"triggerKind":1}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":40,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":11,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":20}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":37,"character":11},"end":{"line":37,"character":11}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":12},"context":{"triggerKind":1}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":41,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":37,"character":12},"end":{"line":37,"character":12}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":13},"context":{"triggerKind":1}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":42,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":12,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":21}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":37,"character":13},"end":{"line":37,"character":13}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":13,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":22}}
>>>
Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":14},"context":{"triggerKind":1}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":43,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":14,"line":37},"start":{"character":5,"line":37}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":23}}
>>>
Content-Length: 502

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":14},"end":{"line":37,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":14}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"}]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":37,"character":14},"end":{"line":37,"character":14}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":16}},"rangeLength":1,"text":")"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":24}}
>>>
Content-Length: 240

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":16}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":45,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":16}},"context":{"diagnostics":[]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":16}},"text":"Ơ"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":17},"context":{"triggerKind":1}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":47,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 408

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_fn_body","message":"Expected function body after function declarator","range":{"end":{"character":17,"line":37},"start":{"character":16,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":26}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":16}},"text":"{}"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":28}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":17},"end":{"line":37,"character":17}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 322

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":37,"character":17},"end":{"line":37,"character":17}},"text":"\r\n  \r\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":29}}
>>>
Content-Length: 420

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":2}},"text":"\r\n  "},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":31}}
>>>
Content-Length: 445

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":2}},"rangeLength":2,"text":""},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":0}},"text":"+CCLK: \"21/08/05,19:28:10+28\""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 795

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":6,"line":38},"start":{"character":5,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":5,"line":38},"start":{"character":1,"line":38}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":33}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":38,"character":29},"end":{"line":38,"character":29}},"context":{"diagnostics":[]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 1935

{"id":50,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":14,"line":37},"start":{"character":5,"line":37}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":44},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":8,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":17,"line":54},"start":{"character":5,"line":54}}}]}
>>>
Content-Length: 1599

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":34},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 27 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n}\nvoid tachChuoi(){\n+CCLK: \"21/08/05,19:28:10+28\"\n\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":20}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 39

{"id":51,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":52,"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":48},"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":6,"line":34},"start":{"character":5,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":5,"line":34},"start":{"character":1,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":34}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":0}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":52,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}Content-Length: 39

{"id":53,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":49},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":54,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":55,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":56,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":0}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":50},"jsonrpc":"2.0"}Content-Length: 487

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":1},"end":{"line":34,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":34,"character":1},"end":{"line":34,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'CCLK'"}]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":34},"start":{"character":6,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":6,"line":34},"start":{"character":2,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":35}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":34,"character":1},"end":{"line":34,"character":1}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":51},"jsonrpc":"2.0"}Content-Length: 487

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":34,"character":1},"end":{"line":34,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'CCLK'"}]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":7,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":34},"start":{"character":3,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":36}}Content-Length: 988

{"id":59,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"context":{"diagnostics":[]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":61,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":37,"character":11},"end":{"line":37,"character":11}},"context":{"diagnostics":[]}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":31,"character":10}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":63,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":27,"character":3}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"id":64,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mySerial`  \n\n---\nType: `class SoftwareSerial`  \nSIM800L Tx & Rx is connected to Arduino #3 & #2  \n\n---\n```cpp\nSoftwareSerial mySerial(3, 2)\n```"},"range":{"end":{"character":10,"line":27},"start":{"character":2,"line":27}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":27,"character":1}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":65,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":27,"character":2}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 563

{"id":66,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":1,"range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}},{"kind":1,"range":{"end":{"character":10,"line":23},"start":{"character":2,"line":23}}},{"kind":1,"range":{"end":{"character":10,"line":25},"start":{"character":2,"line":25}}},{"kind":1,"range":{"end":{"character":10,"line":27},"start":{"character":2,"line":27}}},{"kind":1,"range":{"end":{"character":10,"line":29},"start":{"character":2,"line":29}}}]}
>>>
Content-Length: 497

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":27,"character":2},"end":{"line":28,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'updateSerial'"}]}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"id":67,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":17,"line":28},"start":{"character":2,"line":27}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":27,"character":2},"end":{"line":27,"character":30}},"context":{"diagnostics":[]}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":68,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":27,"character":29}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":69,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":30,"line":27},"start":{"character":29,"line":27}}}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"context":{"diagnostics":[]}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":70,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":30},"end":{"line":0,"character":30}},"context":{"diagnostics":[]}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":71,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":17}},"context":{"diagnostics":[]}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":72,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":17}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":37}}
>>>
Content-Length: 340

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"text":"mySerial.println(\"AT+CCID\");"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":38}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":30},"end":{"line":34,"character":30}},"context":{"diagnostics":[]}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":73,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":74,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 1635

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":39},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 27 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCID\");\n  +CCLK: \"21/08/05,19:28:10+28\"\n\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":30}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":75,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":39}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":72},"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":76,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":29}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":77,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":30,"line":34},"start":{"character":29,"line":34}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":78,"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":73},"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":78,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":28}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":79,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":29,"line":34},"start":{"character":28,"line":34}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":80,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":30},"end":{"line":34,"character":30}},"context":{"diagnostics":[]}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":81,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":26}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":82,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":27}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":83,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":27},"end":{"line":34,"character":27}},"context":{"diagnostics":[]}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":24},"end":{"line":34,"character":27}},"context":{"diagnostics":[]}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":85,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":27,"line":34},"start":{"character":24,"line":34}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":23},"end":{"line":34,"character":27}},"context":{"diagnostics":[]}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":86,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":27,"line":34},"start":{"character":23,"line":34}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":23}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":87,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":34,"character":23},"end":{"line":34,"character":27}},"rangeLength":4,"text":"C"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":40}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":34,"character":24},"end":{"line":34,"character":24}},"text":"C"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":41}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":34,"character":25},"end":{"line":34,"character":25}},"text":"L"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":34,"character":26},"end":{"line":34,"character":26}},"text":"K"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":42}}Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":43}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":27},"end":{"line":34,"character":27}},"context":{"diagnostics":[]}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":88,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":89,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":34,"character":27},"end":{"line":34,"character":27}},"text":"?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":44}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":28},"end":{"line":34,"character":28}},"context":{"diagnostics":[]}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":90,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":91,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":31},"end":{"line":34,"character":31}},"context":{"diagnostics":[]}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":92,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":34,"character":31},"end":{"line":34,"character":31}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":35},"start":{"character":7,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":45}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":34,"character":32},"end":{"line":34,"character":32}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":33},"context":{"triggerKind":1}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 6509

{"id":93,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"new","insertText":"new ${1:type}[${2:size}](${0:expressions})","insertTextFormat":2,"kind":15,"label":" new type[size](expressions)","score":8,"sortText":"3f000000new","textEdit":{"newText":"new ${1:type}[${2:size}](${0:expressions})","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"new","insertText":"new ${1:type}(${0:expressions})","insertTextFormat":2,"kind":15,"label":" new type(expressions)","score":8,"sortText":"3f000000new","textEdit":{"newText":"new ${1:type}(${0:expressions})","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"detail":"bool","filterText":"noexcept","insertText":"noexcept(${0:expression})","insertTextFormat":2,"kind":15,"label":" noexcept(expression)","score":8,"sortText":"3f000000noexcept","textEdit":{"newText":"noexcept(${0:expression})","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"detail":"std::nullptr_t","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"kind":15,"label":" nullptr","score":8,"sortText":"3f000000nullptr","textEdit":{"newText":"nullptr","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"noTone","insertText":"noTone(${1:uint8_t _pin})","insertTextFormat":2,"kind":3,"label":" noTone(uint8_t _pin)","score":1.2690916061401367,"sortText":"405d8e68noTone","textEdit":{"newText":"noTone(${1:uint8_t _pin})","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"kind":8,"label":" nullptr_t","score":1.2690916061401367,"sortText":"405d8e68nullptr_t","textEdit":{"newText":"nullptr_t","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"NAN","insertText":"NAN","insertTextFormat":2,"kind":1,"label":" NAN","score":0.68351686000823975,"sortText":"40d1050aNAN","textEdit":{"newText":"NAN","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_AN_INTERRUPT","insertText":"NOT_AN_INTERRUPT","insertTextFormat":2,"kind":1,"label":" NOT_AN_INTERRUPT","score":0.57685983180999756,"sortText":"40ec52eaNOT_AN_INTERRUPT","textEdit":{"newText":"NOT_AN_INTERRUPT","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_A_PIN","insertText":"NOT_A_PIN","insertTextFormat":2,"kind":1,"label":" NOT_A_PIN","score":0.57685983180999756,"sortText":"40ec52eaNOT_A_PIN","textEdit":{"newText":"NOT_A_PIN","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_A_PORT","insertText":"NOT_A_PORT","insertTextFormat":2,"kind":1,"label":" NOT_A_PORT","score":0.57685983180999756,"sortText":"40ec52eaNOT_A_PORT","textEdit":{"newText":"NOT_A_PORT","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_ON_TIMER","insertText":"NOT_ON_TIMER","insertTextFormat":2,"kind":1,"label":" NOT_ON_TIMER","score":0.57685983180999756,"sortText":"40ec52eaNOT_ON_TIMER","textEdit":{"newText":"NOT_ON_TIMER","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"filterText":"NO_IGNORE_CHAR","insertText":"NO_IGNORE_CHAR","insertTextFormat":2,"kind":1,"label":"•NO_IGNORE_CHAR","score":0.57685983180999756,"sortText":"40ec52eaNO_IGNORE_CHAR","textEdit":{"newText":"NO_IGNORE_CHAR","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"NULL","insertText":"NULL","insertTextFormat":2,"kind":1,"label":" NULL","score":0.57685983180999756,"sortText":"40ec52eaNULL","textEdit":{"newText":"NULL","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"noInterrupts","insertText":"noInterrupts()","insertTextFormat":2,"kind":1,"label":" noInterrupts()","score":0.57685983180999756,"sortText":"40ec52eanoInterrupts","textEdit":{"newText":"noInterrupts()","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"kind":1,"label":" NUM_ANALOG_INPUTS","score":0.50536555051803589,"sortText":"40fea05dNUM_ANALOG_INPUTS","textEdit":{"newText":"NUM_ANALOG_INPUTS","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"kind":1,"label":" NUM_DIGITAL_PINS","score":0.45744141936302185,"sortText":"4115ca3dNUM_DIGITAL_PINS","textEdit":{"newText":"NUM_DIGITAL_PINS","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"_Nonnull","insertText":"_Nonnull","insertTextFormat":2,"kind":14,"label":" _Nonnull","score":4,"sortText":"80000000_Nonnull","textEdit":{"newText":"_Nonnull","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"_Null_unspecified","insertText":"_Null_unspecified","insertTextFormat":2,"kind":14,"label":" _Null_unspecified","score":4,"sortText":"80000000_Null_unspecified","textEdit":{"newText":"_Null_unspecified","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"_Nullable","insertText":"_Nullable","insertTextFormat":2,"kind":14,"label":" _Nullable","score":4,"sortText":"80000000_Nullable","textEdit":{"newText":"_Nullable","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}},{"filterText":"using namespace","insertText":"using namespace ${0:identifier};","insertTextFormat":2,"kind":15,"label":" using namespace identifier;","score":4,"sortText":"80000000using namespace","textEdit":{"newText":"using namespace ${0:identifier};","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}}}}]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 988

{"id":94,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}Content-Length: 1350

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'n'","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":46}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":34,"character":33},"end":{"line":34,"character":33}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":34,"character":34},"end":{"line":34,"character":34}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1352

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'nha'","range":{"end":{"character":35,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":48}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":34,"character":35},"end":{"line":34,"character":35}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":34,"character":35},"end":{"line":34,"character":36}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":34,"character":34},"end":{"line":34,"character":35}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":34,"character":34},"end":{"line":34,"character":34}},"text":"â"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":34,"character":35},"end":{"line":34,"character":35}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":36},"context":{"triggerKind":1}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":95,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":96,"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":34,"character":35},"end":{"line":34,"character":36}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":86},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":35},"context":{"triggerKind":1}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":96,"jsonrpc":"2.0"}Content-Length: 68

{"id":97,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":34,"character":34},"end":{"line":34,"character":35}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":87},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":34},"context":{"triggerKind":1}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 1354

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'nhân'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":53}}Content-Length: 68

{"id":98,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":99,"jsonrpc":"2.0"}Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":34,"character":34},"end":{"line":34,"character":34}},"text":"ậ"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":34,"character":35},"end":{"line":34,"character":35}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":99,"jsonrpc":"2.0"}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":34,"character":36},"end":{"line":34,"character":36}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1351

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'nh'","range":{"end":{"character":34,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":55}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":34,"character":37},"end":{"line":34,"character":37}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1355

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'nhận'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'CCLK'","range":{"end":{"character":7,"line":35},"start":{"character":3,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":58}}
>>>
Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":38},"context":{"triggerKind":1}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 6176

{"id":100,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"new","insertText":"new ${1:type}(${0:expressions})","insertTextFormat":2,"kind":15,"label":" new type(expressions)","score":8,"sortText":"3f000000new","textEdit":{"newText":"new ${1:type}(${0:expressions})","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"new","insertText":"new ${1:type}[${2:size}](${0:expressions})","insertTextFormat":2,"kind":15,"label":" new type[size](expressions)","score":8,"sortText":"3f000000new","textEdit":{"newText":"new ${1:type}[${2:size}](${0:expressions})","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"detail":"bool","filterText":"noexcept","insertText":"noexcept(${0:expression})","insertTextFormat":2,"kind":15,"label":" noexcept(expression)","score":8,"sortText":"3f000000noexcept","textEdit":{"newText":"noexcept(${0:expression})","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"detail":"std::nullptr_t","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"kind":15,"label":" nullptr","score":8,"sortText":"3f000000nullptr","textEdit":{"newText":"nullptr","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"noTone","insertText":"noTone(${1:uint8_t _pin})","insertTextFormat":2,"kind":3,"label":" noTone(uint8_t _pin)","score":1.2690916061401367,"sortText":"405d8e68noTone","textEdit":{"newText":"noTone(${1:uint8_t _pin})","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"kind":8,"label":" nullptr_t","score":1.2690916061401367,"sortText":"405d8e68nullptr_t","textEdit":{"newText":"nullptr_t","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"NAN","insertText":"NAN","insertTextFormat":2,"kind":1,"label":" NAN","score":0.68351686000823975,"sortText":"40d1050aNAN","textEdit":{"newText":"NAN","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_AN_INTERRUPT","insertText":"NOT_AN_INTERRUPT","insertTextFormat":2,"kind":1,"label":" NOT_AN_INTERRUPT","score":0.57685983180999756,"sortText":"40ec52eaNOT_AN_INTERRUPT","textEdit":{"newText":"NOT_AN_INTERRUPT","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_A_PIN","insertText":"NOT_A_PIN","insertTextFormat":2,"kind":1,"label":" NOT_A_PIN","score":0.57685983180999756,"sortText":"40ec52eaNOT_A_PIN","textEdit":{"newText":"NOT_A_PIN","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_A_PORT","insertText":"NOT_A_PORT","insertTextFormat":2,"kind":1,"label":" NOT_A_PORT","score":0.57685983180999756,"sortText":"40ec52eaNOT_A_PORT","textEdit":{"newText":"NOT_A_PORT","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"NOT_ON_TIMER","insertText":"NOT_ON_TIMER","insertTextFormat":2,"kind":1,"label":" NOT_ON_TIMER","score":0.57685983180999756,"sortText":"40ec52eaNOT_ON_TIMER","textEdit":{"newText":"NOT_ON_TIMER","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"filterText":"NO_IGNORE_CHAR","insertText":"NO_IGNORE_CHAR","insertTextFormat":2,"kind":1,"label":"•NO_IGNORE_CHAR","score":0.57685983180999756,"sortText":"40ec52eaNO_IGNORE_CHAR","textEdit":{"newText":"NO_IGNORE_CHAR","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"NULL","insertText":"NULL","insertTextFormat":2,"kind":1,"label":" NULL","score":0.57685983180999756,"sortText":"40ec52eaNULL","textEdit":{"newText":"NULL","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"noInterrupts","insertText":"noInterrupts()","insertTextFormat":2,"kind":1,"label":" noInterrupts()","score":0.57685983180999756,"sortText":"40ec52eanoInterrupts","textEdit":{"newText":"noInterrupts()","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"kind":1,"label":" NUM_ANALOG_INPUTS","score":0.50536555051803589,"sortText":"40fea05dNUM_ANALOG_INPUTS","textEdit":{"newText":"NUM_ANALOG_INPUTS","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"kind":1,"label":" NUM_DIGITAL_PINS","score":0.45744141936302185,"sortText":"4115ca3dNUM_DIGITAL_PINS","textEdit":{"newText":"NUM_DIGITAL_PINS","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"_Nonnull","insertText":"_Nonnull","insertTextFormat":2,"kind":14,"label":" _Nonnull","score":4,"sortText":"80000000_Nonnull","textEdit":{"newText":"_Nonnull","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"_Null_unspecified","insertText":"_Null_unspecified","insertTextFormat":2,"kind":14,"label":" _Null_unspecified","score":4,"sortText":"80000000_Null_unspecified","textEdit":{"newText":"_Null_unspecified","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}},{"filterText":"_Nullable","insertText":"_Nullable","insertTextFormat":2,"kind":14,"label":" _Nullable","score":4,"sortText":"80000000_Nullable","textEdit":{"newText":"_Nullable","range":{"end":{"character":38,"line":34},"start":{"character":37,"line":34}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 1364

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'nhận'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":59}}Content-Length: 989

{"id":101,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":34,"character":38},"end":{"line":34,"character":38}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":34,"character":39},"end":{"line":34,"character":39}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":34,"character":40},"end":{"line":34,"character":40}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1364

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'nhận'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":61}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":34,"character":40},"end":{"line":34,"character":41}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":34,"character":39},"end":{"line":34,"character":40}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":34,"character":39},"end":{"line":34,"character":39}},"text":"à"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":34,"character":40},"end":{"line":34,"character":40}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1364

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'nhận'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":62}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":34,"character":41},"end":{"line":34,"character":41}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1364

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'nhận'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":66}}Content-Length: 1364

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'nhận'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":67}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":34,"character":42},"end":{"line":34,"character":42}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":43},"context":{"triggerKind":1}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":102,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":103,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}Content-Length: 1366

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'nhận'","range":{"end":{"character":36,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":43,"line":34},"start":{"character":42,"line":34}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":68}}
>>>
Content-Length: 1611

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":69},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 27 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); nhậngà gn y\n"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":34,"character":43},"end":{"line":34,"character":43}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":34,"character":44},"end":{"line":34,"character":44}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":34,"character":44},"end":{"line":34,"character":45}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":34,"character":44},"end":{"line":34,"character":44}},"text":"ơ"}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":34,"character":44},"end":{"line":34,"character":45}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":34,"character":44},"end":{"line":34,"character":44}},"text":"ờ"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":45},"context":{"triggerKind":1}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":104,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":105,"jsonrpc":"2.0"}Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":45},"end":{"line":34,"character":45}},"context":{"diagnostics":[]}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 990

{"id":105,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":45,"line":34},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}Content-Length: 1748

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'nhậngà'","range":{"end":{"character":38,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":45,"line":34},"start":{"character":42,"line":34}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":35},"start":{"character":0,"line":35}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:36:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":75}}Content-Length: 38

{"id":106,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":45},"end":{"line":34,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":34,"character":42},"end":{"line":34,"character":45}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 543

{"id":107,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":45,"line":34},"start":{"character":42,"line":34}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp":[{"newText":";","range":{"end":{"character":41,"line":34},"start":{"character":41,"line":34}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":8}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":108,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 990

{"id":109,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":45,"line":34},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":45},"end":{"line":34,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":34,"character":42},"end":{"line":34,"character":45}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 543

{"id":110,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":45,"line":34},"start":{"character":42,"line":34}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp":[{"newText":";","range":{"end":{"character":41,"line":34},"start":{"character":41,"line":34}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":6}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":111,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":6}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":112,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":32}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":113,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":41,"line":34},"start":{"character":39,"line":34}}}]}
>>>
Content-Length: 484

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":32},"end":{"line":34,"character":32}},"context":{"diagnostics":[{"range":{"start":{"line":34,"character":32},"end":{"line":34,"character":38}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'nhậngà'"}]}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":114,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":34,"character":32},"end":{"line":34,"character":32}},"text":"/"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":4,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":34,"character":33},"end":{"line":34,"character":33}},"text":"/"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1724

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":33,"line":34},"start":{"character":32,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'nhậngà'","range":{"end":{"character":39,"line":34},"start":{"character":33,"line":34}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":35},"start":{"character":0,"line":35}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:36:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":76}}Content-Length: 1362

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":35},"start":{"character":0,"line":35}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:36:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":77}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":34},"end":{"line":34,"character":34}},"context":{"diagnostics":[]}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":115,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 990

{"id":116,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":47,"line":34},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":31}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":117,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":47}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":118,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":47}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":119,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":34,"character":47},"end":{"line":34,"character":47}},"context":{"diagnostics":[]}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":120,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":21}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":121,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":20}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":122,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":31}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":123,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":34,"character":47},"end":{"line":34,"character":47}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1362

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":78}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":2}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":3},"context":{"triggerKind":1}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 24670

{"id":124,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"kind":15,"label":" decltype(expression)","score":8,"sortText":"3f000000decltype","textEdit":{"newText":"decltype(${0:expression})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"void","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete ${0:expression}","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"void","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete [] expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete [] ${0:expression}","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"do","insertText":"do {\n${1:statements}\n}while (${0:expression})","insertTextFormat":2,"kind":15,"label":" do {statements}while (expression)","score":8,"sortText":"3f000000do","textEdit":{"newText":"do {\n${1:statements}\n}while (${0:expression})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"double","insertText":"double","insertTextFormat":2,"kind":14,"label":" double","score":8,"sortText":"3f000000double","textEdit":{"newText":"double","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"dynamic_cast","insertText":"dynamic_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" dynamic_cast<type>(expression)","score":8,"sortText":"3f000000dynamic_cast","textEdit":{"newText":"dynamic_cast<${1:type}>(${0:expression})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"kind":3,"label":" delay(unsigned long ms)","score":4.8400001525878906,"sortText":"3f651eb8delay","textEdit":{"newText":"delay(${1:unsigned long ms})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"kind":3,"label":" detachInterrupt(uint8_t interruptNum)","score":1.9036375284194946,"sortText":"400c559bdetachInterrupt","textEdit":{"newText":"detachInterrupt(${1:uint8_t interruptNum})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"filterText":"div","insertText":"div(${1:int __num}, ${2:int __denom})","insertTextFormat":2,"kind":3,"label":" div(int __num, int __denom)","score":1.5037370920181274,"sortText":"403f858bdiv","textEdit":{"newText":"div(${1:int __num}, ${2:int __denom})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"filterText":"div_t","insertText":"div_t","insertTextFormat":2,"kind":8,"label":" div_t","score":1.5037370920181274,"sortText":"403f858bdiv_t","textEdit":{"newText":"div_t","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostre","insertText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","insertTextFormat":2,"kind":3,"label":" dtostre(double __val, char *__s, unsigned char __prec, unsigned char __flags)","score":1.5037370920181274,"sortText":"403f858bdtostre","textEdit":{"newText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostrf","insertText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","insertTextFormat":2,"kind":3,"label":" dtostrf(double __val, signed char __width, unsigned char __prec, char *__s)","score":1.5037370920181274,"sortText":"403f858bdtostrf","textEdit":{"newText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"kind":3,"label":" digitalWrite(uint8_t pin, uint8_t val)","score":1.3503646850585938,"sortText":"40532740digitalWrite","textEdit":{"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_bit_mask_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_bit_mask_PGM","textEdit":{"newText":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_port_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_port_PGM","textEdit":{"newText":"digital_pin_to_port_PGM","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"kind":3,"label":" delayMicroseconds(unsigned int us)","score":1.2690916061401367,"sortText":"405d8e68delayMicroseconds","textEdit":{"newText":"delayMicroseconds(${1:unsigned int us})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":1.2690916061401367,"sortText":"405d8e68digitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_timer_PGM","score":1.2690916061401367,"sortText":"405d8e68digital_pin_to_timer_PGM","textEdit":{"newText":"digital_pin_to_timer_PGM","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_ALWAYS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_ALWAYS_SIGN","textEdit":{"newText":"DTOSTR_ALWAYS_SIGN","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_PLUS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_PLUS_SIGN","textEdit":{"newText":"DTOSTR_PLUS_SIGN","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":2,"kind":1,"label":" DTOSTR_UPPERCASE","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_UPPERCASE","textEdit":{"newText":"DTOSTR_UPPERCASE","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD0","insertText":"DD0","insertTextFormat":2,"kind":1,"label":" DD0","score":0.57685983180999756,"sortText":"40ec52eaDD0","textEdit":{"newText":"DD0","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD1","insertText":"DD1","insertTextFormat":2,"kind":1,"label":" DD1","score":0.57685983180999756,"sortText":"40ec52eaDD1","textEdit":{"newText":"DD1","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD2","insertText":"DD2","insertTextFormat":2,"kind":1,"label":" DD2","score":0.57685983180999756,"sortText":"40ec52eaDD2","textEdit":{"newText":"DD2","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD3","insertText":"DD3","insertTextFormat":2,"kind":1,"label":" DD3","score":0.57685983180999756,"sortText":"40ec52eaDD3","textEdit":{"newText":"DD3","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD4","insertText":"DD4","insertTextFormat":2,"kind":1,"label":" DD4","score":0.57685983180999756,"sortText":"40ec52eaDD4","textEdit":{"newText":"DD4","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD5","insertText":"DD5","insertTextFormat":2,"kind":1,"label":" DD5","score":0.57685983180999756,"sortText":"40ec52eaDD5","textEdit":{"newText":"DD5","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD6","insertText":"DD6","insertTextFormat":2,"kind":1,"label":" DD6","score":0.57685983180999756,"sortText":"40ec52eaDD6","textEdit":{"newText":"DD6","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DD7","insertText":"DD7","insertTextFormat":2,"kind":1,"label":" DD7","score":0.57685983180999756,"sortText":"40ec52eaDD7","textEdit":{"newText":"DD7","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB0","insertText":"DDB0","insertTextFormat":2,"kind":1,"label":" DDB0","score":0.57685983180999756,"sortText":"40ec52eaDDB0","textEdit":{"newText":"DDB0","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB1","insertText":"DDB1","insertTextFormat":2,"kind":1,"label":" DDB1","score":0.57685983180999756,"sortText":"40ec52eaDDB1","textEdit":{"newText":"DDB1","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB2","insertText":"DDB2","insertTextFormat":2,"kind":1,"label":" DDB2","score":0.57685983180999756,"sortText":"40ec52eaDDB2","textEdit":{"newText":"DDB2","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB3","insertText":"DDB3","insertTextFormat":2,"kind":1,"label":" DDB3","score":0.57685983180999756,"sortText":"40ec52eaDDB3","textEdit":{"newText":"DDB3","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB4","insertText":"DDB4","insertTextFormat":2,"kind":1,"label":" DDB4","score":0.57685983180999756,"sortText":"40ec52eaDDB4","textEdit":{"newText":"DDB4","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB5","insertText":"DDB5","insertTextFormat":2,"kind":1,"label":" DDB5","score":0.57685983180999756,"sortText":"40ec52eaDDB5","textEdit":{"newText":"DDB5","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB6","insertText":"DDB6","insertTextFormat":2,"kind":1,"label":" DDB6","score":0.57685983180999756,"sortText":"40ec52eaDDB6","textEdit":{"newText":"DDB6","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDB7","insertText":"DDB7","insertTextFormat":2,"kind":1,"label":" DDB7","score":0.57685983180999756,"sortText":"40ec52eaDDB7","textEdit":{"newText":"DDB7","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDC0","insertText":"DDC0","insertTextFormat":2,"kind":1,"label":" DDC0","score":0.57685983180999756,"sortText":"40ec52eaDDC0","textEdit":{"newText":"DDC0","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDC1","insertText":"DDC1","insertTextFormat":2,"kind":1,"label":" DDC1","score":0.57685983180999756,"sortText":"40ec52eaDDC1","textEdit":{"newText":"DDC1","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDC2","insertText":"DDC2","insertTextFormat":2,"kind":1,"label":" DDC2","score":0.57685983180999756,"sortText":"40ec52eaDDC2","textEdit":{"newText":"DDC2","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDC3","insertText":"DDC3","insertTextFormat":2,"kind":1,"label":" DDC3","score":0.57685983180999756,"sortText":"40ec52eaDDC3","textEdit":{"newText":"DDC3","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDC4","insertText":"DDC4","insertTextFormat":2,"kind":1,"label":" DDC4","score":0.57685983180999756,"sortText":"40ec52eaDDC4","textEdit":{"newText":"DDC4","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDC5","insertText":"DDC5","insertTextFormat":2,"kind":1,"label":" DDC5","score":0.57685983180999756,"sortText":"40ec52eaDDC5","textEdit":{"newText":"DDC5","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDC6","insertText":"DDC6","insertTextFormat":2,"kind":1,"label":" DDC6","score":0.57685983180999756,"sortText":"40ec52eaDDC6","textEdit":{"newText":"DDC6","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD0","insertText":"DDD0","insertTextFormat":2,"kind":1,"label":" DDD0","score":0.57685983180999756,"sortText":"40ec52eaDDD0","textEdit":{"newText":"DDD0","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD1","insertText":"DDD1","insertTextFormat":2,"kind":1,"label":" DDD1","score":0.57685983180999756,"sortText":"40ec52eaDDD1","textEdit":{"newText":"DDD1","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD2","insertText":"DDD2","insertTextFormat":2,"kind":1,"label":" DDD2","score":0.57685983180999756,"sortText":"40ec52eaDDD2","textEdit":{"newText":"DDD2","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD3","insertText":"DDD3","insertTextFormat":2,"kind":1,"label":" DDD3","score":0.57685983180999756,"sortText":"40ec52eaDDD3","textEdit":{"newText":"DDD3","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD4","insertText":"DDD4","insertTextFormat":2,"kind":1,"label":" DDD4","score":0.57685983180999756,"sortText":"40ec52eaDDD4","textEdit":{"newText":"DDD4","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD5","insertText":"DDD5","insertTextFormat":2,"kind":1,"label":" DDD5","score":0.57685983180999756,"sortText":"40ec52eaDDD5","textEdit":{"newText":"DDD5","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD6","insertText":"DDD6","insertTextFormat":2,"kind":1,"label":" DDD6","score":0.57685983180999756,"sortText":"40ec52eaDDD6","textEdit":{"newText":"DDD6","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDD7","insertText":"DDD7","insertTextFormat":2,"kind":1,"label":" DDD7","score":0.57685983180999756,"sortText":"40ec52eaDDD7","textEdit":{"newText":"DDD7","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDRB","insertText":"DDRB","insertTextFormat":2,"kind":1,"label":" DDRB","score":0.57685983180999756,"sortText":"40ec52eaDDRB","textEdit":{"newText":"DDRB","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDRC","insertText":"DDRC","insertTextFormat":2,"kind":1,"label":" DDRC","score":0.57685983180999756,"sortText":"40ec52eaDDRC","textEdit":{"newText":"DDRC","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DDRD","insertText":"DDRD","insertTextFormat":2,"kind":1,"label":" DDRD","score":0.57685983180999756,"sortText":"40ec52eaDDRD","textEdit":{"newText":"DDRD","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"kind":1,"label":" DEFAULT","score":0.57685983180999756,"sortText":"40ec52eaDEFAULT","textEdit":{"newText":"DEFAULT","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"kind":1,"label":" DEG_TO_RAD","score":0.57685983180999756,"sortText":"40ec52eaDEG_TO_RAD","textEdit":{"newText":"DEG_TO_RAD","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":2,"kind":1,"label":" DIDR0","score":0.57685983180999756,"sortText":"40ec52eaDIDR0","textEdit":{"newText":"DIDR0","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":2,"kind":1,"label":" DIDR1","score":0.57685983180999756,"sortText":"40ec52eaDIDR1","textEdit":{"newText":"DIDR1","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"kind":1,"label":" DISPLAY","score":0.57685983180999756,"sortText":"40ec52eaDISPLAY","textEdit":{"newText":"DISPLAY","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DOR0","insertText":"DOR0","insertTextFormat":2,"kind":1,"label":" DOR0","score":0.57685983180999756,"sortText":"40ec52eaDOR0","textEdit":{"newText":"DOR0","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"DORD","insertText":"DORD","insertTextFormat":2,"kind":1,"label":" DORD","score":0.57685983180999756,"sortText":"40ec52eaDORD","textEdit":{"newText":"DORD","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"kind":1,"label":" degrees(rad)","score":0.57685983180999756,"sortText":"40ec52eadegrees","textEdit":{"newText":"degrees(${1:rad})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToBitMask(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToBitMask","textEdit":{"newText":"digitalPinToBitMask(${1:P})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToPort(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToPort","textEdit":{"newText":"digitalPinToPort(${1:P})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToTimer(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToTimer","textEdit":{"newText":"digitalPinToTimer(${1:P})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"DEC","insertText":"DEC","insertTextFormat":2,"kind":1,"label":"•DEC","score":0.53754985332489014,"sortText":"40f66322DEC","textEdit":{"newText":"DEC","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinHasPWM(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinHasPWM","textEdit":{"newText":"digitalPinHasPWM(${1:p})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToInterrupt(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToInterrupt","textEdit":{"newText":"digitalPinToInterrupt(${1:p})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICR(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICR","textEdit":{"newText":"digitalPinToPCICR(${1:p})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICRbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICRbit","textEdit":{"newText":"digitalPinToPCICRbit(${1:p})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSK(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSK","textEdit":{"newText":"digitalPinToPCMSK(${1:p})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}},{"filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSKbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSKbit","textEdit":{"newText":"digitalPinToPCMSKbit(${1:p})","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":125,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":3,"line":35},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}Content-Length: 1543

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'd'","range":{"end":{"character":3,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":79}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":3},"end":{"line":35,"character":3}},"context":{"diagnostics":[]}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":126,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":127,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":3,"line":35},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":35,"character":3},"end":{"line":35,"character":3}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":110},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":4}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1545

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'del'","range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":81}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":5}},"context":{"diagnostics":[]}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":128,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":129,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":5,"line":35},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":35,"character":5},"end":{"line":35,"character":5}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1944

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'dela'; did you mean 'delay'? (fix available)\n\nC:\\Users\\Admin\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: 'delay' declared here","range":{"end":{"character":6,"line":35},"start":{"character":2,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":82}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":6},"end":{"line":35,"character":6}},"context":{"diagnostics":[]}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":130,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":131,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":6,"line":35},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":6}},"rangeLength":4,"text":"delay(unsigned long ms)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1578

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":21,"line":35},"start":{"character":17,"line":35}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":83}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":8},"end":{"line":35,"character":24}},"context":{"diagnostics":[]}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":132,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 990

{"id":133,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":25,"line":35},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":35,"character":8},"end":{"line":35,"character":24}},"rangeLength":16,"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":84}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":35,"character":9},"end":{"line":35,"character":9}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":85}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":35,"character":10},"end":{"line":35,"character":10}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":86}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":11},"end":{"line":35,"character":11}},"context":{"diagnostics":[]}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":134,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 990

{"id":135,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":12,"line":35},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":12},"end":{"line":35,"character":12}},"context":{"diagnostics":[]}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":136,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":35,"character":12},"end":{"line":35,"character":12}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1362

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":36},"start":{"character":0,"line":36}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:37:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":87}}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":35,"character":13},"end":{"line":35,"character":13}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1362

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":88}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"context":{"diagnostics":[]}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":137,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":138,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":2,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":7}},"context":{"diagnostics":[]}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":139,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"context":{"diagnostics":[]}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":140,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"context":{"diagnostics":[]}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":141,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"context":{"diagnostics":[]}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":142,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"context":{"diagnostics":[]}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":143,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":2}},"context":{"diagnostics":[]}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":144,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"context":{"diagnostics":[]}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":145,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"context":{"diagnostics":[]}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":146,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"context":{"diagnostics":[]}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":147,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":16},"end":{"line":0,"character":16}},"context":{"diagnostics":[]}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":148,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"context":{"diagnostics":[]}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":149,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":18},"end":{"line":0,"character":18}},"context":{"diagnostics":[]}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":150,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":26},"end":{"line":0,"character":26}},"context":{"diagnostics":[]}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":151,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":28},"end":{"line":0,"character":28}},"context":{"diagnostics":[]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":29},"end":{"line":0,"character":29}},"context":{"diagnostics":[]}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":153,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":30},"end":{"line":0,"character":30}},"context":{"diagnostics":[]}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":154,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":30},"end":{"line":0,"character":30}},"context":{"diagnostics":[]}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":155,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":7}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"context":{"diagnostics":[]}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":157,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"context":{"diagnostics":[]}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":158,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"context":{"diagnostics":[]}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":159,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"context":{"diagnostics":[]}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":160,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"context":{"diagnostics":[]}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":161,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":20},"end":{"line":0,"character":20}},"context":{"diagnostics":[]}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":162,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":21},"end":{"line":0,"character":21}},"context":{"diagnostics":[]}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":163,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":23}},"context":{"diagnostics":[]}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":164,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":25}},"context":{"diagnostics":[]}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":165,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":27},"end":{"line":0,"character":27}},"context":{"diagnostics":[]}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":166,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":28},"end":{"line":0,"character":28}},"context":{"diagnostics":[]}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":167,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"context":{"diagnostics":[]}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":169,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"context":{"diagnostics":[]}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":170,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"context":{"diagnostics":[]}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":171,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"context":{"diagnostics":[]}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":172,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":3}},"context":{"diagnostics":[]}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":173,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":3}},"context":{"diagnostics":[]}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":174,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"context":{"diagnostics":[]}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":175,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"context":{"diagnostics":[]}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":176,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"context":{"diagnostics":[]}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":177,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"context":{"diagnostics":[]}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":178,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":16},"end":{"line":0,"character":16}},"context":{"diagnostics":[]}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":179,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"context":{"diagnostics":[]}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":180,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":19},"end":{"line":0,"character":19}},"context":{"diagnostics":[]}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":181,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":20},"end":{"line":0,"character":20}},"context":{"diagnostics":[]}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":182,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":21},"end":{"line":0,"character":21}},"context":{"diagnostics":[]}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":183,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":17,"character":11}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":184,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":1},"context":{"triggerKind":1}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 80222

{"id":185,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"documentation":{"kind":"markdown","value":"From `\"SoftwareSerial.h\"`"},"filterText":"SoftwareSerial","insertText":"SoftwareSerial","insertTextFormat":2,"kind":7,"label":" SoftwareSerial","score":9.1747541427612305,"sortText":"3eed3435SoftwareSerial","textEdit":{"newText":"SoftwareSerial","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"short","insertText":"short","insertTextFormat":2,"kind":14,"label":" short","score":8,"sortText":"3f000000short","textEdit":{"newText":"short","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"signed","insertText":"signed","insertTextFormat":2,"kind":14,"label":" signed","score":8,"sortText":"3f000000signed","textEdit":{"newText":"signed","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"static","insertText":"static","insertTextFormat":2,"kind":14,"label":" static","score":8,"sortText":"3f000000static","textEdit":{"newText":"static","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"kind":15,"label":" static_assert(expression, message);","score":8,"sortText":"3f000000static_assert","textEdit":{"newText":"static_assert(${1:expression}, ${0:message});","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"struct","insertText":"struct","insertTextFormat":2,"kind":14,"label":" struct","score":8,"sortText":"3f000000struct","textEdit":{"newText":"struct","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"filterText":"Stream","insertText":"Stream","insertTextFormat":2,"kind":7,"label":"•Stream","score":5.2655243873596191,"sortText":"3f5780d3Stream","textEdit":{"newText":"Stream","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"Serial","insertText":"Serial","insertTextFormat":2,"kind":6,"label":"•Serial","score":2.5243632793426514,"sortText":"3fde70d5Serial","textEdit":{"newText":"Serial","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"serialEventRun","insertText":"serialEventRun()","insertTextFormat":2,"kind":3,"label":"•serialEventRun()","score":2.2556054592132568,"sortText":"3fefa429serialEventRun","textEdit":{"newText":"serialEventRun()","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"WString.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"filterText":"String","insertText":"String","insertTextFormat":2,"kind":7,"label":"•String","score":2.1850335597991943,"sortText":"3ff42869String","textEdit":{"newText":"String","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"WString.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"kind":7,"label":"•StringSumHelper","score":1.9189802408218384,"sortText":"400a5edbStringSumHelper","textEdit":{"newText":"StringSumHelper","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"size_t","insertText":"size_t","insertTextFormat":2,"kind":8,"label":" size_t","score":1.6717566251754761,"sortText":"402a03e1size_t","textEdit":{"newText":"size_t","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"kind":3,"label":" strlen(const char *)","score":1.6000369787216187,"sortText":"403331fdstrlen","textEdit":{"newText":"strlen(${1:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x < 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 < 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"filterText":"signbit","insertText":"signbit(${1:double __x})","insertTextFormat":2,"kind":3,"label":" signbit(double __x)","score":1.5037370920181274,"sortText":"403f858bsignbit","textEdit":{"newText":"signbit(${1:double __x})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The sin() function returns the sine of \\\\a \\_\\_x, measured in radians."},"filterText":"sin","insertText":"sin(${1:double __x})","insertTextFormat":2,"kind":3,"label":" sin(double __x)","score":1.5037370920181274,"sortText":"403f858bsin","textEdit":{"newText":"sin(${1:double __x})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The sinh() function returns the hyperbolic sine of \\\\a \\_\\_x."},"filterText":"sinh","insertText":"sinh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" sinh(double __x)","score":1.5037370920181274,"sortText":"403f858bsinh","textEdit":{"newText":"sinh(${1:double __x})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"filterText":"sqrt","insertText":"sqrt(${1:double __x})","insertTextFormat":2,"kind":3,"label":" sqrt(double __x)","score":1.5037370920181274,"sortText":"403f858bsqrt","textEdit":{"newText":"sqrt(${1:double __x})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"float","documentation":{"kind":"markdown","value":"An alias for sqrt()."},"filterText":"sqrtf","insertText":"sqrtf(${1:float})","insertTextFormat":2,"kind":3,"label":" sqrtf(float)","score":1.5037370920181274,"sortText":"403f858bsqrtf","textEdit":{"newText":"sqrtf(${1:float})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The function square() returns \\<em>\\_\\_x * \\_\\_x\\</em>.  \n\\\\note This function does not belong to the C standard definition."},"filterText":"square","insertText":"square(${1:double __x})","insertTextFormat":2,"kind":3,"label":" square(double __x)","score":1.5037370920181274,"sortText":"403f858bsquare","textEdit":{"newText":"square(${1:double __x})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"Pseudo-random number generator seeding; see rand()."},"filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"kind":3,"label":" srand(unsigned int __seed)","score":1.5037370920181274,"sortText":"403f858bsrand","textEdit":{"newText":"srand(${1:unsigned int __seed})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib Pseudo-random number generator seeding; see random()."},"filterText":"srandom","insertText":"srandom(${1:unsigned long __seed})","insertTextFormat":2,"kind":3,"label":" srandom(unsigned long __seed)","score":1.5037370920181274,"sortText":"403f858bsrandom","textEdit":{"newText":"srandom(${1:unsigned long __seed})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasecmp(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasecmp","textEdit":{"newText":"strcasecmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_P(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp_P() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\returns The strcasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcasecmp_P","insertText":"strcasecmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasecmp_P(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasecmp_P","textEdit":{"newText":"strcasecmp_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","score":1.5037370920181274,"sortText":"403f858bstrcasecmp_PF","textEdit":{"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasestr(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasestr","textEdit":{"newText":"strcasestr(${1:const char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcat(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcat","textEdit":{"newText":"strcat(${1:char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"filterText":"strcat_P","insertText":"strcat_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcat_P(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcat_P","textEdit":{"newText":"strcat_P(${1:char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Concatenates two strings  \nThe strcat_PF() function is similar to strcat() except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the string to be appended in Flash  \n\\\\returns The strcat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns"},"filterText":"strcat_PF","insertText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"kind":3,"label":" strcat_PF(char *dest, uint_farptr_t src)","score":1.5037370920181274,"sortText":"403f858bstrcat_PF","textEdit":{"newText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strchr() function returns a pointer to the first occurrence of the character \\\\p val in the string \\\\p src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strchr() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":" strchr(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrchr","textEdit":{"newText":"strchr(${1:const char *}, ${2:int})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"filterText":"strchr_P","insertText":"strchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"kind":3,"label":" strchr_P(const char *, int __val)","score":1.5037370920181274,"sortText":"403f858bstrchr_P","textEdit":{"newText":"strchr_P(${1:const char *}, ${2:int __val})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":" strchrnul(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrchrnul","textEdit":{"newText":"strchrnul(${1:const char *}, ${2:int})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"filterText":"strchrnul_P","insertText":"strchrnul_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"kind":3,"label":" strchrnul_P(const char *, int __val)","score":1.5037370920181274,"sortText":"403f858bstrchrnul_P","textEdit":{"newText":"strchrnul_P(${1:const char *}, ${2:int __val})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcmp(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcmp","textEdit":{"newText":"strcmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcmp_P(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcmp_P","textEdit":{"newText":"strcmp_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","score":1.5037370920181274,"sortText":"403f858bstrcmp_PF","textEdit":{"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"filterText":"strcoll","insertText":"strcoll(${1:const char *s1}, ${2:const char *s2})","insertTextFormat":2,"kind":3,"label":" strcoll(const char *s1, const char *s2)","score":1.5037370920181274,"sortText":"403f858bstrcoll","textEdit":{"newText":"strcoll(${1:const char *s1}, ${2:const char *s2})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcpy(char \\*dest, const char \\*src)  \n\\\\brief Copy a string.  \nThe strcpy() function copies the string pointed to by src (including the terminating '\\\\\\\\0' character) to the array pointed to by dest. The strings may not overlap, and the destination string dest must be large enough to receive the copy.  \n\\\\returns The strcpy() function returns a pointer to the destination string dest.  \n\\\\note If the destination string of a strcpy() is not large enough (that is, if the programmer was stupid/lazy, and failed to check the size before copying) then anything might happen. Overflowing fixed length strings is a favourite cracker technique."},"filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcpy(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcpy","textEdit":{"newText":"strcpy(${1:char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_P(char \\*dest, const char \\*src)  \nThe strcpy_P() function is similar to strcpy() except that src is a pointer to a string in program space.  \n\\\\returns The strcpy_P() function returns a pointer to the destination string dest."},"filterText":"strcpy_P","insertText":"strcpy_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcpy_P(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcpy_P","textEdit":{"newText":"strcpy_P(${1:char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"filterText":"strcpy_PF","insertText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"kind":3,"label":" strcpy_PF(char *dest, uint_farptr_t src)","score":1.5037370920181274,"sortText":"403f858bstrcpy_PF","textEdit":{"newText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"filterText":"strcspn","insertText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"kind":3,"label":" strcspn(const char *__s, const char *__reject)","score":1.5037370920181274,"sortText":"403f858bstrcspn","textEdit":{"newText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"kind":3,"label":" strcspn_P(const char *__s, const char *__reject)","score":1.5037370920181274,"sortText":"403f858bstrcspn_P","textEdit":{"newText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"filterText":"strdup","insertText":"strdup(${1:const char *s1})","insertTextFormat":2,"kind":3,"label":" strdup(const char *s1)","score":1.5037370920181274,"sortText":"403f858bstrdup","textEdit":{"newText":"strdup(${1:const char *s1})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","filterText":"strerror","insertText":"strerror(${1:int errnum})","insertTextFormat":2,"kind":3,"label":" strerror(int errnum)","score":1.5037370920181274,"sortText":"403f858bstrerror","textEdit":{"newText":"strerror(${1:int errnum})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz <=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval >= siz, truncation occurred."},"filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcat(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcat","textEdit":{"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz <=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval >= siz, truncation occurred."},"filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcat_P(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcat_P","textEdit":{"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n <= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval >= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"kind":3,"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","score":1.5037370920181274,"sortText":"403f858bstrlcat_PF","textEdit":{"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval >= siz,  \ntruncation occurred."},"filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcpy(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcpy","textEdit":{"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval >= siz, truncation occurred."},"filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcpy_P(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcpy_P","textEdit":{"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval >= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"kind":3,"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","score":1.5037370920181274,"sortText":"403f858bstrlcpy_PF","textEdit":{"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"kind":3,"label":" strlen_P(const char *s)","score":1.5037370920181274,"sortText":"403f858bstrlen_P","textEdit":{"newText":"strlen_P(${1:const char *s})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"kind":3,"label":" strlen_PF(uint_farptr_t src)","score":1.5037370920181274,"sortText":"403f858bstrlen_PF","textEdit":{"newText":"strlen_PF(${1:uint_farptr_t src})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"kind":3,"label":" strlwr(char *)","score":1.5037370920181274,"sortText":"403f858bstrlwr","textEdit":{"newText":"strlwr(${1:char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncasecmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp() function is similar to strcasecmp(), except it only compares the first \\\\p len characters of \\\\p s1.  \n\\\\returns The strncasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p len bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncasecmp(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncasecmp","textEdit":{"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_P(const char \\*s1, const char \\*s2, size_t n)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp_P() function is similar to strcasecmp_P(), except it only compares the first \\\\p n characters of \\\\p s1.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\param n The maximum number of bytes to compare.  \n\\\\returns The strncasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p n bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strncasecmp_P","insertText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncasecmp_P(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncasecmp_P","textEdit":{"newText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings ignoring case  \nThe strncasecmp_PF() function is similar to strcasecmp_PF(), except it only compares the first \\\\e n characters of \\\\e s1 and the string in flash is addressed using a far pointer.  \n\\\\param s1 A pointer to a string in SRAM  \n\\\\param s2 A far pointer to a string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncasecmp_PF","insertText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"kind":3,"label":" strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n)","score":1.5037370920181274,"sortText":"403f858bstrncasecmp_PF","textEdit":{"newText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncat(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat() function is similar to strcat(), except that only the first n characters of src are appended to dest.  \n\\\\returns The strncat() function returns a pointer to the resulting string dest."},"filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncat(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncat","textEdit":{"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strncat_PF() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to append  \n\\\\returns The strncat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncat_PF","insertText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"kind":3,"label":" strncat_PF(char *dest, uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bstrncat_PF","textEdit":{"newText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings.  \nThe strncmp() function is similar to strcmp(), except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp() function returns an integer less than, equal to, or greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncmp(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncmp","textEdit":{"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_P(const char \\*s1, const char \\*s2, size_t n)  \nThe strncmp_P() function is similar to strcmp_P() except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp_P() function returns an integer less than, equal to,  \nor greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"filterText":"strncmp_P","insertText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncmp_P(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncmp_P","textEdit":{"newText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings with limited length  \nThe strncmp_PF() function is similar to strcmp_PF() except it only compares the first (at most) \\\\e n characters of \\\\e s1 and \\\\e s2.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncmp_PF","insertText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"kind":3,"label":" strncmp_PF(const char *s1, uint_farptr_t s2, size_t n)","score":1.5037370920181274,"sortText":"403f858bstrncmp_PF","textEdit":{"newText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncpy(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Copy a string.  \nThe strncpy() function is similar to strcpy(), except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy() function returns a pointer to the destination string dest."},"filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncpy(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncpy","textEdit":{"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"filterText":"strncpy_P","insertText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncpy_P(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncpy_P","textEdit":{"newText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncpy_PF","insertText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"kind":3,"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bstrncpy_PF","textEdit":{"newText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strnlen(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen function returns the number of characters in the string pointed to by src, not including the terminating '\\\\\\\\0' character, but at most len. In doing this, strnlen looks only at the first len characters at src and never beyond src+len.  \n\\\\returns The strnlen function returns strlen(src), if that is less than len, or len if there is no '\\\\\\\\0' character among the first len characters pointed to by src."},"filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"kind":3,"label":" strnlen(const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrnlen","textEdit":{"newText":"strnlen(${1:const char *}, ${2:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"filterText":"strnlen_P","insertText":"strnlen_P(${1:const char *}, ${2:size_t})","insertTextFormat":2,"kind":3,"label":" strnlen_P(const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrnlen_P","textEdit":{"newText":"strnlen_P(${1:const char *}, ${2:size_t})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strnlen_PF","insertText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","insertTextFormat":2,"kind":3,"label":" strnlen_PF(uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bstrnlen_PF","textEdit":{"newText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strpbrk(const char \\*s, const char \\*accept)  \nThe strpbrk() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the string \\\\p accept.  \n\\\\return The strpbrk() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will be \\\\c NULL."},"filterText":"strpbrk","insertText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strpbrk(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrpbrk","textEdit":{"newText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"filterText":"strpbrk_P","insertText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strpbrk_P(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrpbrk_P","textEdit":{"newText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strrchr() function returns a pointer to the last occurrence of the character val in the string src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strrchr() function returns a pointer to the matched character or NULL if the character is not found."},"filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":" strrchr(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrrchr","textEdit":{"newText":"strrchr(${1:const char *}, ${2:int})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strrchr_P(const char \\*s, int val)  \n\\\\brief Locate character in string.  \nThe strrchr_P() function returns a pointer to the last occurrence of the character \\\\p val in the flash string \\\\p s.  \n\\\\return The strrchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"filterText":"strrchr_P","insertText":"strrchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"kind":3,"label":" strrchr_P(const char *, int __val)","score":1.5037370920181274,"sortText":"403f858bstrrchr_P","textEdit":{"newText":"strrchr_P(${1:const char *}, ${2:int __val})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrev(char \\*s)  \n\\\\brief Reverse a string.  \nThe strrev() function reverses the order of the string.  \n\\\\returns The strrev() function returns a pointer to the beginning of the reversed string."},"filterText":"strrev","insertText":"strrev(${1:char *})","insertTextFormat":2,"kind":3,"label":" strrev(char *)","score":1.5037370920181274,"sortText":"403f858bstrrev","textEdit":{"newText":"strrev(${1:char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"filterText":"strsep_P","insertText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","insertTextFormat":2,"kind":3,"label":" strsep_P(char **__sp, const char *__delim)","score":1.5037370920181274,"sortText":"403f858bstrsep_P","textEdit":{"newText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strspn(const char \\*s, const char \\*accept)  \nThe strspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept.  \n\\\\return The strspn() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"filterText":"strspn","insertText":"strspn(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strspn(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrspn","textEdit":{"newText":"strspn(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"filterText":"strspn_P","insertText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strspn_P(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrspn_P","textEdit":{"newText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strstr(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrstr","textEdit":{"newText":"strstr(${1:const char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_P(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr_P() function finds the first occurrence of the substring  \n\\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared. The strstr_P() function is similar to strstr() except that  \n\\\\p s2 is pointer to a string in program space.  \n\\\\returns The strstr_P() function returns a pointer to the beginning of the substring, or NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"filterText":"strstr_P","insertText":"strstr_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strstr_P(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrstr_P","textEdit":{"newText":"strstr_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Locate a substring.  \nThe strstr_PF() function finds the first occurrence of the substring \\\\c s2 in the string \\\\c s1. The terminating '\\\\\\\\0' characters are not compared.  \nThe strstr_PF() function is similar to strstr() except that \\\\c s2 is a far pointer to a string in program space.  \n\\\\returns The strstr_PF() function returns a pointer to the beginning of the substring, or NULL if the substring is not found.  \nIf \\\\c s2 points to a string of zero length, the function returns \\\\c s1. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strstr_PF","insertText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strstr_PF(const char *s1, uint_farptr_t s2)","score":1.5037370920181274,"sortText":"403f858bstrstr_PF","textEdit":{"newText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"double","filterText":"strtod","insertText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","insertTextFormat":2,"kind":3,"label":" strtod(const char *__nptr, char **__endptr)","score":1.5037370920181274,"sortText":"403f858bstrtod","textEdit":{"newText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok_r(char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nstrtok_r parses string into tokens. The first call to strtok_r should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_r. The delimiter string  \n\\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_r is a reentrant version of strtok().  \n\\\\returns The strtok_r() function returns a pointer to the next token or NULL when no more tokens are found."},"filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"kind":3,"label":" strtok_r(char *, const char *, char **)","score":1.5037370920181274,"sortText":"403f858bstrtok_r","textEdit":{"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_rP (char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nThe strtok_rP() function parses \\\\p string into tokens. The first call to strtok_rP() should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_rP().  \nThe delimiter string \\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_rP() is a reentrant version of strtok_P().  \nThe strtok_rP() function is similar to strtok_r() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_rP() function returns a pointer to the next token or NULL when no more tokens are found."},"filterText":"strtok_rP","insertText":"strtok_rP(${1:char *__s}, ${2:const char *__delim}, ${3:char **__last})","insertTextFormat":2,"kind":3,"label":" strtok_rP(char *__s, const char *__delim, char **__last)","score":1.5037370920181274,"sortText":"403f858bstrtok_rP","textEdit":{"newText":"strtok_rP(${1:char *__s}, ${2:const char *__delim}, ${3:char **__last})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"long","documentation":{"kind":"markdown","value":"The strtol() function converts the string in \\\\c nptr to a long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to a long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11,  \nand so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtol() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtol() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtol() function returns the result of the conversion, unless the value would underflow or overflow. If no conversion could be performed, 0 is returned. If an overflow or underflow occurs, \\\\c errno is set to \\\\ref avr_errno \"ERANGE\" and the function return value is clamped to \\\\c LONG_MIN or \\\\c LONG_MAX, respectively."},"filterText":"strtol","insertText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"kind":3,"label":" strtol(const char *__nptr, char **__endptr, int __base)","score":1.5037370920181274,"sortText":"403f858bstrtol","textEdit":{"newText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"The strtoul() function converts the string in \\\\c nptr to an unsigned long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to an unsigned long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11, and so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtoul() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtoul() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtoul() function return either the result of the conversion or, if there was a leading minus sign, the negation of the result of the conversion, unless the original (non-negated) value would overflow; in the latter case, strtoul() returns ULONG_MAX, and \\\\c errno is set to \\\\ref avr_errno \"ERANGE\". If no conversion could be performed, 0 is returned."},"filterText":"strtoul","insertText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"kind":3,"label":" strtoul(const char *__nptr, char **__endptr, int __base)","score":1.5037370920181274,"sortText":"403f858bstrtoul","textEdit":{"newText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"kind":3,"label":" strupr(char *)","score":1.5037370920181274,"sortText":"403f858bstrupr","textEdit":{"newText":"strupr(${1:char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","filterText":"strxfrm","insertText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","insertTextFormat":2,"kind":3,"label":" strxfrm(char *dest, const char *src, size_t n)","score":1.5037370920181274,"sortText":"403f858bstrxfrm","textEdit":{"newText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","filterText":"system","insertText":"system(${1:const char *})","insertTextFormat":2,"kind":3,"label":" system(const char *)","score":1.5037370920181274,"sortText":"403f858bsystem","textEdit":{"newText":"system(${1:const char *})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"setup","insertText":"setup()","insertTextFormat":2,"kind":3,"label":" setup()","score":1.4203052520751953,"sortText":"404a3370setup","textEdit":{"newText":"setup()","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nAll invalid characters are ignored."},"filterText":"SKIP_ALL","insertText":"SKIP_ALL","insertTextFormat":2,"kind":20,"label":"•SKIP_ALL","score":1.2690916061401367,"sortText":"405d8e68SKIP_ALL","textEdit":{"newText":"SKIP_ALL","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nNothing is skipped, and the stream is not touched unless the first waiting character is valid."},"filterText":"SKIP_NONE","insertText":"SKIP_NONE","insertTextFormat":2,"kind":20,"label":"•SKIP_NONE","score":1.2690916061401367,"sortText":"405d8e68SKIP_NONE","textEdit":{"newText":"SKIP_NONE","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nOnly tabs, spaces, line feeds & carriage returns are skipped."},"filterText":"SKIP_WHITESPACE","insertText":"SKIP_WHITESPACE","insertTextFormat":2,"kind":20,"label":"•SKIP_WHITESPACE","score":1.2690916061401367,"sortText":"405d8e68SKIP_WHITESPACE","textEdit":{"newText":"SKIP_WHITESPACE","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"shiftIn","insertText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","insertTextFormat":2,"kind":3,"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","score":1.2690916061401367,"sortText":"405d8e68shiftIn","textEdit":{"newText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"shiftOut","insertText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"kind":3,"label":" shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)","score":1.2690916061401367,"sortText":"405d8e68shiftOut","textEdit":{"newText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c scanf performs formatted input from stream \\\\c stdin.  \nSee vfscanf() for details."},"filterText":"scanf","insertText":"scanf(${1:const char *__fmt, ...})","insertTextFormat":2,"kind":3,"label":" scanf(const char *__fmt, ...)","score":1.1826096773147583,"sortText":"4068a03fscanf","textEdit":{"newText":"scanf(${1:const char *__fmt, ...})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of scanf() where \\\\c fmt resides in program memory."},"filterText":"scanf_P","insertText":"scanf_P(${1:const char *__fmt, ...})","insertTextFormat":2,"kind":3,"label":" scanf_P(const char *__fmt, ...)","score":1.1826096773147583,"sortText":"4068a03fscanf_P","textEdit":{"newText":"scanf_P(${1:const char *__fmt, ...})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"void","filterText":"setbuf","insertText":"setbuf(${1:FILE *stream}, ${2:char *buf})","insertTextFormat":2,"kind":3,"label":" setbuf(FILE *stream, char *buf)","score":1.1826096773147583,"sortText":"4068a03fsetbuf","textEdit":{"newText":"setbuf(${1:FILE *stream}, ${2:char *buf})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","filterText":"setvbuf","insertText":"setvbuf(${1:FILE *stream}, ${2:char *buf}, ${3:int mode}, ${4:size_t size})","insertTextFormat":2,"kind":3,"label":" setvbuf(FILE *stream, char *buf, int mode, size_t size)","score":1.1826096773147583,"sortText":"4068a03fsetvbuf","textEdit":{"newText":"setvbuf(${1:FILE *stream}, ${2:char *buf}, ${3:int mode}, ${4:size_t size})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c sprintf(), but instead of assuming \\\\c s to be of infinite size, no more than \\\\c n characters (including the trailing NUL character) will be converted to \\\\c s.  \nReturns the number of characters that would have been written to  \n\\\\c s if there were enough space."},"filterText":"snprintf","insertText":"snprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt, ...})","insertTextFormat":2,"kind":3,"label":" snprintf(char *__s, size_t __n, const char *__fmt, ...)","score":1.1826096773147583,"sortText":"4068a03fsnprintf","textEdit":{"newText":"snprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt, ...})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c snprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"snprintf_P","insertText":"snprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt, ...})","insertTextFormat":2,"kind":3,"label":" snprintf_P(char *__s, size_t __n, const char *__fmt, ...)","score":1.1826096773147583,"sortText":"4068a03fsnprintf_P","textEdit":{"newText":"snprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt, ...})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c printf() that sends the formatted characters to string \\\\c s."},"filterText":"sprintf","insertText":"sprintf(${1:char *__s}, ${2:const char *__fmt, ...})","insertTextFormat":2,"kind":3,"label":" sprintf(char *__s, const char *__fmt, ...)","score":1.1826096773147583,"sortText":"4068a03fsprintf","textEdit":{"newText":"sprintf(${1:char *__s}, ${2:const char *__fmt, ...})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c sprintf() that uses a \\\\c fmt string that resides in program memory."},"filterText":"sprintf_P","insertText":"sprintf_P(${1:char *__s}, ${2:const char *__fmt, ...})","insertTextFormat":2,"kind":3,"label":" sprintf_P(char *__s, const char *__fmt, ...)","score":1.1826096773147583,"sortText":"4068a03fsprintf_P","textEdit":{"newText":"sprintf_P(${1:char *__s}, ${2:const char *__fmt, ...})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c sscanf performs formatted input, reading the input data from the buffer pointed to by \\\\c buf.  \nSee vfscanf() for details."},"filterText":"sscanf","insertText":"sscanf(${1:const char *__buf}, ${2:const char *__fmt, ...})","insertTextFormat":2,"kind":3,"label":" sscanf(const char *__buf, const char *__fmt, ...)","score":1.1826096773147583,"sortText":"4068a03fsscanf","textEdit":{"newText":"sscanf(${1:const char *__buf}, ${2:const char *__fmt, ...})","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}}}}]}}Content-Length: 1528

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'S'","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":89}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"context":{"diagnostics":[]}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":186,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":187,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":2,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":2},"context":{"triggerKind":3}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 72200

{"id":188,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"static","insertText":"static","insertTextFormat":2,"kind":14,"label":" static","score":8,"sortText":"3f000000static","textEdit":{"newText":"static","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"kind":15,"label":" static_assert(expression, message);","score":8,"sortText":"3f000000static_assert","textEdit":{"newText":"static_assert(${1:expression}, ${0:message});","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"struct","insertText":"struct","insertTextFormat":2,"kind":14,"label":" struct","score":8,"sortText":"3f000000struct","textEdit":{"newText":"struct","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"Stream.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"filterText":"Stream","insertText":"Stream","insertTextFormat":2,"kind":7,"label":"•Stream","score":5.2655243873596191,"sortText":"3f5780d3Stream","textEdit":{"newText":"Stream","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"WString.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"filterText":"String","insertText":"String","insertTextFormat":2,"kind":7,"label":"•String","score":2.1850335597991943,"sortText":"3ff42869String","textEdit":{"newText":"String","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"WString.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"kind":7,"label":"•StringSumHelper","score":1.9189802408218384,"sortText":"400a5edbStringSumHelper","textEdit":{"newText":"StringSumHelper","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"kind":3,"label":" strlen(const char *)","score":1.6000369787216187,"sortText":"403331fdstrlen","textEdit":{"newText":"strlen(${1:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasecmp(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasecmp","textEdit":{"newText":"strcasecmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_P(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp_P() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\returns The strcasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcasecmp_P","insertText":"strcasecmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasecmp_P(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasecmp_P","textEdit":{"newText":"strcasecmp_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","score":1.5037370920181274,"sortText":"403f858bstrcasecmp_PF","textEdit":{"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasestr(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasestr","textEdit":{"newText":"strcasestr(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcasestr_P(const char \\*s1, const char \\*s2)  \nThis funtion is similar to strcasestr() except that \\\\p s2 is pointer to a string in program space."},"filterText":"strcasestr_P","insertText":"strcasestr_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasestr_P(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcasestr_P","textEdit":{"newText":"strcasestr_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcat(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcat","textEdit":{"newText":"strcat(${1:char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"filterText":"strcat_P","insertText":"strcat_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcat_P(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcat_P","textEdit":{"newText":"strcat_P(${1:char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Concatenates two strings  \nThe strcat_PF() function is similar to strcat() except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the string to be appended in Flash  \n\\\\returns The strcat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns"},"filterText":"strcat_PF","insertText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"kind":3,"label":" strcat_PF(char *dest, uint_farptr_t src)","score":1.5037370920181274,"sortText":"403f858bstrcat_PF","textEdit":{"newText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strchr() function returns a pointer to the first occurrence of the character \\\\p val in the string \\\\p src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strchr() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":" strchr(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrchr","textEdit":{"newText":"strchr(${1:const char *}, ${2:int})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"filterText":"strchr_P","insertText":"strchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"kind":3,"label":" strchr_P(const char *, int __val)","score":1.5037370920181274,"sortText":"403f858bstrchr_P","textEdit":{"newText":"strchr_P(${1:const char *}, ${2:int __val})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":" strchrnul(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrchrnul","textEdit":{"newText":"strchrnul(${1:const char *}, ${2:int})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"filterText":"strchrnul_P","insertText":"strchrnul_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"kind":3,"label":" strchrnul_P(const char *, int __val)","score":1.5037370920181274,"sortText":"403f858bstrchrnul_P","textEdit":{"newText":"strchrnul_P(${1:const char *}, ${2:int __val})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcmp(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcmp","textEdit":{"newText":"strcmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcmp_P(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcmp_P","textEdit":{"newText":"strcmp_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","score":1.5037370920181274,"sortText":"403f858bstrcmp_PF","textEdit":{"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"filterText":"strcoll","insertText":"strcoll(${1:const char *s1}, ${2:const char *s2})","insertTextFormat":2,"kind":3,"label":" strcoll(const char *s1, const char *s2)","score":1.5037370920181274,"sortText":"403f858bstrcoll","textEdit":{"newText":"strcoll(${1:const char *s1}, ${2:const char *s2})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcpy(char \\*dest, const char \\*src)  \n\\\\brief Copy a string.  \nThe strcpy() function copies the string pointed to by src (including the terminating '\\\\\\\\0' character) to the array pointed to by dest. The strings may not overlap, and the destination string dest must be large enough to receive the copy.  \n\\\\returns The strcpy() function returns a pointer to the destination string dest.  \n\\\\note If the destination string of a strcpy() is not large enough (that is, if the programmer was stupid/lazy, and failed to check the size before copying) then anything might happen. Overflowing fixed length strings is a favourite cracker technique."},"filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcpy(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcpy","textEdit":{"newText":"strcpy(${1:char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_P(char \\*dest, const char \\*src)  \nThe strcpy_P() function is similar to strcpy() except that src is a pointer to a string in program space.  \n\\\\returns The strcpy_P() function returns a pointer to the destination string dest."},"filterText":"strcpy_P","insertText":"strcpy_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcpy_P(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrcpy_P","textEdit":{"newText":"strcpy_P(${1:char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"filterText":"strcpy_PF","insertText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"kind":3,"label":" strcpy_PF(char *dest, uint_farptr_t src)","score":1.5037370920181274,"sortText":"403f858bstrcpy_PF","textEdit":{"newText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"filterText":"strcspn","insertText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"kind":3,"label":" strcspn(const char *__s, const char *__reject)","score":1.5037370920181274,"sortText":"403f858bstrcspn","textEdit":{"newText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"kind":3,"label":" strcspn_P(const char *__s, const char *__reject)","score":1.5037370920181274,"sortText":"403f858bstrcspn_P","textEdit":{"newText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"filterText":"strdup","insertText":"strdup(${1:const char *s1})","insertTextFormat":2,"kind":3,"label":" strdup(const char *s1)","score":1.5037370920181274,"sortText":"403f858bstrdup","textEdit":{"newText":"strdup(${1:const char *s1})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","filterText":"strerror","insertText":"strerror(${1:int errnum})","insertTextFormat":2,"kind":3,"label":" strerror(int errnum)","score":1.5037370920181274,"sortText":"403f858bstrerror","textEdit":{"newText":"strerror(${1:int errnum})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz <=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval >= siz, truncation occurred."},"filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcat(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcat","textEdit":{"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz <=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval >= siz, truncation occurred."},"filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcat_P(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcat_P","textEdit":{"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n <= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval >= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"kind":3,"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","score":1.5037370920181274,"sortText":"403f858bstrlcat_PF","textEdit":{"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval >= siz,  \ntruncation occurred."},"filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcpy(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcpy","textEdit":{"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval >= siz, truncation occurred."},"filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcpy_P(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrlcpy_P","textEdit":{"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval >= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"kind":3,"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","score":1.5037370920181274,"sortText":"403f858bstrlcpy_PF","textEdit":{"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"kind":3,"label":" strlen_P(const char *s)","score":1.5037370920181274,"sortText":"403f858bstrlen_P","textEdit":{"newText":"strlen_P(${1:const char *s})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"kind":3,"label":" strlen_PF(uint_farptr_t src)","score":1.5037370920181274,"sortText":"403f858bstrlen_PF","textEdit":{"newText":"strlen_PF(${1:uint_farptr_t src})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"kind":3,"label":" strlwr(char *)","score":1.5037370920181274,"sortText":"403f858bstrlwr","textEdit":{"newText":"strlwr(${1:char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncasecmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp() function is similar to strcasecmp(), except it only compares the first \\\\p len characters of \\\\p s1.  \n\\\\returns The strncasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p len bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncasecmp(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncasecmp","textEdit":{"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_P(const char \\*s1, const char \\*s2, size_t n)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp_P() function is similar to strcasecmp_P(), except it only compares the first \\\\p n characters of \\\\p s1.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\param n The maximum number of bytes to compare.  \n\\\\returns The strncasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p n bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strncasecmp_P","insertText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncasecmp_P(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncasecmp_P","textEdit":{"newText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings ignoring case  \nThe strncasecmp_PF() function is similar to strcasecmp_PF(), except it only compares the first \\\\e n characters of \\\\e s1 and the string in flash is addressed using a far pointer.  \n\\\\param s1 A pointer to a string in SRAM  \n\\\\param s2 A far pointer to a string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncasecmp_PF","insertText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"kind":3,"label":" strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n)","score":1.5037370920181274,"sortText":"403f858bstrncasecmp_PF","textEdit":{"newText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncat(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat() function is similar to strcat(), except that only the first n characters of src are appended to dest.  \n\\\\returns The strncat() function returns a pointer to the resulting string dest."},"filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncat(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncat","textEdit":{"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_P(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat_P() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strncat_P() function returns a pointer to the resulting string dest."},"filterText":"strncat_P","insertText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncat_P(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncat_P","textEdit":{"newText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strncat_PF() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to append  \n\\\\returns The strncat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncat_PF","insertText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"kind":3,"label":" strncat_PF(char *dest, uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bstrncat_PF","textEdit":{"newText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings.  \nThe strncmp() function is similar to strcmp(), except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp() function returns an integer less than, equal to, or greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncmp(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncmp","textEdit":{"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_P(const char \\*s1, const char \\*s2, size_t n)  \nThe strncmp_P() function is similar to strcmp_P() except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp_P() function returns an integer less than, equal to,  \nor greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"filterText":"strncmp_P","insertText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncmp_P(const char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncmp_P","textEdit":{"newText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings with limited length  \nThe strncmp_PF() function is similar to strcmp_PF() except it only compares the first (at most) \\\\e n characters of \\\\e s1 and \\\\e s2.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncmp_PF","insertText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"kind":3,"label":" strncmp_PF(const char *s1, uint_farptr_t s2, size_t n)","score":1.5037370920181274,"sortText":"403f858bstrncmp_PF","textEdit":{"newText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncpy(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Copy a string.  \nThe strncpy() function is similar to strcpy(), except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy() function returns a pointer to the destination string dest."},"filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncpy(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncpy","textEdit":{"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"filterText":"strncpy_P","insertText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncpy_P(char *, const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrncpy_P","textEdit":{"newText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strncpy_PF","insertText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"kind":3,"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bstrncpy_PF","textEdit":{"newText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strnlen(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen function returns the number of characters in the string pointed to by src, not including the terminating '\\\\\\\\0' character, but at most len. In doing this, strnlen looks only at the first len characters at src and never beyond src+len.  \n\\\\returns The strnlen function returns strlen(src), if that is less than len, or len if there is no '\\\\\\\\0' character among the first len characters pointed to by src."},"filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"kind":3,"label":" strnlen(const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrnlen","textEdit":{"newText":"strnlen(${1:const char *}, ${2:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"filterText":"strnlen_P","insertText":"strnlen_P(${1:const char *}, ${2:size_t})","insertTextFormat":2,"kind":3,"label":" strnlen_P(const char *, size_t)","score":1.5037370920181274,"sortText":"403f858bstrnlen_P","textEdit":{"newText":"strnlen_P(${1:const char *}, ${2:size_t})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strnlen_PF","insertText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","insertTextFormat":2,"kind":3,"label":" strnlen_PF(uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bstrnlen_PF","textEdit":{"newText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strpbrk(const char \\*s, const char \\*accept)  \nThe strpbrk() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the string \\\\p accept.  \n\\\\return The strpbrk() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will be \\\\c NULL."},"filterText":"strpbrk","insertText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strpbrk(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrpbrk","textEdit":{"newText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"filterText":"strpbrk_P","insertText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strpbrk_P(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrpbrk_P","textEdit":{"newText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strrchr() function returns a pointer to the last occurrence of the character val in the string src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strrchr() function returns a pointer to the matched character or NULL if the character is not found."},"filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"kind":3,"label":" strrchr(const char *, int)","score":1.5037370920181274,"sortText":"403f858bstrrchr","textEdit":{"newText":"strrchr(${1:const char *}, ${2:int})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strrchr_P(const char \\*s, int val)  \n\\\\brief Locate character in string.  \nThe strrchr_P() function returns a pointer to the last occurrence of the character \\\\p val in the flash string \\\\p s.  \n\\\\return The strrchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"filterText":"strrchr_P","insertText":"strrchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"kind":3,"label":" strrchr_P(const char *, int __val)","score":1.5037370920181274,"sortText":"403f858bstrrchr_P","textEdit":{"newText":"strrchr_P(${1:const char *}, ${2:int __val})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrev(char \\*s)  \n\\\\brief Reverse a string.  \nThe strrev() function reverses the order of the string.  \n\\\\returns The strrev() function returns a pointer to the beginning of the reversed string."},"filterText":"strrev","insertText":"strrev(${1:char *})","insertTextFormat":2,"kind":3,"label":" strrev(char *)","score":1.5037370920181274,"sortText":"403f858bstrrev","textEdit":{"newText":"strrev(${1:char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strsep(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'.  \n\\\\return The strsep() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep() returns  \n\\\\c NULL."},"filterText":"strsep","insertText":"strsep(${1:char **}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strsep(char **, const char *)","score":1.5037370920181274,"sortText":"403f858bstrsep","textEdit":{"newText":"strsep(${1:char **}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"filterText":"strsep_P","insertText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","insertTextFormat":2,"kind":3,"label":" strsep_P(char **__sp, const char *__delim)","score":1.5037370920181274,"sortText":"403f858bstrsep_P","textEdit":{"newText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strspn(const char \\*s, const char \\*accept)  \nThe strspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept.  \n\\\\return The strspn() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"filterText":"strspn","insertText":"strspn(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strspn(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrspn","textEdit":{"newText":"strspn(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"filterText":"strspn_P","insertText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"kind":3,"label":" strspn_P(const char *__s, const char *__accept)","score":1.5037370920181274,"sortText":"403f858bstrspn_P","textEdit":{"newText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strstr(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrstr","textEdit":{"newText":"strstr(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_P(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr_P() function finds the first occurrence of the substring  \n\\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared. The strstr_P() function is similar to strstr() except that  \n\\\\p s2 is pointer to a string in program space.  \n\\\\returns The strstr_P() function returns a pointer to the beginning of the substring, or NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"filterText":"strstr_P","insertText":"strstr_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strstr_P(const char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrstr_P","textEdit":{"newText":"strstr_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Locate a substring.  \nThe strstr_PF() function finds the first occurrence of the substring \\\\c s2 in the string \\\\c s1. The terminating '\\\\\\\\0' characters are not compared.  \nThe strstr_PF() function is similar to strstr() except that \\\\c s2 is a far pointer to a string in program space.  \n\\\\returns The strstr_PF() function returns a pointer to the beginning of the substring, or NULL if the substring is not found.  \nIf \\\\c s2 points to a string of zero length, the function returns \\\\c s1. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strstr_PF","insertText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strstr_PF(const char *s1, uint_farptr_t s2)","score":1.5037370920181274,"sortText":"403f858bstrstr_PF","textEdit":{"newText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"double","filterText":"strtod","insertText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","insertTextFormat":2,"kind":3,"label":" strtod(const char *__nptr, char **__endptr)","score":1.5037370920181274,"sortText":"403f858bstrtod","textEdit":{"newText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok(char \\*s, const char \\*delim)  \n\\\\brief Parses the string s into tokens.  \nstrtok parses the string s into tokens. The first call to strtok should have s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok. The delimiter string delim may be different for each call.  \n\\\\returns The strtok() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok() is NOT reentrant. For a reentrant version of this function see \\\\c strtok_r()."},"filterText":"strtok","insertText":"strtok(${1:char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strtok(char *, const char *)","score":1.5037370920181274,"sortText":"403f858bstrtok","textEdit":{"newText":"strtok(${1:char *}, ${2:const char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_P(char \\*s, const char * delim)  \n\\\\brief Parses the string into tokens.  \nstrtok_P() parses the string \\\\p s into tokens. The first call to strtok_P() should have \\\\p s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_P().  \nThe delimiter string \\\\p delim may be different for each call.  \nThe strtok_P() function is similar to strtok() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_P() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok_P() is NOT reentrant. For a reentrant version of this function see strtok_rP()."},"filterText":"strtok_P","insertText":"strtok_P(${1:char *__s}, ${2:const char *__delim})","insertTextFormat":2,"kind":3,"label":" strtok_P(char *__s, const char *__delim)","score":1.5037370920181274,"sortText":"403f858bstrtok_P","textEdit":{"newText":"strtok_P(${1:char *__s}, ${2:const char *__delim})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok_r(char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nstrtok_r parses string into tokens. The first call to strtok_r should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_r. The delimiter string  \n\\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_r is a reentrant version of strtok().  \n\\\\returns The strtok_r() function returns a pointer to the next token or NULL when no more tokens are found."},"filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"kind":3,"label":" strtok_r(char *, const char *, char **)","score":1.5037370920181274,"sortText":"403f858bstrtok_r","textEdit":{"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_rP (char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nThe strtok_rP() function parses \\\\p string into tokens. The first call to strtok_rP() should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_rP().  \nThe delimiter string \\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_rP() is a reentrant version of strtok_P().  \nThe strtok_rP() function is similar to strtok_r() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_rP() function returns a pointer to the next token or NULL when no more tokens are found."},"filterText":"strtok_rP","insertText":"strtok_rP(${1:char *__s}, ${2:const char *__delim}, ${3:char **__last})","insertTextFormat":2,"kind":3,"label":" strtok_rP(char *__s, const char *__delim, char **__last)","score":1.5037370920181274,"sortText":"403f858bstrtok_rP","textEdit":{"newText":"strtok_rP(${1:char *__s}, ${2:const char *__delim}, ${3:char **__last})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"long","documentation":{"kind":"markdown","value":"The strtol() function converts the string in \\\\c nptr to a long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to a long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11,  \nand so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtol() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtol() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtol() function returns the result of the conversion, unless the value would underflow or overflow. If no conversion could be performed, 0 is returned. If an overflow or underflow occurs, \\\\c errno is set to \\\\ref avr_errno \"ERANGE\" and the function return value is clamped to \\\\c LONG_MIN or \\\\c LONG_MAX, respectively."},"filterText":"strtol","insertText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"kind":3,"label":" strtol(const char *__nptr, char **__endptr, int __base)","score":1.5037370920181274,"sortText":"403f858bstrtol","textEdit":{"newText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"The strtoul() function converts the string in \\\\c nptr to an unsigned long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to an unsigned long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11, and so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtoul() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtoul() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtoul() function return either the result of the conversion or, if there was a leading minus sign, the negation of the result of the conversion, unless the original (non-negated) value would overflow; in the latter case, strtoul() returns ULONG_MAX, and \\\\c errno is set to \\\\ref avr_errno \"ERANGE\". If no conversion could be performed, 0 is returned."},"filterText":"strtoul","insertText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"kind":3,"label":" strtoul(const char *__nptr, char **__endptr, int __base)","score":1.5037370920181274,"sortText":"403f858bstrtoul","textEdit":{"newText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"kind":3,"label":" strupr(char *)","score":1.5037370920181274,"sortText":"403f858bstrupr","textEdit":{"newText":"strupr(${1:char *})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"detail":"size_t","filterText":"strxfrm","insertText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","insertTextFormat":2,"kind":3,"label":" strxfrm(char *dest, const char *src, size_t n)","score":1.5037370920181274,"sortText":"403f858bstrxfrm","textEdit":{"newText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"size_t","insertText":"size_t","insertTextFormat":2,"kind":8,"label":" size_t","score":1.6717566251754761,"sortText":"405f82e9size_t","textEdit":{"newText":"size_t","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"stderr","insertText":"stderr","insertTextFormat":2,"kind":1,"label":" stderr","score":0.53754985332489014,"sortText":"40f66322stderr","textEdit":{"newText":"stderr","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"stdin","insertText":"stdin","insertTextFormat":2,"kind":1,"label":" stdin","score":0.53754985332489014,"sortText":"40f66322stdin","textEdit":{"newText":"stdin","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}},{"filterText":"stdout","insertText":"stdout","insertTextFormat":2,"kind":1,"label":" stdout","score":0.53754985332489014,"sortText":"40f66322stdout","textEdit":{"newText":"stdout","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}}}}]}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1529

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'St'","range":{"end":{"character":2,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":90}}Content-Length: 1530

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Str'","range":{"end":{"character":3,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":91}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":3}},"context":{"diagnostics":[]}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":189,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":190,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":2,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":3}},"rangeLength":3,"text":"String"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1958

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'type-name' declaration specifier","range":{"end":{"character":4,"line":8},"start":{"character":0,"line":8}},"severity":1,"source":"clang"},{"code":"ovl_diff_return_type","message":"Functions that differ only in their return type cannot be overloaded\n\nC:\\Users\\Admin\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:154:6:\nnote: previous declaration is here","range":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":92}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":6},"end":{"line":6,"character":6}},"context":{"diagnostics":[]}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":191,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 989

{"id":192,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":2,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":6,"character":6},"end":{"line":6,"character":6}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1958

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'type-name' declaration specifier","range":{"end":{"character":4,"line":8},"start":{"character":0,"line":8}},"severity":1,"source":"clang"},{"code":"ovl_diff_return_type","message":"Functions that differ only in their return type cannot be overloaded\n\nC:\\Users\\Admin\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:154:6:\nnote: previous declaration is here","range":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":93}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":7}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":8},"context":{"triggerKind":1}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 29337

{"id":193,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"double","documentation":{"kind":"markdown","value":"The tan() function returns the tangent of \\\\a \\_\\_x, measured in radians."},"filterText":"tan","insertText":"tan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tan(double __x)","score":1.5037370920181274,"sortText":"403f858btan","textEdit":{"newText":"tan(${1:double __x})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tanh() function returns the hyperbolic tangent of \\\\a \\_\\_x."},"filterText":"tanh","insertText":"tanh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tanh(double __x)","score":1.5037370920181274,"sortText":"403f858btanh","textEdit":{"newText":"tanh(${1:double __x})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toAscii","insertText":"toAscii(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toAscii(int c)","score":1.5037370920181274,"sortText":"403f858btoAscii","textEdit":{"newText":"toAscii(${1:int c})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toLowerCase","insertText":"toLowerCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toLowerCase(int c)","score":1.5037370920181274,"sortText":"403f858btoLowerCase","textEdit":{"newText":"toLowerCase(${1:int c})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toUpperCase","insertText":"toUpperCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toUpperCase(int c)","score":1.5037370920181274,"sortText":"403f858btoUpperCase","textEdit":{"newText":"toUpperCase(${1:int c})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The trunc() function rounds \\\\a \\_\\_x to the nearest integer not larger in absolute value."},"filterText":"trunc","insertText":"trunc(${1:double __x})","insertTextFormat":2,"kind":3,"label":" trunc(double __x)","score":1.5037370920181274,"sortText":"403f858btrunc","textEdit":{"newText":"trunc(${1:double __x})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"tx_buffer_index_t","insertText":"tx_buffer_index_t","insertTextFormat":2,"kind":8,"label":"•tx_buffer_index_t","score":1.5037370920181274,"sortText":"403f858btx_buffer_index_t","textEdit":{"newText":"tx_buffer_index_t","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts \\\\c c to a 7-bit unsigned char value that fits into the ASCII character set, by clearing the high-order bits.  \n\\\\warning Many people will be unhappy if you use this function. This function will convert accented letters into random characters."},"filterText":"toascii","insertText":"toascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toascii(int __c)","score":1.2690916061401367,"sortText":"405d8e68toascii","textEdit":{"newText":"toascii(${1:int __c})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to lower case, if possible."},"filterText":"tolower","insertText":"tolower(${1:int __c})","insertTextFormat":2,"kind":3,"label":" tolower(int __c)","score":1.2690916061401367,"sortText":"405d8e68tolower","textEdit":{"newText":"tolower(${1:int __c})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nfrequency (in hertz) and duration (in milliseconds)."},"filterText":"tone","insertText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","insertTextFormat":2,"kind":3,"label":" tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)","score":1.2690916061401367,"sortText":"405d8e68tone","textEdit":{"newText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to upper case, if possible."},"filterText":"toupper","insertText":"toupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toupper(int __c)","score":1.2690916061401367,"sortText":"405d8e68toupper","textEdit":{"newText":"toupper(${1:int __c})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"FILE *","filterText":"tmpfile","insertText":"tmpfile()","insertTextFormat":2,"kind":3,"label":" tmpfile()","score":1.1826096773147583,"sortText":"4068a03ftmpfile","textEdit":{"newText":"tmpfile()","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"char *","filterText":"tmpnam","insertText":"tmpnam(${1:char *s})","insertTextFormat":2,"kind":3,"label":" tmpnam(char *s)","score":1.1826096773147583,"sortText":"4068a03ftmpnam","textEdit":{"newText":"tmpnam(${1:char *s})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCCR0B","insertText":"TCCR0B","insertTextFormat":2,"kind":1,"label":" TCCR0B","score":0.57685983180999756,"sortText":"40ec52eaTCCR0B","textEdit":{"newText":"TCCR0B","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCCR1A","insertText":"TCCR1A","insertTextFormat":2,"kind":1,"label":" TCCR1A","score":0.57685983180999756,"sortText":"40ec52eaTCCR1A","textEdit":{"newText":"TCCR1A","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCN2UB","insertText":"TCN2UB","insertTextFormat":2,"kind":1,"label":" TCN2UB","score":0.57685983180999756,"sortText":"40ec52eaTCN2UB","textEdit":{"newText":"TCN2UB","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT0","insertText":"TCNT0","insertTextFormat":2,"kind":1,"label":" TCNT0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0","textEdit":{"newText":"TCNT0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT0_0","insertText":"TCNT0_0","insertTextFormat":2,"kind":1,"label":" TCNT0_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_0","textEdit":{"newText":"TCNT0_0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT0_2","insertText":"TCNT0_2","insertTextFormat":2,"kind":1,"label":" TCNT0_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_2","textEdit":{"newText":"TCNT0_2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT0_3","insertText":"TCNT0_3","insertTextFormat":2,"kind":1,"label":" TCNT0_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_3","textEdit":{"newText":"TCNT0_3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT0_5","insertText":"TCNT0_5","insertTextFormat":2,"kind":1,"label":" TCNT0_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_5","textEdit":{"newText":"TCNT0_5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT0_6","insertText":"TCNT0_6","insertTextFormat":2,"kind":1,"label":" TCNT0_6","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_6","textEdit":{"newText":"TCNT0_6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT0_7","insertText":"TCNT0_7","insertTextFormat":2,"kind":1,"label":" TCNT0_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_7","textEdit":{"newText":"TCNT0_7","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H","insertText":"TCNT1H","insertTextFormat":2,"kind":1,"label":" TCNT1H","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H","textEdit":{"newText":"TCNT1H","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H0","insertText":"TCNT1H0","insertTextFormat":2,"kind":1,"label":" TCNT1H0","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H0","textEdit":{"newText":"TCNT1H0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H1","insertText":"TCNT1H1","insertTextFormat":2,"kind":1,"label":" TCNT1H1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H1","textEdit":{"newText":"TCNT1H1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H2","insertText":"TCNT1H2","insertTextFormat":2,"kind":1,"label":" TCNT1H2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H2","textEdit":{"newText":"TCNT1H2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H3","insertText":"TCNT1H3","insertTextFormat":2,"kind":1,"label":" TCNT1H3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H3","textEdit":{"newText":"TCNT1H3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H4","insertText":"TCNT1H4","insertTextFormat":2,"kind":1,"label":" TCNT1H4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H4","textEdit":{"newText":"TCNT1H4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H5","insertText":"TCNT1H5","insertTextFormat":2,"kind":1,"label":" TCNT1H5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H5","textEdit":{"newText":"TCNT1H5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1H6","insertText":"TCNT1H6","insertTextFormat":2,"kind":1,"label":" TCNT1H6","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H6","textEdit":{"newText":"TCNT1H6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1L","insertText":"TCNT1L","insertTextFormat":2,"kind":1,"label":" TCNT1L","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L","textEdit":{"newText":"TCNT1L","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1L1","insertText":"TCNT1L1","insertTextFormat":2,"kind":1,"label":" TCNT1L1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L1","textEdit":{"newText":"TCNT1L1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1L2","insertText":"TCNT1L2","insertTextFormat":2,"kind":1,"label":" TCNT1L2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L2","textEdit":{"newText":"TCNT1L2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1L3","insertText":"TCNT1L3","insertTextFormat":2,"kind":1,"label":" TCNT1L3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L3","textEdit":{"newText":"TCNT1L3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1L4","insertText":"TCNT1L4","insertTextFormat":2,"kind":1,"label":" TCNT1L4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L4","textEdit":{"newText":"TCNT1L4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1L5","insertText":"TCNT1L5","insertTextFormat":2,"kind":1,"label":" TCNT1L5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L5","textEdit":{"newText":"TCNT1L5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT1L6","insertText":"TCNT1L6","insertTextFormat":2,"kind":1,"label":" TCNT1L6","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L6","textEdit":{"newText":"TCNT1L6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2","insertText":"TCNT2","insertTextFormat":2,"kind":1,"label":" TCNT2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2","textEdit":{"newText":"TCNT2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2_0","insertText":"TCNT2_0","insertTextFormat":2,"kind":1,"label":" TCNT2_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_0","textEdit":{"newText":"TCNT2_0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2_1","insertText":"TCNT2_1","insertTextFormat":2,"kind":1,"label":" TCNT2_1","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_1","textEdit":{"newText":"TCNT2_1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2_2","insertText":"TCNT2_2","insertTextFormat":2,"kind":1,"label":" TCNT2_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_2","textEdit":{"newText":"TCNT2_2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2_3","insertText":"TCNT2_3","insertTextFormat":2,"kind":1,"label":" TCNT2_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_3","textEdit":{"newText":"TCNT2_3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2_4","insertText":"TCNT2_4","insertTextFormat":2,"kind":1,"label":" TCNT2_4","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_4","textEdit":{"newText":"TCNT2_4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2_5","insertText":"TCNT2_5","insertTextFormat":2,"kind":1,"label":" TCNT2_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_5","textEdit":{"newText":"TCNT2_5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCNT2_7","insertText":"TCNT2_7","insertTextFormat":2,"kind":1,"label":" TCNT2_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_7","textEdit":{"newText":"TCNT2_7","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCR2AUB","insertText":"TCR2AUB","insertTextFormat":2,"kind":1,"label":" TCR2AUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2AUB","textEdit":{"newText":"TCR2AUB","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TCR2BUB","insertText":"TCR2BUB","insertTextFormat":2,"kind":1,"label":" TCR2BUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2BUB","textEdit":{"newText":"TCR2BUB","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIFR0","insertText":"TIFR0","insertTextFormat":2,"kind":1,"label":" TIFR0","score":0.57685983180999756,"sortText":"40ec52eaTIFR0","textEdit":{"newText":"TIFR0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIFR1","insertText":"TIFR1","insertTextFormat":2,"kind":1,"label":" TIFR1","score":0.57685983180999756,"sortText":"40ec52eaTIFR1","textEdit":{"newText":"TIFR1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIFR2","insertText":"TIFR2","insertTextFormat":2,"kind":1,"label":" TIFR2","score":0.57685983180999756,"sortText":"40ec52eaTIFR2","textEdit":{"newText":"TIFR2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_COMPA_vect_num","insertText":"TIMER0_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPA_vect_num","textEdit":{"newText":"TIMER0_COMPA_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_COMPB_vect","insertText":"TIMER0_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPB_vect","textEdit":{"newText":"TIMER0_COMPB_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_OVF_vect","insertText":"TIMER0_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_OVF_vect","textEdit":{"newText":"TIMER0_OVF_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_OVF_vect_num","insertText":"TIMER0_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_OVF_vect_num","textEdit":{"newText":"TIMER0_OVF_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_CAPT_vect","insertText":"TIMER1_CAPT_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_CAPT_vect","textEdit":{"newText":"TIMER1_CAPT_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_CAPT_vect_num","insertText":"TIMER1_CAPT_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_CAPT_vect_num","textEdit":{"newText":"TIMER1_CAPT_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPA_vect","insertText":"TIMER1_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPA_vect","textEdit":{"newText":"TIMER1_COMPA_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPA_vect_num","insertText":"TIMER1_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPA_vect_num","textEdit":{"newText":"TIMER1_COMPA_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPB_vect","insertText":"TIMER1_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPB_vect","textEdit":{"newText":"TIMER1_COMPB_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPB_vect_num","insertText":"TIMER1_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPB_vect_num","textEdit":{"newText":"TIMER1_COMPB_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_OVF_vect_num","insertText":"TIMER1_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_OVF_vect_num","textEdit":{"newText":"TIMER1_OVF_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPA_vect","insertText":"TIMER2_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect","textEdit":{"newText":"TIMER2_COMPA_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPA_vect_num","insertText":"TIMER2_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect_num","textEdit":{"newText":"TIMER2_COMPA_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPB_vect","insertText":"TIMER2_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPB_vect","textEdit":{"newText":"TIMER2_COMPB_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPB_vect_num","insertText":"TIMER2_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPB_vect_num","textEdit":{"newText":"TIMER2_COMPB_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_OVF_vect","insertText":"TIMER2_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect","textEdit":{"newText":"TIMER2_OVF_vect","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_OVF_vect_num","insertText":"TIMER2_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect_num","textEdit":{"newText":"TIMER2_OVF_vect_num","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMSK0","insertText":"TIMSK0","insertTextFormat":2,"kind":1,"label":" TIMSK0","score":0.57685983180999756,"sortText":"40ec52eaTIMSK0","textEdit":{"newText":"TIMSK0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMSK1","insertText":"TIMSK1","insertTextFormat":2,"kind":1,"label":" TIMSK1","score":0.57685983180999756,"sortText":"40ec52eaTIMSK1","textEdit":{"newText":"TIMSK1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TOV0","insertText":"TOV0","insertTextFormat":2,"kind":1,"label":" TOV0","score":0.57685983180999756,"sortText":"40ec52eaTOV0","textEdit":{"newText":"TOV0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TOV1","insertText":"TOV1","insertTextFormat":2,"kind":1,"label":" TOV1","score":0.57685983180999756,"sortText":"40ec52eaTOV1","textEdit":{"newText":"TOV1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TSM","insertText":"TSM","insertTextFormat":2,"kind":1,"label":" TSM","score":0.57685983180999756,"sortText":"40ec52eaTSM","textEdit":{"newText":"TSM","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWA1","insertText":"TWA1","insertTextFormat":2,"kind":1,"label":" TWA1","score":0.57685983180999756,"sortText":"40ec52eaTWA1","textEdit":{"newText":"TWA1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWA2","insertText":"TWA2","insertTextFormat":2,"kind":1,"label":" TWA2","score":0.57685983180999756,"sortText":"40ec52eaTWA2","textEdit":{"newText":"TWA2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWA4","insertText":"TWA4","insertTextFormat":2,"kind":1,"label":" TWA4","score":0.57685983180999756,"sortText":"40ec52eaTWA4","textEdit":{"newText":"TWA4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWA5","insertText":"TWA5","insertTextFormat":2,"kind":1,"label":" TWA5","score":0.57685983180999756,"sortText":"40ec52eaTWA5","textEdit":{"newText":"TWA5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWAM0","insertText":"TWAM0","insertTextFormat":2,"kind":1,"label":" TWAM0","score":0.57685983180999756,"sortText":"40ec52eaTWAM0","textEdit":{"newText":"TWAM0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWAM1","insertText":"TWAM1","insertTextFormat":2,"kind":1,"label":" TWAM1","score":0.57685983180999756,"sortText":"40ec52eaTWAM1","textEdit":{"newText":"TWAM1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWAM4","insertText":"TWAM4","insertTextFormat":2,"kind":1,"label":" TWAM4","score":0.57685983180999756,"sortText":"40ec52eaTWAM4","textEdit":{"newText":"TWAM4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWAM5","insertText":"TWAM5","insertTextFormat":2,"kind":1,"label":" TWAM5","score":0.57685983180999756,"sortText":"40ec52eaTWAM5","textEdit":{"newText":"TWAM5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWAMR","insertText":"TWAMR","insertTextFormat":2,"kind":1,"label":" TWAMR","score":0.57685983180999756,"sortText":"40ec52eaTWAMR","textEdit":{"newText":"TWAMR","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWAR","insertText":"TWAR","insertTextFormat":2,"kind":1,"label":" TWAR","score":0.57685983180999756,"sortText":"40ec52eaTWAR","textEdit":{"newText":"TWAR","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWBR","insertText":"TWBR","insertTextFormat":2,"kind":1,"label":" TWBR","score":0.57685983180999756,"sortText":"40ec52eaTWBR","textEdit":{"newText":"TWBR","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWBR0","insertText":"TWBR0","insertTextFormat":2,"kind":1,"label":" TWBR0","score":0.57685983180999756,"sortText":"40ec52eaTWBR0","textEdit":{"newText":"TWBR0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWBR1","insertText":"TWBR1","insertTextFormat":2,"kind":1,"label":" TWBR1","score":0.57685983180999756,"sortText":"40ec52eaTWBR1","textEdit":{"newText":"TWBR1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWBR4","insertText":"TWBR4","insertTextFormat":2,"kind":1,"label":" TWBR4","score":0.57685983180999756,"sortText":"40ec52eaTWBR4","textEdit":{"newText":"TWBR4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWBR6","insertText":"TWBR6","insertTextFormat":2,"kind":1,"label":" TWBR6","score":0.57685983180999756,"sortText":"40ec52eaTWBR6","textEdit":{"newText":"TWBR6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWBR7","insertText":"TWBR7","insertTextFormat":2,"kind":1,"label":" TWBR7","score":0.57685983180999756,"sortText":"40ec52eaTWBR7","textEdit":{"newText":"TWBR7","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWD0","insertText":"TWD0","insertTextFormat":2,"kind":1,"label":" TWD0","score":0.57685983180999756,"sortText":"40ec52eaTWD0","textEdit":{"newText":"TWD0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWD1","insertText":"TWD1","insertTextFormat":2,"kind":1,"label":" TWD1","score":0.57685983180999756,"sortText":"40ec52eaTWD1","textEdit":{"newText":"TWD1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWD2","insertText":"TWD2","insertTextFormat":2,"kind":1,"label":" TWD2","score":0.57685983180999756,"sortText":"40ec52eaTWD2","textEdit":{"newText":"TWD2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWD4","insertText":"TWD4","insertTextFormat":2,"kind":1,"label":" TWD4","score":0.57685983180999756,"sortText":"40ec52eaTWD4","textEdit":{"newText":"TWD4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWD6","insertText":"TWD6","insertTextFormat":2,"kind":1,"label":" TWD6","score":0.57685983180999756,"sortText":"40ec52eaTWD6","textEdit":{"newText":"TWD6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWD7","insertText":"TWD7","insertTextFormat":2,"kind":1,"label":" TWD7","score":0.57685983180999756,"sortText":"40ec52eaTWD7","textEdit":{"newText":"TWD7","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWDR","insertText":"TWDR","insertTextFormat":2,"kind":1,"label":" TWDR","score":0.57685983180999756,"sortText":"40ec52eaTWDR","textEdit":{"newText":"TWDR","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWEA","insertText":"TWEA","insertTextFormat":2,"kind":1,"label":" TWEA","score":0.57685983180999756,"sortText":"40ec52eaTWEA","textEdit":{"newText":"TWEA","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWEN","insertText":"TWEN","insertTextFormat":2,"kind":1,"label":" TWEN","score":0.57685983180999756,"sortText":"40ec52eaTWEN","textEdit":{"newText":"TWEN","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWIE","insertText":"TWIE","insertTextFormat":2,"kind":1,"label":" TWIE","score":0.57685983180999756,"sortText":"40ec52eaTWIE","textEdit":{"newText":"TWIE","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TWINT","insertText":"TWINT","insertTextFormat":2,"kind":1,"label":" TWINT","score":0.57685983180999756,"sortText":"40ec52eaTWINT","textEdit":{"newText":"TWINT","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":194,"jsonrpc":"2.0"}Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":9},"context":{"triggerKind":3}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 13838

{"id":195,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"TIFR0","insertText":"TIFR0","insertTextFormat":2,"kind":1,"label":" TIFR0","score":0.57685983180999756,"sortText":"40fec88dTIFR0","textEdit":{"newText":"TIFR0","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIFR1","insertText":"TIFR1","insertTextFormat":2,"kind":1,"label":" TIFR1","score":0.57685983180999756,"sortText":"40fec88dTIFR1","textEdit":{"newText":"TIFR1","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIFR2","insertText":"TIFR2","insertTextFormat":2,"kind":1,"label":" TIFR2","score":0.57685983180999756,"sortText":"40fec88dTIFR2","textEdit":{"newText":"TIFR2","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER0A","insertText":"TIMER0A","insertTextFormat":2,"kind":1,"label":" TIMER0A","score":0.57685983180999756,"sortText":"40fec88dTIMER0A","textEdit":{"newText":"TIMER0A","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER0B","insertText":"TIMER0B","insertTextFormat":2,"kind":1,"label":" TIMER0B","score":0.57685983180999756,"sortText":"40fec88dTIMER0B","textEdit":{"newText":"TIMER0B","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_COMPA_vect","insertText":"TIMER0_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPA_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER0_COMPA_vect","textEdit":{"newText":"TIMER0_COMPA_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_COMPA_vect_num","insertText":"TIMER0_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPA_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER0_COMPA_vect_num","textEdit":{"newText":"TIMER0_COMPA_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_COMPB_vect","insertText":"TIMER0_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPB_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER0_COMPB_vect","textEdit":{"newText":"TIMER0_COMPB_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_COMPB_vect_num","insertText":"TIMER0_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPB_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER0_COMPB_vect_num","textEdit":{"newText":"TIMER0_COMPB_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_OVF_vect","insertText":"TIMER0_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER0_OVF_vect","textEdit":{"newText":"TIMER0_OVF_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER0_OVF_vect_num","insertText":"TIMER0_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER0_OVF_vect_num","textEdit":{"newText":"TIMER0_OVF_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1A","insertText":"TIMER1A","insertTextFormat":2,"kind":1,"label":" TIMER1A","score":0.57685983180999756,"sortText":"40fec88dTIMER1A","textEdit":{"newText":"TIMER1A","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1B","insertText":"TIMER1B","insertTextFormat":2,"kind":1,"label":" TIMER1B","score":0.57685983180999756,"sortText":"40fec88dTIMER1B","textEdit":{"newText":"TIMER1B","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1C","insertText":"TIMER1C","insertTextFormat":2,"kind":1,"label":" TIMER1C","score":0.57685983180999756,"sortText":"40fec88dTIMER1C","textEdit":{"newText":"TIMER1C","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_CAPT_vect","insertText":"TIMER1_CAPT_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER1_CAPT_vect","textEdit":{"newText":"TIMER1_CAPT_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_CAPT_vect_num","insertText":"TIMER1_CAPT_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER1_CAPT_vect_num","textEdit":{"newText":"TIMER1_CAPT_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPA_vect","insertText":"TIMER1_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER1_COMPA_vect","textEdit":{"newText":"TIMER1_COMPA_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPA_vect_num","insertText":"TIMER1_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER1_COMPA_vect_num","textEdit":{"newText":"TIMER1_COMPA_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPB_vect","insertText":"TIMER1_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER1_COMPB_vect","textEdit":{"newText":"TIMER1_COMPB_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_COMPB_vect_num","insertText":"TIMER1_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER1_COMPB_vect_num","textEdit":{"newText":"TIMER1_COMPB_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_OVF_vect","insertText":"TIMER1_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_OVF_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER1_OVF_vect","textEdit":{"newText":"TIMER1_OVF_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER1_OVF_vect_num","insertText":"TIMER1_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_OVF_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER1_OVF_vect_num","textEdit":{"newText":"TIMER1_OVF_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2","insertText":"TIMER2","insertTextFormat":2,"kind":1,"label":" TIMER2","score":0.57685983180999756,"sortText":"40fec88dTIMER2","textEdit":{"newText":"TIMER2","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2A","insertText":"TIMER2A","insertTextFormat":2,"kind":1,"label":" TIMER2A","score":0.57685983180999756,"sortText":"40fec88dTIMER2A","textEdit":{"newText":"TIMER2A","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2B","insertText":"TIMER2B","insertTextFormat":2,"kind":1,"label":" TIMER2B","score":0.57685983180999756,"sortText":"40fec88dTIMER2B","textEdit":{"newText":"TIMER2B","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPA_vect","insertText":"TIMER2_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER2_COMPA_vect","textEdit":{"newText":"TIMER2_COMPA_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPA_vect_num","insertText":"TIMER2_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER2_COMPA_vect_num","textEdit":{"newText":"TIMER2_COMPA_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPB_vect","insertText":"TIMER2_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER2_COMPB_vect","textEdit":{"newText":"TIMER2_COMPB_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_COMPB_vect_num","insertText":"TIMER2_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER2_COMPB_vect_num","textEdit":{"newText":"TIMER2_COMPB_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_OVF_vect","insertText":"TIMER2_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect","score":0.57685983180999756,"sortText":"40fec88dTIMER2_OVF_vect","textEdit":{"newText":"TIMER2_OVF_vect","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMER2_OVF_vect_num","insertText":"TIMER2_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect_num","score":0.57685983180999756,"sortText":"40fec88dTIMER2_OVF_vect_num","textEdit":{"newText":"TIMER2_OVF_vect_num","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3A","insertText":"TIMER3A","insertTextFormat":2,"kind":1,"label":" TIMER3A","score":0.57685983180999756,"sortText":"40fec88dTIMER3A","textEdit":{"newText":"TIMER3A","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3B","insertText":"TIMER3B","insertTextFormat":2,"kind":1,"label":" TIMER3B","score":0.57685983180999756,"sortText":"40fec88dTIMER3B","textEdit":{"newText":"TIMER3B","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3C","insertText":"TIMER3C","insertTextFormat":2,"kind":1,"label":" TIMER3C","score":0.57685983180999756,"sortText":"40fec88dTIMER3C","textEdit":{"newText":"TIMER3C","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4A","insertText":"TIMER4A","insertTextFormat":2,"kind":1,"label":" TIMER4A","score":0.57685983180999756,"sortText":"40fec88dTIMER4A","textEdit":{"newText":"TIMER4A","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4B","insertText":"TIMER4B","insertTextFormat":2,"kind":1,"label":" TIMER4B","score":0.57685983180999756,"sortText":"40fec88dTIMER4B","textEdit":{"newText":"TIMER4B","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4C","insertText":"TIMER4C","insertTextFormat":2,"kind":1,"label":" TIMER4C","score":0.57685983180999756,"sortText":"40fec88dTIMER4C","textEdit":{"newText":"TIMER4C","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4D","insertText":"TIMER4D","insertTextFormat":2,"kind":1,"label":" TIMER4D","score":0.57685983180999756,"sortText":"40fec88dTIMER4D","textEdit":{"newText":"TIMER4D","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5A","insertText":"TIMER5A","insertTextFormat":2,"kind":1,"label":" TIMER5A","score":0.57685983180999756,"sortText":"40fec88dTIMER5A","textEdit":{"newText":"TIMER5A","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5B","insertText":"TIMER5B","insertTextFormat":2,"kind":1,"label":" TIMER5B","score":0.57685983180999756,"sortText":"40fec88dTIMER5B","textEdit":{"newText":"TIMER5B","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5C","insertText":"TIMER5C","insertTextFormat":2,"kind":1,"label":" TIMER5C","score":0.57685983180999756,"sortText":"40fec88dTIMER5C","textEdit":{"newText":"TIMER5C","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMSK0","insertText":"TIMSK0","insertTextFormat":2,"kind":1,"label":" TIMSK0","score":0.57685983180999756,"sortText":"40fec88dTIMSK0","textEdit":{"newText":"TIMSK0","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMSK1","insertText":"TIMSK1","insertTextFormat":2,"kind":1,"label":" TIMSK1","score":0.57685983180999756,"sortText":"40fec88dTIMSK1","textEdit":{"newText":"TIMSK1","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"TIMSK2","insertText":"TIMSK2","insertTextFormat":2,"kind":1,"label":" TIMSK2","score":0.57685983180999756,"sortText":"40fec88dTIMSK2","textEdit":{"newText":"TIMSK2","range":{"end":{"character":9,"line":6},"start":{"character":7,"line":6}}}}]}}Content-Length: 1169

{"id":194,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"t","range":{"end":{"character":8,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":2,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}Content-Length: 1585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":94}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"text":"m"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":95}}Content-Length: 1585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":96}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:34:17: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":17,"line":33},"start":{"character":16,"line":33}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":97}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"context":{"diagnostics":[]}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":196,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 1174

{"id":197,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":11,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":2,"line":36},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 1620

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":98},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time\n#line 27 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); //nhậngà giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"text":"="}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":12}},"context":{"diagnostics":[]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":5,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 1575

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":14,"line":8},"start":{"character":5,"line":8}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":22},"start":{"character":2,"line":22}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:30: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":30,"line":34},"start":{"character":29,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":99}}Content-Length: 795

{"id":199,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":11,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":36},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":14,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":12}},"text":"\"\""}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":197},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":200,"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"context":{"diagnostics":[]}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 985

{"id":200,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":14,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":36},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":14,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":22},"start":{"character":2,"line":22}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:30: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":30,"line":34},"start":{"character":29,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":100}}Content-Length: 38

{"id":201,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"context":{"diagnostics":[]}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":202,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":203,"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":198},"jsonrpc":"2.0"}
<<<
Content-Length: 985

{"id":203,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":14,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":36},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":14,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":199},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":204,"jsonrpc":"2.0","result":[]}Content-Length: 1363

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":22},"start":{"character":2,"line":22}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:30: note: to match this '{'","range":{"end":{"character":0,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:38:1: error: expected '}'","range":{"end":{"character":30,"line":34},"start":{"character":29,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":101}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":205,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 985

{"id":206,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":14,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":36},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":14,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":207,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1724

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":102},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time=\"\";\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 27 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); //nhậngà giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n"}]},"jsonrpc":"2.0"}Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":34,"character":22}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":208,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":209,"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":203},"jsonrpc":"2.0"}
<<<
Content-Length: 1363

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:37:30: note: to match this '{'","range":{"end":{"character":0,"line":39},"start":{"character":0,"line":39}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:40:1: error: expected '}'","range":{"end":{"character":30,"line":36},"start":{"character":29,"line":36}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":102}}Content-Length: 1175

{"id":209,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":38},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":210,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"id":211,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":32},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":38},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":2}},"context":{"diagnostics":[]}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":212,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":4},"end":{"line":0,"character":4}},"context":{"diagnostics":[]}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":213,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":33,"character":8}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":214,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tachChuoi`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid tachChuoi()\n```"},"range":{"end":{"character":14,"line":33},"start":{"character":5,"line":33}}}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":31,"character":11},"end":{"line":31,"character":11}},"context":{"diagnostics":[]}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":215,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":31,"character":11},"end":{"line":31,"character":11}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":6,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1363

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":103}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":2}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":32,"character":3},"context":{"triggerKind":1}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 29842

{"id":216,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"filterText":"thread_local","insertText":"thread_local","insertTextFormat":2,"kind":14,"label":" thread_local","score":8,"sortText":"3f000000thread_local","textEdit":{"newText":"thread_local","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"bool","filterText":"true","insertText":"true","insertTextFormat":2,"kind":15,"label":" true","score":8,"sortText":"3f000000true","textEdit":{"newText":"true","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"typedef","insertText":"typedef ${1:type} ${0:name};","insertTextFormat":2,"kind":15,"label":" typedef type name;","score":8,"sortText":"3f000000typedef","textEdit":{"newText":"typedef ${1:type} ${0:name};","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"std::type_info","filterText":"typeid","insertText":"typeid(${0:expression-or-type})","insertTextFormat":2,"kind":15,"label":" typeid(expression-or-type)","score":8,"sortText":"3f000000typeid","textEdit":{"newText":"typeid(${0:expression-or-type})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"typename","insertText":"typename ${0:name}","insertTextFormat":2,"kind":15,"label":" typename name","score":8,"sortText":"3f000000typename","textEdit":{"newText":"typename ${0:name}","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"typeof","insertText":"typeof ${0:expression}","insertTextFormat":2,"kind":15,"label":" typeof expression","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof ${0:expression}","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"typeof","insertText":"typeof(${0:type})","insertTextFormat":2,"kind":15,"label":" typeof(type)","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof(${0:type})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"void","filterText":"tachChuoi","insertText":"tachChuoi()","insertTextFormat":2,"kind":3,"label":" tachChuoi()","score":7.3863968849182129,"sortText":"3f13a2a3tachChuoi","textEdit":{"newText":"tachChuoi()","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"String","filterText":"time","insertText":"time","insertTextFormat":2,"kind":6,"label":" time","score":7.3863968849182129,"sortText":"3f13a2a3time","textEdit":{"newText":"time","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tan() function returns the tangent of \\\\a \\_\\_x, measured in radians."},"filterText":"tan","insertText":"tan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tan(double __x)","score":1.5037370920181274,"sortText":"403f858btan","textEdit":{"newText":"tan(${1:double __x})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tanh() function returns the hyperbolic tangent of \\\\a \\_\\_x."},"filterText":"tanh","insertText":"tanh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tanh(double __x)","score":1.5037370920181274,"sortText":"403f858btanh","textEdit":{"newText":"tanh(${1:double __x})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toAscii","insertText":"toAscii(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toAscii(int c)","score":1.5037370920181274,"sortText":"403f858btoAscii","textEdit":{"newText":"toAscii(${1:int c})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toLowerCase","insertText":"toLowerCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toLowerCase(int c)","score":1.5037370920181274,"sortText":"403f858btoLowerCase","textEdit":{"newText":"toLowerCase(${1:int c})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toUpperCase","insertText":"toUpperCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toUpperCase(int c)","score":1.5037370920181274,"sortText":"403f858btoUpperCase","textEdit":{"newText":"toUpperCase(${1:int c})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The trunc() function rounds \\\\a \\_\\_x to the nearest integer not larger in absolute value."},"filterText":"trunc","insertText":"trunc(${1:double __x})","insertTextFormat":2,"kind":3,"label":" trunc(double __x)","score":1.5037370920181274,"sortText":"403f858btrunc","textEdit":{"newText":"trunc(${1:double __x})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"tx_buffer_index_t","insertText":"tx_buffer_index_t","insertTextFormat":2,"kind":8,"label":"•tx_buffer_index_t","score":1.5037370920181274,"sortText":"403f858btx_buffer_index_t","textEdit":{"newText":"tx_buffer_index_t","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts \\\\c c to a 7-bit unsigned char value that fits into the ASCII character set, by clearing the high-order bits.  \n\\\\warning Many people will be unhappy if you use this function. This function will convert accented letters into random characters."},"filterText":"toascii","insertText":"toascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toascii(int __c)","score":1.2690916061401367,"sortText":"405d8e68toascii","textEdit":{"newText":"toascii(${1:int __c})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to lower case, if possible."},"filterText":"tolower","insertText":"tolower(${1:int __c})","insertTextFormat":2,"kind":3,"label":" tolower(int __c)","score":1.2690916061401367,"sortText":"405d8e68tolower","textEdit":{"newText":"tolower(${1:int __c})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nfrequency (in hertz) and duration (in milliseconds)."},"filterText":"tone","insertText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","insertTextFormat":2,"kind":3,"label":" tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)","score":1.2690916061401367,"sortText":"405d8e68tone","textEdit":{"newText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to upper case, if possible."},"filterText":"toupper","insertText":"toupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toupper(int __c)","score":1.2690916061401367,"sortText":"405d8e68toupper","textEdit":{"newText":"toupper(${1:int __c})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"FILE *","filterText":"tmpfile","insertText":"tmpfile()","insertTextFormat":2,"kind":3,"label":" tmpfile()","score":1.1826096773147583,"sortText":"4068a03ftmpfile","textEdit":{"newText":"tmpfile()","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"detail":"char *","filterText":"tmpnam","insertText":"tmpnam(${1:char *s})","insertTextFormat":2,"kind":3,"label":" tmpnam(char *s)","score":1.1826096773147583,"sortText":"4068a03ftmpnam","textEdit":{"newText":"tmpnam(${1:char *s})","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCCR0B","insertText":"TCCR0B","insertTextFormat":2,"kind":1,"label":" TCCR0B","score":0.57685983180999756,"sortText":"40ec52eaTCCR0B","textEdit":{"newText":"TCCR0B","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCCR1A","insertText":"TCCR1A","insertTextFormat":2,"kind":1,"label":" TCCR1A","score":0.57685983180999756,"sortText":"40ec52eaTCCR1A","textEdit":{"newText":"TCCR1A","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCN2UB","insertText":"TCN2UB","insertTextFormat":2,"kind":1,"label":" TCN2UB","score":0.57685983180999756,"sortText":"40ec52eaTCN2UB","textEdit":{"newText":"TCN2UB","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT0","insertText":"TCNT0","insertTextFormat":2,"kind":1,"label":" TCNT0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0","textEdit":{"newText":"TCNT0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT0_0","insertText":"TCNT0_0","insertTextFormat":2,"kind":1,"label":" TCNT0_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_0","textEdit":{"newText":"TCNT0_0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT0_2","insertText":"TCNT0_2","insertTextFormat":2,"kind":1,"label":" TCNT0_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_2","textEdit":{"newText":"TCNT0_2","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT0_3","insertText":"TCNT0_3","insertTextFormat":2,"kind":1,"label":" TCNT0_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_3","textEdit":{"newText":"TCNT0_3","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT0_5","insertText":"TCNT0_5","insertTextFormat":2,"kind":1,"label":" TCNT0_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_5","textEdit":{"newText":"TCNT0_5","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT0_6","insertText":"TCNT0_6","insertTextFormat":2,"kind":1,"label":" TCNT0_6","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_6","textEdit":{"newText":"TCNT0_6","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT0_7","insertText":"TCNT0_7","insertTextFormat":2,"kind":1,"label":" TCNT0_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_7","textEdit":{"newText":"TCNT0_7","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H","insertText":"TCNT1H","insertTextFormat":2,"kind":1,"label":" TCNT1H","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H","textEdit":{"newText":"TCNT1H","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H0","insertText":"TCNT1H0","insertTextFormat":2,"kind":1,"label":" TCNT1H0","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H0","textEdit":{"newText":"TCNT1H0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H1","insertText":"TCNT1H1","insertTextFormat":2,"kind":1,"label":" TCNT1H1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H1","textEdit":{"newText":"TCNT1H1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H2","insertText":"TCNT1H2","insertTextFormat":2,"kind":1,"label":" TCNT1H2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H2","textEdit":{"newText":"TCNT1H2","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H3","insertText":"TCNT1H3","insertTextFormat":2,"kind":1,"label":" TCNT1H3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H3","textEdit":{"newText":"TCNT1H3","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H4","insertText":"TCNT1H4","insertTextFormat":2,"kind":1,"label":" TCNT1H4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H4","textEdit":{"newText":"TCNT1H4","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H5","insertText":"TCNT1H5","insertTextFormat":2,"kind":1,"label":" TCNT1H5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H5","textEdit":{"newText":"TCNT1H5","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1H6","insertText":"TCNT1H6","insertTextFormat":2,"kind":1,"label":" TCNT1H6","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H6","textEdit":{"newText":"TCNT1H6","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1L","insertText":"TCNT1L","insertTextFormat":2,"kind":1,"label":" TCNT1L","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L","textEdit":{"newText":"TCNT1L","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1L1","insertText":"TCNT1L1","insertTextFormat":2,"kind":1,"label":" TCNT1L1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L1","textEdit":{"newText":"TCNT1L1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1L2","insertText":"TCNT1L2","insertTextFormat":2,"kind":1,"label":" TCNT1L2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L2","textEdit":{"newText":"TCNT1L2","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1L3","insertText":"TCNT1L3","insertTextFormat":2,"kind":1,"label":" TCNT1L3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L3","textEdit":{"newText":"TCNT1L3","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1L4","insertText":"TCNT1L4","insertTextFormat":2,"kind":1,"label":" TCNT1L4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L4","textEdit":{"newText":"TCNT1L4","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1L5","insertText":"TCNT1L5","insertTextFormat":2,"kind":1,"label":" TCNT1L5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L5","textEdit":{"newText":"TCNT1L5","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT1L6","insertText":"TCNT1L6","insertTextFormat":2,"kind":1,"label":" TCNT1L6","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L6","textEdit":{"newText":"TCNT1L6","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2","insertText":"TCNT2","insertTextFormat":2,"kind":1,"label":" TCNT2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2","textEdit":{"newText":"TCNT2","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2_0","insertText":"TCNT2_0","insertTextFormat":2,"kind":1,"label":" TCNT2_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_0","textEdit":{"newText":"TCNT2_0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2_1","insertText":"TCNT2_1","insertTextFormat":2,"kind":1,"label":" TCNT2_1","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_1","textEdit":{"newText":"TCNT2_1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2_2","insertText":"TCNT2_2","insertTextFormat":2,"kind":1,"label":" TCNT2_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_2","textEdit":{"newText":"TCNT2_2","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2_3","insertText":"TCNT2_3","insertTextFormat":2,"kind":1,"label":" TCNT2_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_3","textEdit":{"newText":"TCNT2_3","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2_4","insertText":"TCNT2_4","insertTextFormat":2,"kind":1,"label":" TCNT2_4","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_4","textEdit":{"newText":"TCNT2_4","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2_5","insertText":"TCNT2_5","insertTextFormat":2,"kind":1,"label":" TCNT2_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_5","textEdit":{"newText":"TCNT2_5","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCNT2_7","insertText":"TCNT2_7","insertTextFormat":2,"kind":1,"label":" TCNT2_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_7","textEdit":{"newText":"TCNT2_7","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCR2AUB","insertText":"TCR2AUB","insertTextFormat":2,"kind":1,"label":" TCR2AUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2AUB","textEdit":{"newText":"TCR2AUB","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TCR2BUB","insertText":"TCR2BUB","insertTextFormat":2,"kind":1,"label":" TCR2BUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2BUB","textEdit":{"newText":"TCR2BUB","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIFR0","insertText":"TIFR0","insertTextFormat":2,"kind":1,"label":" TIFR0","score":0.57685983180999756,"sortText":"40ec52eaTIFR0","textEdit":{"newText":"TIFR0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIFR1","insertText":"TIFR1","insertTextFormat":2,"kind":1,"label":" TIFR1","score":0.57685983180999756,"sortText":"40ec52eaTIFR1","textEdit":{"newText":"TIFR1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIFR2","insertText":"TIFR2","insertTextFormat":2,"kind":1,"label":" TIFR2","score":0.57685983180999756,"sortText":"40ec52eaTIFR2","textEdit":{"newText":"TIFR2","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER0_COMPA_vect_num","insertText":"TIMER0_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPA_vect_num","textEdit":{"newText":"TIMER0_COMPA_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER0_COMPB_vect","insertText":"TIMER0_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPB_vect","textEdit":{"newText":"TIMER0_COMPB_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER0_OVF_vect","insertText":"TIMER0_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_OVF_vect","textEdit":{"newText":"TIMER0_OVF_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER0_OVF_vect_num","insertText":"TIMER0_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_OVF_vect_num","textEdit":{"newText":"TIMER0_OVF_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER1_CAPT_vect","insertText":"TIMER1_CAPT_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_CAPT_vect","textEdit":{"newText":"TIMER1_CAPT_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER1_CAPT_vect_num","insertText":"TIMER1_CAPT_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_CAPT_vect_num","textEdit":{"newText":"TIMER1_CAPT_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER1_COMPA_vect","insertText":"TIMER1_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPA_vect","textEdit":{"newText":"TIMER1_COMPA_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER1_COMPA_vect_num","insertText":"TIMER1_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPA_vect_num","textEdit":{"newText":"TIMER1_COMPA_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER1_COMPB_vect","insertText":"TIMER1_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPB_vect","textEdit":{"newText":"TIMER1_COMPB_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER1_COMPB_vect_num","insertText":"TIMER1_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPB_vect_num","textEdit":{"newText":"TIMER1_COMPB_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER1_OVF_vect_num","insertText":"TIMER1_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_OVF_vect_num","textEdit":{"newText":"TIMER1_OVF_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER2_COMPA_vect","insertText":"TIMER2_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect","textEdit":{"newText":"TIMER2_COMPA_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER2_COMPA_vect_num","insertText":"TIMER2_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect_num","textEdit":{"newText":"TIMER2_COMPA_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER2_COMPB_vect","insertText":"TIMER2_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPB_vect","textEdit":{"newText":"TIMER2_COMPB_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER2_COMPB_vect_num","insertText":"TIMER2_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPB_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPB_vect_num","textEdit":{"newText":"TIMER2_COMPB_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER2_OVF_vect","insertText":"TIMER2_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect","textEdit":{"newText":"TIMER2_OVF_vect","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMER2_OVF_vect_num","insertText":"TIMER2_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect_num","textEdit":{"newText":"TIMER2_OVF_vect_num","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMSK0","insertText":"TIMSK0","insertTextFormat":2,"kind":1,"label":" TIMSK0","score":0.57685983180999756,"sortText":"40ec52eaTIMSK0","textEdit":{"newText":"TIMSK0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TIMSK1","insertText":"TIMSK1","insertTextFormat":2,"kind":1,"label":" TIMSK1","score":0.57685983180999756,"sortText":"40ec52eaTIMSK1","textEdit":{"newText":"TIMSK1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TOV0","insertText":"TOV0","insertTextFormat":2,"kind":1,"label":" TOV0","score":0.57685983180999756,"sortText":"40ec52eaTOV0","textEdit":{"newText":"TOV0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TOV1","insertText":"TOV1","insertTextFormat":2,"kind":1,"label":" TOV1","score":0.57685983180999756,"sortText":"40ec52eaTOV1","textEdit":{"newText":"TOV1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TSM","insertText":"TSM","insertTextFormat":2,"kind":1,"label":" TSM","score":0.57685983180999756,"sortText":"40ec52eaTSM","textEdit":{"newText":"TSM","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWA1","insertText":"TWA1","insertTextFormat":2,"kind":1,"label":" TWA1","score":0.57685983180999756,"sortText":"40ec52eaTWA1","textEdit":{"newText":"TWA1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWA2","insertText":"TWA2","insertTextFormat":2,"kind":1,"label":" TWA2","score":0.57685983180999756,"sortText":"40ec52eaTWA2","textEdit":{"newText":"TWA2","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWA4","insertText":"TWA4","insertTextFormat":2,"kind":1,"label":" TWA4","score":0.57685983180999756,"sortText":"40ec52eaTWA4","textEdit":{"newText":"TWA4","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWA5","insertText":"TWA5","insertTextFormat":2,"kind":1,"label":" TWA5","score":0.57685983180999756,"sortText":"40ec52eaTWA5","textEdit":{"newText":"TWA5","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWAM0","insertText":"TWAM0","insertTextFormat":2,"kind":1,"label":" TWAM0","score":0.57685983180999756,"sortText":"40ec52eaTWAM0","textEdit":{"newText":"TWAM0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWAM1","insertText":"TWAM1","insertTextFormat":2,"kind":1,"label":" TWAM1","score":0.57685983180999756,"sortText":"40ec52eaTWAM1","textEdit":{"newText":"TWAM1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWAM4","insertText":"TWAM4","insertTextFormat":2,"kind":1,"label":" TWAM4","score":0.57685983180999756,"sortText":"40ec52eaTWAM4","textEdit":{"newText":"TWAM4","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWAM5","insertText":"TWAM5","insertTextFormat":2,"kind":1,"label":" TWAM5","score":0.57685983180999756,"sortText":"40ec52eaTWAM5","textEdit":{"newText":"TWAM5","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWAMR","insertText":"TWAMR","insertTextFormat":2,"kind":1,"label":" TWAMR","score":0.57685983180999756,"sortText":"40ec52eaTWAMR","textEdit":{"newText":"TWAMR","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWAR","insertText":"TWAR","insertTextFormat":2,"kind":1,"label":" TWAR","score":0.57685983180999756,"sortText":"40ec52eaTWAR","textEdit":{"newText":"TWAR","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWBR","insertText":"TWBR","insertTextFormat":2,"kind":1,"label":" TWBR","score":0.57685983180999756,"sortText":"40ec52eaTWBR","textEdit":{"newText":"TWBR","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWBR0","insertText":"TWBR0","insertTextFormat":2,"kind":1,"label":" TWBR0","score":0.57685983180999756,"sortText":"40ec52eaTWBR0","textEdit":{"newText":"TWBR0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWBR1","insertText":"TWBR1","insertTextFormat":2,"kind":1,"label":" TWBR1","score":0.57685983180999756,"sortText":"40ec52eaTWBR1","textEdit":{"newText":"TWBR1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWBR4","insertText":"TWBR4","insertTextFormat":2,"kind":1,"label":" TWBR4","score":0.57685983180999756,"sortText":"40ec52eaTWBR4","textEdit":{"newText":"TWBR4","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWBR6","insertText":"TWBR6","insertTextFormat":2,"kind":1,"label":" TWBR6","score":0.57685983180999756,"sortText":"40ec52eaTWBR6","textEdit":{"newText":"TWBR6","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWBR7","insertText":"TWBR7","insertTextFormat":2,"kind":1,"label":" TWBR7","score":0.57685983180999756,"sortText":"40ec52eaTWBR7","textEdit":{"newText":"TWBR7","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWD0","insertText":"TWD0","insertTextFormat":2,"kind":1,"label":" TWD0","score":0.57685983180999756,"sortText":"40ec52eaTWD0","textEdit":{"newText":"TWD0","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"TWD1","insertText":"TWD1","insertTextFormat":2,"kind":1,"label":" TWD1","score":0.57685983180999756,"sortText":"40ec52eaTWD1","textEdit":{"newText":"TWD1","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":217,"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":32,"character":3},"end":{"line":32,"character":3}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":217,"jsonrpc":"2.0"}
>>>
Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":32,"character":4},"context":{"triggerKind":3}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 1544

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 't'","range":{"end":{"character":3,"line":32},"start":{"character":2,"line":32}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":104}}Content-Length: 2357

{"id":218,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"tachChuoi","insertText":"tachChuoi()","insertTextFormat":2,"kind":3,"label":" tachChuoi()","score":7.3863968849182129,"sortText":"3f13a2a3tachChuoi","textEdit":{"newText":"tachChuoi()","range":{"end":{"character":4,"line":32},"start":{"character":2,"line":32}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tan() function returns the tangent of \\\\a \\_\\_x, measured in radians."},"filterText":"tan","insertText":"tan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tan(double __x)","score":1.5037370920181274,"sortText":"403f858btan","textEdit":{"newText":"tan(${1:double __x})","range":{"end":{"character":4,"line":32},"start":{"character":2,"line":32}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tanh() function returns the hyperbolic tangent of \\\\a \\_\\_x."},"filterText":"tanh","insertText":"tanh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tanh(double __x)","score":1.5037370920181274,"sortText":"403f858btanh","textEdit":{"newText":"tanh(${1:double __x})","range":{"end":{"character":4,"line":32},"start":{"character":2,"line":32}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nConverts c to a 7-bit unsigned char value that fits into the ASCII character set, by clearing the high-order bits."},"filterText":"toAscii","insertText":"toAscii(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toAscii(int c)","score":1.5037373304367065,"sortText":"406fa427toAscii","textEdit":{"newText":"toAscii(${1:int c})","range":{"end":{"character":4,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"tanf","insertText":"tanf","insertTextFormat":2,"kind":1,"label":" tanf","score":0.68351686000823975,"sortText":"40d1050atanf","textEdit":{"newText":"tanf","range":{"end":{"character":4,"line":32},"start":{"character":2,"line":32}}}},{"filterText":"tanhf","insertText":"tanhf","insertTextFormat":2,"kind":1,"label":" tanhf","score":0.68351686000823975,"sortText":"40d1050atanhf","textEdit":{"newText":"tanhf","range":{"end":{"character":4,"line":32},"start":{"character":2,"line":32}}}}]}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":4}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":32,"character":5},"end":{"line":32,"character":5}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1545

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ta'","range":{"end":{"character":4,"line":32},"start":{"character":2,"line":32}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":105}}Content-Length: 2007

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tach'; did you mean 'tanh'? (fix available)\n\nc:\\users\\admin\\appdata\\local\\arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7\\bin\\..\\lib\\gcc\\avr\\7.3.0\\..\\..\\..\\..\\avr\\include\\math.h:267:15:\nnote: 'tanh' declared here","range":{"end":{"character":6,"line":32},"start":{"character":2,"line":32}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":33}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":107}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":32,"character":6},"end":{"line":32,"character":6}},"context":{"diagnostics":[]}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":219,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"id":220,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":39},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":6}},"rangeLength":4,"text":"tachChuoi()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1563

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":33}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":108}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"context":{"diagnostics":[]}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":221,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"id":222,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":39},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1363

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":109}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":14}},"context":{"diagnostics":[]}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":223,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"id":224,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":39},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":29}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":225,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 479

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":36,"character":29},"end":{"line":36,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":36,"character":29},"end":{"line":36,"character":30}},"severity":3,"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:40:1: error: expected '}'"}]}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":226,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":23}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 285

{"id":227,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `available`  \n\n---\n→ `int`  \n\n---\n```cpp\n// In SoftwareSerial\npublic: virtual int available()\n```"},"range":{"end":{"character":26,"line":37},"start":{"character":17,"line":37}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":30,"character":3}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":228,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 498

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'updateSerial'"}]}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":229,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":3}},"context":{"diagnostics":[]}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":230,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":14,"character":16}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":231,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":0}},"text":"#"}]},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"context":{"diagnostics":[]}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":232,"jsonrpc":"2.0","result":[]}Content-Length: 1363

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":110}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":3,"character":2},"context":{"triggerKind":1}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 2046

{"id":233,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"include","insertText":"include <${0:header}>","insertTextFormat":2,"kind":15,"label":" include <header>","score":12,"sortText":"3ec00000include","textEdit":{"newText":"include <${0:header}>","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}}}},{"filterText":"include","insertText":"include \"${0:header}\"","insertTextFormat":2,"kind":15,"label":" include \"header\"","score":12,"sortText":"3ec00000include","textEdit":{"newText":"include \"${0:header}\"","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}}}},{"filterText":"include_next","insertText":"include_next <${0:header}>","insertTextFormat":2,"kind":15,"label":" include_next <header>","score":12,"sortText":"3ec00000include_next","textEdit":{"newText":"include_next <${0:header}>","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}}}},{"filterText":"include_next","insertText":"include_next \"${0:header}\"","insertTextFormat":2,"kind":15,"label":" include_next \"header\"","score":12,"sortText":"3ec00000include_next","textEdit":{"newText":"include_next \"${0:header}\"","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}}}},{"filterText":"if","insertText":"if ${0:condition}","insertTextFormat":2,"kind":15,"label":" if condition","score":8,"sortText":"3f000000if","textEdit":{"newText":"if ${0:condition}","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}}}},{"filterText":"ifdef","insertText":"ifdef ${0:macro}","insertTextFormat":2,"kind":15,"label":" ifdef macro","score":8,"sortText":"3f000000ifdef","textEdit":{"newText":"ifdef ${0:macro}","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}}}},{"filterText":"ifndef","insertText":"ifndef ${0:macro}","insertTextFormat":2,"kind":15,"label":" ifndef macro","score":8,"sortText":"3f000000ifndef","textEdit":{"newText":"ifndef ${0:macro}","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":234,"jsonrpc":"2.0"}Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"id":234,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":39},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}Content-Length: 1543

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":2,"line":3},"start":{"character":1,"line":3}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":111}}Content-Length: 1543

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":3,"line":3},"start":{"character":1,"line":3}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":112}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":3},"end":{"line":3,"character":3}},"context":{"diagnostics":[]}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":235,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"id":236,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":39},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":3}},"rangeLength":2,"text":"include \u003cheader\u003e"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"context":{"diagnostics":[]}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":237,"jsonrpc":"2.0","result":[]}Content-Length: 1533

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'header' file not found","range":{"end":{"character":17,"line":3},"start":{"character":9,"line":3}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:38:30: note: to match this '{'","range":{"end":{"character":0,"line":40},"start":{"character":0,"line":40}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:41:1: error: expected '}'","range":{"end":{"character":30,"line":37},"start":{"character":29,"line":37}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":113}}
>>>
Content-Length: 1550

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":114},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\r\n#include \u003cheader\u003e\r\n//Create software serial object to communicate with SIM800L\r\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\r\nString time=\"\";\r\nvoid setup()\r\n{\r\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\r\n  Serial.begin(9600);\r\n  \r\n  //Begin serial communication with Arduino and SIM800L\r\n  mySerial.begin(9600);\r\n\r\n  Serial.println(\"Initializing...\");\r\n  delay(1000);\r\n\r\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\r\n  updateSerial();\r\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\r\n  updateSerial();\r\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\r\n  updateSerial();\r\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\r\n  updateSerial();\r\n  // sms();\r\n  tachChuoi();\r\n}\r\nvoid tachChuoi(){\r\n  mySerial.println(\"AT+CCLK?\"); //nhậngà giờ\r\n  delay(100);\r\n  while(mySerial.available()){\r\n    char ch=mySerial.read();\r\n    time+=ch;\n"}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":115},"contentChanges":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"rangeLength":6,"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},"context":{"diagnostics":[]}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":7,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":7,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 38

{"id":238,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 792

{"id":239,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":34},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":14,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":116},"contentChanges":[{"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":241},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":117},"contentChanges":[{"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":118},"contentChanges":[{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":119},"contentChanges":[{"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":14}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":120},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":16},"end":{"line":3,"character":16}},"context":{"diagnostics":[]}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 3499

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'SoftwareSerial'","range":{"end":{"character":14,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'String'","range":{"end":{"character":6,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":10},"start":{"character":2,"line":10}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:11:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:16:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":21},"start":{"character":2,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":23},"start":{"character":2,"line":23}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":25},"start":{"character":2,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tachChuoi'","range":{"end":{"character":11,"line":27},"start":{"character":2,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":31},"start":{"character":2,"line":31}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:33:30: note: to match this '{'","range":{"end":{"character":0,"line":35},"start":{"character":0,"line":35}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:36:1: error: expected '}'","range":{"end":{"character":30,"line":32},"start":{"character":29,"line":32}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":115}}Content-Length: 38

{"id":240,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":121},"contentChanges":[{"range":{"start":{"line":3,"character":16},"end":{"line":3,"character":16}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":242},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":241,"jsonrpc":"2.0"}Content-Length: 288

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":3,"character":17},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":242,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":122},"contentChanges":[{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}},"context":{"diagnostics":[]}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 3499

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'SoftwareSerial'","range":{"end":{"character":14,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'String'","range":{"end":{"character":6,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":10},"start":{"character":2,"line":10}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:11:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:16:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":21},"start":{"character":2,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":23},"start":{"character":2,"line":23}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":25},"start":{"character":2,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tachChuoi'","range":{"end":{"character":11,"line":27},"start":{"character":2,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":31},"start":{"character":2,"line":31}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:33:30: note: to match this '{'","range":{"end":{"character":0,"line":35},"start":{"character":0,"line":35}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:36:1: error: expected '}'","range":{"end":{"character":30,"line":32},"start":{"character":29,"line":32}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":120}}Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":241,"jsonrpc":"2.0"}Content-Length: 38

{"id":243,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 3499

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'SoftwareSerial'","range":{"end":{"character":14,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'String'","range":{"end":{"character":6,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":10},"start":{"character":2,"line":10}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:11:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:16:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":21},"start":{"character":2,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":23},"start":{"character":2,"line":23}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":25},"start":{"character":2,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tachChuoi'","range":{"end":{"character":11,"line":27},"start":{"character":2,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":31},"start":{"character":2,"line":31}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:33:30: note: to match this '{'","range":{"end":{"character":0,"line":35},"start":{"character":0,"line":35}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:36:1: error: expected '}'","range":{"end":{"character":30,"line":32},"start":{"character":29,"line":32}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":121}}Content-Length: 3499

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'SoftwareSerial'","range":{"end":{"character":14,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'String'","range":{"end":{"character":6,"line":6},"start":{"character":0,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":10},"start":{"character":2,"line":10}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:11:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Serial'; did you mean 'mySerial'? (fix available)\n\nSIM800L_ver1.ino.cpp:6:16: note: 'mySerial' declared here","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"'mySerial' declared here\n\nSIM800L_ver1.ino.cpp:16:3: error: use of undeclared identifier 'Serial'; did you mean 'mySerial'?","range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":21},"start":{"character":2,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":23},"start":{"character":2,"line":23}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":25},"start":{"character":2,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tachChuoi'","range":{"end":{"character":11,"line":27},"start":{"character":2,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'delay'","range":{"end":{"character":7,"line":31},"start":{"character":2,"line":31}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:33:30: note: to match this '{'","range":{"end":{"character":0,"line":35},"start":{"character":0,"line":35}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:36:1: error: expected '}'","range":{"end":{"character":30,"line":32},"start":{"character":29,"line":32}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":122}}Content-Length: 792

{"id":244,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":23,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":11,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":34},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":14,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}},"context":{"diagnostics":[]}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":245,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 792

{"id":246,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":23,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":11,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":34},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":14,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}},"context":{"diagnostics":[]}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":247,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1769

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":123},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time=\"\";\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  tachChuoi();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); //nhậngà giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}},"context":{"diagnostics":[]}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":248,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"id":249,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":23,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":11,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":39},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":40,"character":3},"end":{"line":40,"character":3}},"context":{"diagnostics":[]}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":250,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":247},"jsonrpc":"2.0"}Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp","version":124},"contentChanges":[{"range":{"start":{"line":40,"character":3},"end":{"line":40,"character":3}},"text":"\r\n  "}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":248},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server788322599/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":4},"end":{"line":0,"character":4}},"context":{"diagnostics":[]}},"id":251,"jsonrpc":"2.0"}
<<<
Content-Length: 101

{"error":{"code":-32602,"message":"onCodeAction called for non-added file"},"id":251,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":1456,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server905088963\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":4}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 263

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":4},"context":{"triggerKind":1}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 452

{"id":3,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"SoftwareSerial","documentation":{"kind":"markdown","value":"SIM800L Tx & Rx is connected to Arduino #3 & #2"},"filterText":"mySerial","insertText":"mySerial","insertTextFormat":2,"kind":6,"label":" mySerial","score":22.191656112670898,"sortText":"3e4e777dmySerial","textEdit":{"newText":"mySerial","range":{"end":{"character":4,"line":45},"start":{"character":2,"line":45}}}}]}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":4}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":3},"context":{"triggerKind":1}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 26502

{"id":4,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"SoftwareSerial","documentation":{"kind":"markdown","value":"SIM800L Tx & Rx is connected to Arduino #3 & #2"},"filterText":"mySerial","insertText":"mySerial","insertTextFormat":2,"kind":6,"label":" mySerial","score":22.191656112670898,"sortText":"3e4e777dmySerial","textEdit":{"newText":"mySerial","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"The malloc() function allocates \\\\c size bytes of memory.  \nIf malloc() fails, a NULL pointer is returned.  \nNote that malloc() does \\\\e not initialize the returned memory to zero bytes.  \nSee the chapter about \\\\ref malloc \"malloc() usage\" for implementation details."},"filterText":"malloc","insertText":"malloc(${1:size_t __size})","insertTextFormat":2,"kind":3,"label":" malloc(size_t __size)","score":1.5037370920181274,"sortText":"403f858bmalloc","textEdit":{"newText":"malloc(${1:size_t __size})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memccpy(void \\*dest, const void \\*src, int val, size_t len)  \n\\\\brief Copy memory area.  \nThe memccpy() function copies no more than \\\\p len bytes from memory area \\\\p src to memory area \\\\p dest, stopping when the character \\\\p val is found.  \n\\\\returns The memccpy() function returns a pointer to the next character in \\\\p dest after \\\\p val, or NULL if \\\\p val was not found in the first  \n\\\\p len characters of \\\\p src."},"filterText":"memccpy","insertText":"memccpy(${1:void *}, ${2:const void *}, ${3:int}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memccpy(void *, const void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemccpy","textEdit":{"newText":"memccpy(${1:void *}, ${2:const void *}, ${3:int}, ${4:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memccpy_P (void \\*dest, const void \\*src, int val, size_t len)  \nThis function is similar to memccpy() except that \\\\p src is pointer to a string in program space."},"filterText":"memccpy_P","insertText":"memccpy_P(${1:void *}, ${2:const void *}, ${3:int __val}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memccpy_P(void *, const void *, int __val, size_t)","score":1.5037370920181274,"sortText":"403f858bmemccpy_P","textEdit":{"newText":"memccpy_P(${1:void *}, ${2:const void *}, ${3:int __val}, ${4:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memchr(const void \\*src, int val, size_t len)  \n\\\\brief Scan memory for a character.  \nThe memchr() function scans the first len bytes of the memory area pointed to by src for the character val. The first byte to match val (interpreted as an unsigned character) stops the operation.  \n\\\\returns The memchr() function returns a pointer to the matching byte or NULL if the character does not occur in the given memory area."},"filterText":"memchr","insertText":"memchr(${1:const void *}, ${2:int}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memchr(const void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemchr","textEdit":{"newText":"memchr(${1:const void *}, ${2:int}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"const void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const void * memchr_P(const void \\*s, int val, size_t len)  \n\\\\brief Scan flash memory for a character.  \nThe memchr_P() function scans the first \\\\p len bytes of the flash memory area pointed to by \\\\p s for the character \\\\p val. The first byte to match \\\\p val (interpreted as an unsigned character) stops the operation.  \n\\\\return The memchr_P() function returns a pointer to the matching byte or \\\\c NULL if the character does not occur in the given memory area."},"filterText":"memchr_P","insertText":"memchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","insertTextFormat":2,"kind":3,"label":" memchr_P(const void *, int __val, size_t __len)","score":1.5037370920181274,"sortText":"403f858bmemchr_P","textEdit":{"newText":"memchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int memcmp(const void \\*s1, const void \\*s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp() function compares the first len bytes of the memory areas s1 and s2. The comparision is performed using unsigned char operations.  \n\\\\returns The memcmp() function returns an integer less than, equal to, or greater than zero if the first len bytes of s1 is found, respectively, to be less than, to match, or be greater than the first len bytes of s2.  \n\\\\note Be sure to store the result in a 16 bit variable since you may get incorrect results if you use an unsigned char or char due to truncation.  \n\\\\warning This function is not -mint8 compatible, although if you only care about testing for equality, this function should be safe to use."},"filterText":"memcmp","insertText":"memcmp(${1:const void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp(const void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcmp","textEdit":{"newText":"memcmp(${1:const void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int memcmp_P(const void \\*s1, const void \\*s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp_P() function compares the first \\\\p len bytes of the memory areas \\\\p s1 and flash \\\\p s2. The comparision is performed using unsigned char operations.  \n\\\\returns The memcmp_P() function returns an integer less than, equal to, or greater than zero if the first \\\\p len bytes of \\\\p s1 is found,  \nrespectively, to be less than, to match, or be greater than the first  \n\\\\p len bytes of \\\\p s2."},"filterText":"memcmp_P","insertText":"memcmp_P(${1:const void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp_P(const void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcmp_P","textEdit":{"newText":"memcmp_P(${1:const void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int memcmp_PF(const void \\*s1, uint_farptr_t s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp_PF() function compares the first \\\\p len bytes of the memory areas \\\\p s1 and flash \\\\p s2. The comparision is performed using unsigned char operations. It is an equivalent of memcmp_P() function, except that it is capable working on all FLASH including the exteded area above 64kB.  \n\\\\returns The memcmp_PF() function returns an integer less than, equal to, or greater than zero if the first \\\\p len bytes of \\\\p s1 is found,  \nrespectively, to be less than, to match, or be greater than the first  \n\\\\p len bytes of \\\\p s2."},"filterText":"memcmp_PF","insertText":"memcmp_PF(${1:const void *}, ${2:uint_farptr_t}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp_PF(const void *, uint_farptr_t, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcmp_PF","textEdit":{"newText":"memcmp_PF(${1:const void *}, ${2:uint_farptr_t}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memcpy(void \\*dest, const void \\*src, size_t len)  \n\\\\brief Copy a memory area.  \nThe memcpy() function copies len bytes from memory area src to memory area dest. The memory areas may not overlap. Use memmove() if the memory areas do overlap.  \n\\\\returns The memcpy() function returns a pointer to dest."},"filterText":"memcpy","insertText":"memcpy(${1:void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcpy(void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcpy","textEdit":{"newText":"memcpy(${1:void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memcpy_P(void \\*dest, const void \\*src, size_t n)  \nThe memcpy_P() function is similar to memcpy(), except the src string resides in program space.  \n\\\\returns The memcpy_P() function returns a pointer to dest."},"filterText":"memcpy_P","insertText":"memcpy_P(${1:void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcpy_P(void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcpy_P","textEdit":{"newText":"memcpy_P(${1:void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memcpy_PF(void \\*dest, uint_farptr_t src, size_t n)  \n\\\\brief Copy a memory block from flash to SRAM  \nThe memcpy_PF() function is similar to memcpy(), except the data is copied from the program space and is addressed using a far pointer.  \n\\\\param dest A pointer to the destination buffer  \n\\\\param src A far pointer to the origin of data in flash memory  \n\\\\param n The number of bytes to be copied  \n\\\\returns The memcpy_PF() function returns a pointer to \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"memcpy_PF","insertText":"memcpy_PF(${1:void *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"kind":3,"label":" memcpy_PF(void *dest, uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bmemcpy_PF","textEdit":{"newText":"memcpy_PF(${1:void *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memmem(const void \\*s1, size_t len1, const void \\*s2, size_t len2)  \nThe memmem() function finds the start of the first occurrence of the substring \\\\p s2 of length \\\\p len2 in the memory area \\\\p s1 of length  \n\\\\p len1.  \n\\\\return The memmem() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p len2 is zero, the function returns \\\\p s1."},"filterText":"memmem","insertText":"memmem(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memmem(const void *, size_t, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemmem","textEdit":{"newText":"memmem(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memmem_P(const void \\*s1, size_t len1, const void \\*s2, size_t len2)  \nThe memmem_P() function is similar to memmem() except that \\\\p s2 is pointer to a string in program space."},"filterText":"memmem_P","insertText":"memmem_P(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memmem_P(const void *, size_t, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemmem_P","textEdit":{"newText":"memmem_P(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memmove(void \\*dest, const void \\*src, size_t len)  \n\\\\brief Copy memory area.  \nThe memmove() function copies len bytes from memory area src to memory area dest. The memory areas may overlap.  \n\\\\returns The memmove() function returns a pointer to dest."},"filterText":"memmove","insertText":"memmove(${1:void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memmove(void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemmove","textEdit":{"newText":"memmove(${1:void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memrchr(const void \\*src, int val, size_t len)  \nThe memrchr() function is like the memchr() function, except that it searches backwards from the end of the \\\\p len bytes pointed to by \\\\p src instead of forwards from the front. (Glibc, GNU extension.)  \n\\\\return The memrchr() function returns a pointer to the matching byte or \\\\c NULL if the character does not occur in the given memory area."},"filterText":"memrchr","insertText":"memrchr(${1:const void *}, ${2:int}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memrchr(const void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemrchr","textEdit":{"newText":"memrchr(${1:const void *}, ${2:int}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"const void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const void +memrchr_P(const void \\*src, int val, size_t len)  \nThe memrchr_P() function is like the memchr_P() function, except that it searches backwards from the end of the \\\\p len bytes pointed to by \\\\p src instead of forwards from the front. (Glibc, GNU extension.)  \n\\\\return The memrchr_P() function returns a pointer to the matching byte or \\\\c NULL if the character does not occur in the given memory area."},"filterText":"memrchr_P","insertText":"memrchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","insertTextFormat":2,"kind":3,"label":" memrchr_P(const void *, int __val, size_t __len)","score":1.5037370920181274,"sortText":"403f858bmemrchr_P","textEdit":{"newText":"memrchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memset(void \\*dest, int val, size_t len)  \n\\\\brief Fill memory with a constant byte.  \nThe memset() function fills the first len bytes of the memory area pointed to by dest with the constant byte val.  \n\\\\returns The memset() function returns a pointer to the memory area dest."},"filterText":"memset","insertText":"memset(${1:void *}, ${2:int}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memset(void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemset","textEdit":{"newText":"memset(${1:void *}, ${2:int}, ${3:size_t})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The modf() function breaks the argument \\\\a \\_\\_x into integral and fractional parts, each of which has the same sign as the argument.  \nIt stores the integral part as a double in the object pointed to by  \n\\\\a \\_\\_iptr.  \nThe modf() function returns the signed fractional part of \\\\a \\_\\_x.  \n\\\\note This implementation skips writing by zero pointer. However,  \nthe GCC 4.3 can replace this function with inline code that does not permit to use NULL address for the avoiding of storing."},"filterText":"modf","insertText":"modf(${1:double __x}, ${2:double *__iptr})","insertTextFormat":2,"kind":3,"label":" modf(double __x, double *__iptr)","score":1.5037370920181274,"sortText":"403f858bmodf","textEdit":{"newText":"modf(${1:double __x}, ${2:double *__iptr})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"float","documentation":{"kind":"markdown","value":"An alias for modf()."},"filterText":"modff","insertText":"modff(${1:float __x}, ${2:float *__iptr})","insertTextFormat":2,"kind":3,"label":" modff(float __x, float *__iptr)","score":1.5037370920181274,"sortText":"403f858bmodff","textEdit":{"newText":"modff(${1:float __x}, ${2:float *__iptr})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"makeWord","insertText":"makeWord($0)","insertTextFormat":2,"kind":3,"label":" makeWord(…)","score":1.2690916061401367,"sortText":"405d8e68makeWord","textEdit":{"newText":"makeWord($0)","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"map","insertText":"map(${1:long}, ${2:long}, ${3:long}, ${4:long}, ${5:long})","insertTextFormat":2,"kind":3,"label":" map(long, long, long, long, long)","score":1.2690916061401367,"sortText":"405d8e68map","textEdit":{"newText":"map(${1:long}, ${2:long}, ${3:long}, ${4:long}, ${5:long})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"Type whose alignment is supported in every context and is at least as great as that of any standard type not using alignment specifiers."},"filterText":"max_align_t","insertText":"max_align_t","insertTextFormat":2,"kind":8,"label":" max_align_t","score":1.2690916061401367,"sortText":"405d8e68max_align_t","textEdit":{"newText":"max_align_t","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"micros","insertText":"micros()","insertTextFormat":2,"kind":3,"label":" micros()","score":1.2690916061401367,"sortText":"405d8e68micros","textEdit":{"newText":"micros()","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"millis","insertText":"millis()","insertTextFormat":2,"kind":3,"label":" millis()","score":1.2690916061401367,"sortText":"405d8e68millis","textEdit":{"newText":"millis()","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"const uint8_t","filterText":"MISO","insertText":"MISO","insertTextFormat":2,"kind":6,"label":" MISO","score":1.0063711404800415,"sortText":"407f2f3bMISO","textEdit":{"newText":"MISO","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"const uint8_t","filterText":"MOSI","insertText":"MOSI","insertTextFormat":2,"kind":6,"label":" MOSI","score":1.0063711404800415,"sortText":"407f2f3bMOSI","textEdit":{"newText":"MOSI","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_1_PI","insertText":"M_1_PI","insertTextFormat":2,"kind":1,"label":" M_1_PI","score":0.68351686000823975,"sortText":"40d1050aM_1_PI","textEdit":{"newText":"M_1_PI","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_2_PI","insertText":"M_2_PI","insertTextFormat":2,"kind":1,"label":" M_2_PI","score":0.68351686000823975,"sortText":"40d1050aM_2_PI","textEdit":{"newText":"M_2_PI","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_2_SQRTPI","insertText":"M_2_SQRTPI","insertTextFormat":2,"kind":1,"label":" M_2_SQRTPI","score":0.68351686000823975,"sortText":"40d1050aM_2_SQRTPI","textEdit":{"newText":"M_2_SQRTPI","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_E","insertText":"M_E","insertTextFormat":2,"kind":1,"label":" M_E","score":0.68351686000823975,"sortText":"40d1050aM_E","textEdit":{"newText":"M_E","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_LN10","insertText":"M_LN10","insertTextFormat":2,"kind":1,"label":" M_LN10","score":0.68351686000823975,"sortText":"40d1050aM_LN10","textEdit":{"newText":"M_LN10","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_LN2","insertText":"M_LN2","insertTextFormat":2,"kind":1,"label":" M_LN2","score":0.68351686000823975,"sortText":"40d1050aM_LN2","textEdit":{"newText":"M_LN2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_LOG10E","insertText":"M_LOG10E","insertTextFormat":2,"kind":1,"label":" M_LOG10E","score":0.68351686000823975,"sortText":"40d1050aM_LOG10E","textEdit":{"newText":"M_LOG10E","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_LOG2E","insertText":"M_LOG2E","insertTextFormat":2,"kind":1,"label":" M_LOG2E","score":0.68351686000823975,"sortText":"40d1050aM_LOG2E","textEdit":{"newText":"M_LOG2E","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_PI","insertText":"M_PI","insertTextFormat":2,"kind":1,"label":" M_PI","score":0.68351686000823975,"sortText":"40d1050aM_PI","textEdit":{"newText":"M_PI","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_PI_2","insertText":"M_PI_2","insertTextFormat":2,"kind":1,"label":" M_PI_2","score":0.68351686000823975,"sortText":"40d1050aM_PI_2","textEdit":{"newText":"M_PI_2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_PI_4","insertText":"M_PI_4","insertTextFormat":2,"kind":1,"label":" M_PI_4","score":0.68351686000823975,"sortText":"40d1050aM_PI_4","textEdit":{"newText":"M_PI_4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_SQRT1_2","insertText":"M_SQRT1_2","insertTextFormat":2,"kind":1,"label":" M_SQRT1_2","score":0.68351686000823975,"sortText":"40d1050aM_SQRT1_2","textEdit":{"newText":"M_SQRT1_2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"M_SQRT2","insertText":"M_SQRT2","insertTextFormat":2,"kind":1,"label":" M_SQRT2","score":0.68351686000823975,"sortText":"40d1050aM_SQRT2","textEdit":{"newText":"M_SQRT2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MCUCR","insertText":"MCUCR","insertTextFormat":2,"kind":1,"label":" MCUCR","score":0.57685983180999756,"sortText":"40ec52eaMCUCR","textEdit":{"newText":"MCUCR","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MCUSR","insertText":"MCUSR","insertTextFormat":2,"kind":1,"label":" MCUSR","score":0.57685983180999756,"sortText":"40ec52eaMCUSR","textEdit":{"newText":"MCUSR","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MPCM0","insertText":"MPCM0","insertTextFormat":2,"kind":1,"label":" MPCM0","score":0.57685983180999756,"sortText":"40ec52eaMPCM0","textEdit":{"newText":"MPCM0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"MSBFIRST","insertText":"MSBFIRST","insertTextFormat":2,"kind":1,"label":" MSBFIRST","score":0.57685983180999756,"sortText":"40ec52eaMSBFIRST","textEdit":{"newText":"MSBFIRST","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MSTR","insertText":"MSTR","insertTextFormat":2,"kind":1,"label":" MSTR","score":0.57685983180999756,"sortText":"40ec52eaMSTR","textEdit":{"newText":"MSTR","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MUX0","insertText":"MUX0","insertTextFormat":2,"kind":1,"label":" MUX0","score":0.57685983180999756,"sortText":"40ec52eaMUX0","textEdit":{"newText":"MUX0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MUX1","insertText":"MUX1","insertTextFormat":2,"kind":1,"label":" MUX1","score":0.57685983180999756,"sortText":"40ec52eaMUX1","textEdit":{"newText":"MUX1","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MUX2","insertText":"MUX2","insertTextFormat":2,"kind":1,"label":" MUX2","score":0.57685983180999756,"sortText":"40ec52eaMUX2","textEdit":{"newText":"MUX2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"MUX3","insertText":"MUX3","insertTextFormat":2,"kind":1,"label":" MUX3","score":0.57685983180999756,"sortText":"40ec52eaMUX3","textEdit":{"newText":"MUX3","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"max","insertText":"max(${1:a}, ${2:b})","insertTextFormat":2,"kind":1,"label":" max(a, b)","score":0.57685983180999756,"sortText":"40ec52eamax","textEdit":{"newText":"max(${1:a}, ${2:b})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"microsecondsToClockCycles","insertText":"microsecondsToClockCycles(${1:a})","insertTextFormat":2,"kind":1,"label":" microsecondsToClockCycles(a)","score":0.57685983180999756,"sortText":"40ec52eamicrosecondsToClockCycles","textEdit":{"newText":"microsecondsToClockCycles(${1:a})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"min","insertText":"min(${1:a}, ${2:b})","insertTextFormat":2,"kind":1,"label":" min(a, b)","score":0.57685983180999756,"sortText":"40ec52eamin","textEdit":{"newText":"min(${1:a}, ${2:b})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}}]}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":2}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":3},"context":{"triggerKind":1}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 29275

{"id":5,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"filterText":"thread_local","insertText":"thread_local","insertTextFormat":2,"kind":14,"label":" thread_local","score":8,"sortText":"3f000000thread_local","textEdit":{"newText":"thread_local","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"bool","filterText":"true","insertText":"true","insertTextFormat":2,"kind":15,"label":" true","score":8,"sortText":"3f000000true","textEdit":{"newText":"true","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"typedef","insertText":"typedef ${1:type} ${0:name};","insertTextFormat":2,"kind":15,"label":" typedef type name;","score":8,"sortText":"3f000000typedef","textEdit":{"newText":"typedef ${1:type} ${0:name};","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"std::type_info","filterText":"typeid","insertText":"typeid(${0:expression-or-type})","insertTextFormat":2,"kind":15,"label":" typeid(expression-or-type)","score":8,"sortText":"3f000000typeid","textEdit":{"newText":"typeid(${0:expression-or-type})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"typename","insertText":"typename ${0:name}","insertTextFormat":2,"kind":15,"label":" typename name","score":8,"sortText":"3f000000typename","textEdit":{"newText":"typename ${0:name}","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"typeof","insertText":"typeof(${0:type})","insertTextFormat":2,"kind":15,"label":" typeof(type)","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof(${0:type})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"typeof","insertText":"typeof ${0:expression}","insertTextFormat":2,"kind":15,"label":" typeof expression","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof ${0:expression}","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tan() function returns the tangent of \\\\a \\_\\_x, measured in radians."},"filterText":"tan","insertText":"tan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tan(double __x)","score":1.5037370920181274,"sortText":"403f858btan","textEdit":{"newText":"tan(${1:double __x})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tanh() function returns the hyperbolic tangent of \\\\a \\_\\_x."},"filterText":"tanh","insertText":"tanh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tanh(double __x)","score":1.5037370920181274,"sortText":"403f858btanh","textEdit":{"newText":"tanh(${1:double __x})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The trunc() function rounds \\\\a \\_\\_x to the nearest integer not larger in absolute value."},"filterText":"trunc","insertText":"trunc(${1:double __x})","insertTextFormat":2,"kind":3,"label":" trunc(double __x)","score":1.5037370920181274,"sortText":"403f858btrunc","textEdit":{"newText":"trunc(${1:double __x})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts \\\\c c to a 7-bit unsigned char value that fits into the ASCII character set, by clearing the high-order bits.  \n\\\\warning Many people will be unhappy if you use this function. This function will convert accented letters into random characters."},"filterText":"toascii","insertText":"toascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toascii(int __c)","score":1.2690916061401367,"sortText":"405d8e68toascii","textEdit":{"newText":"toascii(${1:int __c})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to lower case, if possible."},"filterText":"tolower","insertText":"tolower(${1:int __c})","insertTextFormat":2,"kind":3,"label":" tolower(int __c)","score":1.2690916061401367,"sortText":"405d8e68tolower","textEdit":{"newText":"tolower(${1:int __c})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"tone","insertText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","insertTextFormat":2,"kind":3,"label":" tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)","score":1.2690916061401367,"sortText":"405d8e68tone","textEdit":{"newText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to upper case, if possible."},"filterText":"toupper","insertText":"toupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toupper(int __c)","score":1.2690916061401367,"sortText":"405d8e68toupper","textEdit":{"newText":"toupper(${1:int __c})","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"tanf","insertText":"tanf","insertTextFormat":2,"kind":1,"label":" tanf","score":0.68351686000823975,"sortText":"40d1050atanf","textEdit":{"newText":"tanf","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"tanhf","insertText":"tanhf","insertTextFormat":2,"kind":1,"label":" tanhf","score":0.68351686000823975,"sortText":"40d1050atanhf","textEdit":{"newText":"tanhf","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"truncf","insertText":"truncf","insertTextFormat":2,"kind":1,"label":" truncf","score":0.68351686000823975,"sortText":"40d1050atruncf","textEdit":{"newText":"truncf","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCCR0B","insertText":"TCCR0B","insertTextFormat":2,"kind":1,"label":" TCCR0B","score":0.57685983180999756,"sortText":"40ec52eaTCCR0B","textEdit":{"newText":"TCCR0B","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCCR1A","insertText":"TCCR1A","insertTextFormat":2,"kind":1,"label":" TCCR1A","score":0.57685983180999756,"sortText":"40ec52eaTCCR1A","textEdit":{"newText":"TCCR1A","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCN2UB","insertText":"TCN2UB","insertTextFormat":2,"kind":1,"label":" TCN2UB","score":0.57685983180999756,"sortText":"40ec52eaTCN2UB","textEdit":{"newText":"TCN2UB","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT0","insertText":"TCNT0","insertTextFormat":2,"kind":1,"label":" TCNT0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0","textEdit":{"newText":"TCNT0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT0_2","insertText":"TCNT0_2","insertTextFormat":2,"kind":1,"label":" TCNT0_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_2","textEdit":{"newText":"TCNT0_2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT0_3","insertText":"TCNT0_3","insertTextFormat":2,"kind":1,"label":" TCNT0_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_3","textEdit":{"newText":"TCNT0_3","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT0_5","insertText":"TCNT0_5","insertTextFormat":2,"kind":1,"label":" TCNT0_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_5","textEdit":{"newText":"TCNT0_5","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT0_6","insertText":"TCNT0_6","insertTextFormat":2,"kind":1,"label":" TCNT0_6","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_6","textEdit":{"newText":"TCNT0_6","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT0_7","insertText":"TCNT0_7","insertTextFormat":2,"kind":1,"label":" TCNT0_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_7","textEdit":{"newText":"TCNT0_7","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1H","insertText":"TCNT1H","insertTextFormat":2,"kind":1,"label":" TCNT1H","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H","textEdit":{"newText":"TCNT1H","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1H0","insertText":"TCNT1H0","insertTextFormat":2,"kind":1,"label":" TCNT1H0","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H0","textEdit":{"newText":"TCNT1H0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1H3","insertText":"TCNT1H3","insertTextFormat":2,"kind":1,"label":" TCNT1H3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H3","textEdit":{"newText":"TCNT1H3","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1H4","insertText":"TCNT1H4","insertTextFormat":2,"kind":1,"label":" TCNT1H4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H4","textEdit":{"newText":"TCNT1H4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1L","insertText":"TCNT1L","insertTextFormat":2,"kind":1,"label":" TCNT1L","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L","textEdit":{"newText":"TCNT1L","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1L1","insertText":"TCNT1L1","insertTextFormat":2,"kind":1,"label":" TCNT1L1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L1","textEdit":{"newText":"TCNT1L1","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1L2","insertText":"TCNT1L2","insertTextFormat":2,"kind":1,"label":" TCNT1L2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L2","textEdit":{"newText":"TCNT1L2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1L3","insertText":"TCNT1L3","insertTextFormat":2,"kind":1,"label":" TCNT1L3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L3","textEdit":{"newText":"TCNT1L3","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1L4","insertText":"TCNT1L4","insertTextFormat":2,"kind":1,"label":" TCNT1L4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L4","textEdit":{"newText":"TCNT1L4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT1L5","insertText":"TCNT1L5","insertTextFormat":2,"kind":1,"label":" TCNT1L5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L5","textEdit":{"newText":"TCNT1L5","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT2","insertText":"TCNT2","insertTextFormat":2,"kind":1,"label":" TCNT2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2","textEdit":{"newText":"TCNT2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT2_0","insertText":"TCNT2_0","insertTextFormat":2,"kind":1,"label":" TCNT2_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_0","textEdit":{"newText":"TCNT2_0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT2_2","insertText":"TCNT2_2","insertTextFormat":2,"kind":1,"label":" TCNT2_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_2","textEdit":{"newText":"TCNT2_2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT2_3","insertText":"TCNT2_3","insertTextFormat":2,"kind":1,"label":" TCNT2_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_3","textEdit":{"newText":"TCNT2_3","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT2_4","insertText":"TCNT2_4","insertTextFormat":2,"kind":1,"label":" TCNT2_4","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_4","textEdit":{"newText":"TCNT2_4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT2_5","insertText":"TCNT2_5","insertTextFormat":2,"kind":1,"label":" TCNT2_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_5","textEdit":{"newText":"TCNT2_5","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCNT2_7","insertText":"TCNT2_7","insertTextFormat":2,"kind":1,"label":" TCNT2_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_7","textEdit":{"newText":"TCNT2_7","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCR2AUB","insertText":"TCR2AUB","insertTextFormat":2,"kind":1,"label":" TCR2AUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2AUB","textEdit":{"newText":"TCR2AUB","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TCR2BUB","insertText":"TCR2BUB","insertTextFormat":2,"kind":1,"label":" TCR2BUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2BUB","textEdit":{"newText":"TCR2BUB","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIFR0","insertText":"TIFR0","insertTextFormat":2,"kind":1,"label":" TIFR0","score":0.57685983180999756,"sortText":"40ec52eaTIFR0","textEdit":{"newText":"TIFR0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIFR1","insertText":"TIFR1","insertTextFormat":2,"kind":1,"label":" TIFR1","score":0.57685983180999756,"sortText":"40ec52eaTIFR1","textEdit":{"newText":"TIFR1","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIFR2","insertText":"TIFR2","insertTextFormat":2,"kind":1,"label":" TIFR2","score":0.57685983180999756,"sortText":"40ec52eaTIFR2","textEdit":{"newText":"TIFR2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER0A","insertText":"TIMER0A","insertTextFormat":2,"kind":1,"label":" TIMER0A","score":0.57685983180999756,"sortText":"40ec52eaTIMER0A","textEdit":{"newText":"TIMER0A","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER0B","insertText":"TIMER0B","insertTextFormat":2,"kind":1,"label":" TIMER0B","score":0.57685983180999756,"sortText":"40ec52eaTIMER0B","textEdit":{"newText":"TIMER0B","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER0_COMPA_vect_num","insertText":"TIMER0_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPA_vect_num","textEdit":{"newText":"TIMER0_COMPA_vect_num","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER0_COMPB_vect","insertText":"TIMER0_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPB_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER0_COMPB_vect","textEdit":{"newText":"TIMER0_COMPB_vect","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1A","insertText":"TIMER1A","insertTextFormat":2,"kind":1,"label":" TIMER1A","score":0.57685983180999756,"sortText":"40ec52eaTIMER1A","textEdit":{"newText":"TIMER1A","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1B","insertText":"TIMER1B","insertTextFormat":2,"kind":1,"label":" TIMER1B","score":0.57685983180999756,"sortText":"40ec52eaTIMER1B","textEdit":{"newText":"TIMER1B","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1C","insertText":"TIMER1C","insertTextFormat":2,"kind":1,"label":" TIMER1C","score":0.57685983180999756,"sortText":"40ec52eaTIMER1C","textEdit":{"newText":"TIMER1C","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER1_CAPT_vect","insertText":"TIMER1_CAPT_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_CAPT_vect","textEdit":{"newText":"TIMER1_CAPT_vect","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER1_COMPA_vect_num","insertText":"TIMER1_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPA_vect_num","textEdit":{"newText":"TIMER1_COMPA_vect_num","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER1_COMPB_vect_num","insertText":"TIMER1_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER1_COMPB_vect_num","textEdit":{"newText":"TIMER1_COMPB_vect_num","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2","insertText":"TIMER2","insertTextFormat":2,"kind":1,"label":" TIMER2","score":0.57685983180999756,"sortText":"40ec52eaTIMER2","textEdit":{"newText":"TIMER2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2A","insertText":"TIMER2A","insertTextFormat":2,"kind":1,"label":" TIMER2A","score":0.57685983180999756,"sortText":"40ec52eaTIMER2A","textEdit":{"newText":"TIMER2A","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2B","insertText":"TIMER2B","insertTextFormat":2,"kind":1,"label":" TIMER2B","score":0.57685983180999756,"sortText":"40ec52eaTIMER2B","textEdit":{"newText":"TIMER2B","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER2_COMPA_vect","insertText":"TIMER2_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect","textEdit":{"newText":"TIMER2_COMPA_vect","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER2_COMPA_vect_num","insertText":"TIMER2_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_COMPA_vect_num","textEdit":{"newText":"TIMER2_COMPA_vect_num","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER2_OVF_vect","insertText":"TIMER2_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect","textEdit":{"newText":"TIMER2_OVF_vect","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMER2_OVF_vect_num","insertText":"TIMER2_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect_num","score":0.57685983180999756,"sortText":"40ec52eaTIMER2_OVF_vect_num","textEdit":{"newText":"TIMER2_OVF_vect_num","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3A","insertText":"TIMER3A","insertTextFormat":2,"kind":1,"label":" TIMER3A","score":0.57685983180999756,"sortText":"40ec52eaTIMER3A","textEdit":{"newText":"TIMER3A","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3B","insertText":"TIMER3B","insertTextFormat":2,"kind":1,"label":" TIMER3B","score":0.57685983180999756,"sortText":"40ec52eaTIMER3B","textEdit":{"newText":"TIMER3B","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3C","insertText":"TIMER3C","insertTextFormat":2,"kind":1,"label":" TIMER3C","score":0.57685983180999756,"sortText":"40ec52eaTIMER3C","textEdit":{"newText":"TIMER3C","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4A","insertText":"TIMER4A","insertTextFormat":2,"kind":1,"label":" TIMER4A","score":0.57685983180999756,"sortText":"40ec52eaTIMER4A","textEdit":{"newText":"TIMER4A","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4B","insertText":"TIMER4B","insertTextFormat":2,"kind":1,"label":" TIMER4B","score":0.57685983180999756,"sortText":"40ec52eaTIMER4B","textEdit":{"newText":"TIMER4B","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4C","insertText":"TIMER4C","insertTextFormat":2,"kind":1,"label":" TIMER4C","score":0.57685983180999756,"sortText":"40ec52eaTIMER4C","textEdit":{"newText":"TIMER4C","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4D","insertText":"TIMER4D","insertTextFormat":2,"kind":1,"label":" TIMER4D","score":0.57685983180999756,"sortText":"40ec52eaTIMER4D","textEdit":{"newText":"TIMER4D","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5A","insertText":"TIMER5A","insertTextFormat":2,"kind":1,"label":" TIMER5A","score":0.57685983180999756,"sortText":"40ec52eaTIMER5A","textEdit":{"newText":"TIMER5A","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5B","insertText":"TIMER5B","insertTextFormat":2,"kind":1,"label":" TIMER5B","score":0.57685983180999756,"sortText":"40ec52eaTIMER5B","textEdit":{"newText":"TIMER5B","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5C","insertText":"TIMER5C","insertTextFormat":2,"kind":1,"label":" TIMER5C","score":0.57685983180999756,"sortText":"40ec52eaTIMER5C","textEdit":{"newText":"TIMER5C","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TIMSK0","insertText":"TIMSK0","insertTextFormat":2,"kind":1,"label":" TIMSK0","score":0.57685983180999756,"sortText":"40ec52eaTIMSK0","textEdit":{"newText":"TIMSK0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TOV1","insertText":"TOV1","insertTextFormat":2,"kind":1,"label":" TOV1","score":0.57685983180999756,"sortText":"40ec52eaTOV1","textEdit":{"newText":"TOV1","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TSM","insertText":"TSM","insertTextFormat":2,"kind":1,"label":" TSM","score":0.57685983180999756,"sortText":"40ec52eaTSM","textEdit":{"newText":"TSM","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWA1","insertText":"TWA1","insertTextFormat":2,"kind":1,"label":" TWA1","score":0.57685983180999756,"sortText":"40ec52eaTWA1","textEdit":{"newText":"TWA1","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWA2","insertText":"TWA2","insertTextFormat":2,"kind":1,"label":" TWA2","score":0.57685983180999756,"sortText":"40ec52eaTWA2","textEdit":{"newText":"TWA2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWA4","insertText":"TWA4","insertTextFormat":2,"kind":1,"label":" TWA4","score":0.57685983180999756,"sortText":"40ec52eaTWA4","textEdit":{"newText":"TWA4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWA5","insertText":"TWA5","insertTextFormat":2,"kind":1,"label":" TWA5","score":0.57685983180999756,"sortText":"40ec52eaTWA5","textEdit":{"newText":"TWA5","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWAM0","insertText":"TWAM0","insertTextFormat":2,"kind":1,"label":" TWAM0","score":0.57685983180999756,"sortText":"40ec52eaTWAM0","textEdit":{"newText":"TWAM0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWAM1","insertText":"TWAM1","insertTextFormat":2,"kind":1,"label":" TWAM1","score":0.57685983180999756,"sortText":"40ec52eaTWAM1","textEdit":{"newText":"TWAM1","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWAM4","insertText":"TWAM4","insertTextFormat":2,"kind":1,"label":" TWAM4","score":0.57685983180999756,"sortText":"40ec52eaTWAM4","textEdit":{"newText":"TWAM4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWAM5","insertText":"TWAM5","insertTextFormat":2,"kind":1,"label":" TWAM5","score":0.57685983180999756,"sortText":"40ec52eaTWAM5","textEdit":{"newText":"TWAM5","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWAMR","insertText":"TWAMR","insertTextFormat":2,"kind":1,"label":" TWAMR","score":0.57685983180999756,"sortText":"40ec52eaTWAMR","textEdit":{"newText":"TWAMR","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWAR","insertText":"TWAR","insertTextFormat":2,"kind":1,"label":" TWAR","score":0.57685983180999756,"sortText":"40ec52eaTWAR","textEdit":{"newText":"TWAR","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWBR","insertText":"TWBR","insertTextFormat":2,"kind":1,"label":" TWBR","score":0.57685983180999756,"sortText":"40ec52eaTWBR","textEdit":{"newText":"TWBR","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWBR0","insertText":"TWBR0","insertTextFormat":2,"kind":1,"label":" TWBR0","score":0.57685983180999756,"sortText":"40ec52eaTWBR0","textEdit":{"newText":"TWBR0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWBR4","insertText":"TWBR4","insertTextFormat":2,"kind":1,"label":" TWBR4","score":0.57685983180999756,"sortText":"40ec52eaTWBR4","textEdit":{"newText":"TWBR4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWBR7","insertText":"TWBR7","insertTextFormat":2,"kind":1,"label":" TWBR7","score":0.57685983180999756,"sortText":"40ec52eaTWBR7","textEdit":{"newText":"TWBR7","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWD0","insertText":"TWD0","insertTextFormat":2,"kind":1,"label":" TWD0","score":0.57685983180999756,"sortText":"40ec52eaTWD0","textEdit":{"newText":"TWD0","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWD1","insertText":"TWD1","insertTextFormat":2,"kind":1,"label":" TWD1","score":0.57685983180999756,"sortText":"40ec52eaTWD1","textEdit":{"newText":"TWD1","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWD2","insertText":"TWD2","insertTextFormat":2,"kind":1,"label":" TWD2","score":0.57685983180999756,"sortText":"40ec52eaTWD2","textEdit":{"newText":"TWD2","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWD4","insertText":"TWD4","insertTextFormat":2,"kind":1,"label":" TWD4","score":0.57685983180999756,"sortText":"40ec52eaTWD4","textEdit":{"newText":"TWD4","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWD6","insertText":"TWD6","insertTextFormat":2,"kind":1,"label":" TWD6","score":0.57685983180999756,"sortText":"40ec52eaTWD6","textEdit":{"newText":"TWD6","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWDR","insertText":"TWDR","insertTextFormat":2,"kind":1,"label":" TWDR","score":0.57685983180999756,"sortText":"40ec52eaTWDR","textEdit":{"newText":"TWDR","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWEA","insertText":"TWEA","insertTextFormat":2,"kind":1,"label":" TWEA","score":0.57685983180999756,"sortText":"40ec52eaTWEA","textEdit":{"newText":"TWEA","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}},{"filterText":"TWEN","insertText":"TWEN","insertTextFormat":2,"kind":1,"label":" TWEN","score":0.57685983180999756,"sortText":"40ec52eaTWEN","textEdit":{"newText":"TWEN","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}}}}]}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":3}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mSerial'","range":{"end":{"character":9,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":2}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":4}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":4}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":3}},"text":"ỉ"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":4}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":5},"end":{"line":45,"character":5}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 403

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tỉmSerial'","range":{"end":{"character":11,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":10}}Content-Length: 1741

{"id":7,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":45,"character":5},"end":{"line":45,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":6},"end":{"line":45,"character":6}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}Content-Length: 404

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tỉmeSerial'","range":{"end":{"character":12,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":11}}
>>>
Content-Length: 263

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":6},"context":{"triggerKind":3}},"id":9,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 1742

{"id":10,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 67

{"id":9,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 1742

{"id":11,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}
>>>
Content-Length: 496

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":6},"end":{"line":45,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tỉmeSerial'"}]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":45,"character":5},"end":{"line":45,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":5},"context":{"triggerKind":1}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":13,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":4},"context":{"triggerKind":1}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":14,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 403

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tỉmSerial'","range":{"end":{"character":11,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":12}}Content-Length: 402

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tỉSerial'","range":{"end":{"character":10,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":13}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 3612

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":14},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time=\"\";\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 40 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 45 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 54 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  tachChuoi();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  tỉ\n  Serial.print(time);\n  //+CCLK: \"21/08/05,19:28:10+28\"\n\n}\nvoid loop()\n{\n  \n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\nme\n  Serial.print(time);\n  //+CCLK: \"21/08/05,19:28:10+28\"\n\n}\nvoid loop()\n{\n  \n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\nme\n"}]},"jsonrpc":"2.0"}Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":47,"character":3},"end":{"line":47,"character":4}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":3},"context":{"triggerKind":1}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 30637

{"id":15,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"String","filterText":"time","insertText":"time","insertTextFormat":2,"kind":6,"label":" time","score":9.9000005722045898,"sortText":"3ee19999time","textEdit":{"newText":"time","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"thread_local","insertText":"thread_local","insertTextFormat":2,"kind":14,"label":" thread_local","score":8,"sortText":"3f000000thread_local","textEdit":{"newText":"thread_local","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"bool","filterText":"true","insertText":"true","insertTextFormat":2,"kind":15,"label":" true","score":8,"sortText":"3f000000true","textEdit":{"newText":"true","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"typedef","insertText":"typedef ${1:type} ${0:name};","insertTextFormat":2,"kind":15,"label":" typedef type name;","score":8,"sortText":"3f000000typedef","textEdit":{"newText":"typedef ${1:type} ${0:name};","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"std::type_info","filterText":"typeid","insertText":"typeid(${0:expression-or-type})","insertTextFormat":2,"kind":15,"label":" typeid(expression-or-type)","score":8,"sortText":"3f000000typeid","textEdit":{"newText":"typeid(${0:expression-or-type})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"typename","insertText":"typename ${0:name}","insertTextFormat":2,"kind":15,"label":" typename name","score":8,"sortText":"3f000000typename","textEdit":{"newText":"typename ${0:name}","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"typeof","insertText":"typeof ${0:expression}","insertTextFormat":2,"kind":15,"label":" typeof expression","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof ${0:expression}","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"typeof","insertText":"typeof(${0:type})","insertTextFormat":2,"kind":15,"label":" typeof(type)","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof(${0:type})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"void","filterText":"tachChuoi","insertText":"tachChuoi()","insertTextFormat":2,"kind":3,"label":" tachChuoi()","score":6.6000003814697266,"sortText":"3f2ccccctachChuoi","textEdit":{"newText":"tachChuoi()","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tan() function returns the tangent of \\\\a \\_\\_x, measured in radians."},"filterText":"tan","insertText":"tan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tan(double __x)","score":1.5037370920181274,"sortText":"403f858btan","textEdit":{"newText":"tan(${1:double __x})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The tanh() function returns the hyperbolic tangent of \\\\a \\_\\_x."},"filterText":"tanh","insertText":"tanh(${1:double __x})","insertTextFormat":2,"kind":3,"label":" tanh(double __x)","score":1.5037370920181274,"sortText":"403f858btanh","textEdit":{"newText":"tanh(${1:double __x})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toAscii","insertText":"toAscii(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toAscii(int c)","score":1.5037370920181274,"sortText":"403f858btoAscii","textEdit":{"newText":"toAscii(${1:int c})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toLowerCase","insertText":"toLowerCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toLowerCase(int c)","score":1.5037370920181274,"sortText":"403f858btoLowerCase","textEdit":{"newText":"toLowerCase(${1:int c})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`"},"filterText":"toUpperCase","insertText":"toUpperCase(${1:int c})","insertTextFormat":2,"kind":3,"label":"•toUpperCase(int c)","score":1.5037370920181274,"sortText":"403f858btoUpperCase","textEdit":{"newText":"toUpperCase(${1:int c})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The trunc() function rounds \\\\a \\_\\_x to the nearest integer not larger in absolute value."},"filterText":"trunc","insertText":"trunc(${1:double __x})","insertTextFormat":2,"kind":3,"label":" trunc(double __x)","score":1.5037370920181274,"sortText":"403f858btrunc","textEdit":{"newText":"trunc(${1:double __x})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"tx_buffer_index_t","insertText":"tx_buffer_index_t","insertTextFormat":2,"kind":8,"label":"•tx_buffer_index_t","score":1.5037370920181274,"sortText":"403f858btx_buffer_index_t","textEdit":{"newText":"tx_buffer_index_t","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts \\\\c c to a 7-bit unsigned char value that fits into the ASCII character set, by clearing the high-order bits.  \n\\\\warning Many people will be unhappy if you use this function. This function will convert accented letters into random characters."},"filterText":"toascii","insertText":"toascii(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toascii(int __c)","score":1.2690916061401367,"sortText":"405d8e68toascii","textEdit":{"newText":"toascii(${1:int __c})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to lower case, if possible."},"filterText":"tolower","insertText":"tolower(${1:int __c})","insertTextFormat":2,"kind":3,"label":" tolower(int __c)","score":1.2690916061401367,"sortText":"405d8e68tolower","textEdit":{"newText":"tolower(${1:int __c})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nfrequency (in hertz) and duration (in milliseconds)."},"filterText":"tone","insertText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","insertTextFormat":2,"kind":3,"label":" tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)","score":1.2690916061401367,"sortText":"405d8e68tone","textEdit":{"newText":"tone(${1:uint8_t _pin}, ${2:unsigned int frequency})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nConverts the letter \\\\c c to upper case, if possible."},"filterText":"toupper","insertText":"toupper(${1:int __c})","insertTextFormat":2,"kind":3,"label":" toupper(int __c)","score":1.2690916061401367,"sortText":"405d8e68toupper","textEdit":{"newText":"toupper(${1:int __c})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"FILE *","filterText":"tmpfile","insertText":"tmpfile()","insertTextFormat":2,"kind":3,"label":" tmpfile()","score":1.1826096773147583,"sortText":"4068a03ftmpfile","textEdit":{"newText":"tmpfile()","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"detail":"char *","filterText":"tmpnam","insertText":"tmpnam(${1:char *s})","insertTextFormat":2,"kind":3,"label":" tmpnam(char *s)","score":1.1826096773147583,"sortText":"4068a03ftmpnam","textEdit":{"newText":"tmpnam(${1:char *s})","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER0A","insertText":"TIMER0A","insertTextFormat":2,"kind":1,"label":" TIMER0A","score":0.86528974771499634,"sortText":"40a27c5fTIMER0A","textEdit":{"newText":"TIMER0A","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER0B","insertText":"TIMER0B","insertTextFormat":2,"kind":1,"label":" TIMER0B","score":0.86528974771499634,"sortText":"40a27c5fTIMER0B","textEdit":{"newText":"TIMER0B","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER0_COMPA_vect_num","insertText":"TIMER0_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPA_vect_num","score":0.86528974771499634,"sortText":"40a27c5fTIMER0_COMPA_vect_num","textEdit":{"newText":"TIMER0_COMPA_vect_num","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER0_COMPB_vect","insertText":"TIMER0_COMPB_vect","insertTextFormat":2,"kind":1,"label":" TIMER0_COMPB_vect","score":0.86528974771499634,"sortText":"40a27c5fTIMER0_COMPB_vect","textEdit":{"newText":"TIMER0_COMPB_vect","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1A","insertText":"TIMER1A","insertTextFormat":2,"kind":1,"label":" TIMER1A","score":0.86528974771499634,"sortText":"40a27c5fTIMER1A","textEdit":{"newText":"TIMER1A","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1B","insertText":"TIMER1B","insertTextFormat":2,"kind":1,"label":" TIMER1B","score":0.86528974771499634,"sortText":"40a27c5fTIMER1B","textEdit":{"newText":"TIMER1B","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER1C","insertText":"TIMER1C","insertTextFormat":2,"kind":1,"label":" TIMER1C","score":0.86528974771499634,"sortText":"40a27c5fTIMER1C","textEdit":{"newText":"TIMER1C","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER1_CAPT_vect","insertText":"TIMER1_CAPT_vect","insertTextFormat":2,"kind":1,"label":" TIMER1_CAPT_vect","score":0.86528974771499634,"sortText":"40a27c5fTIMER1_CAPT_vect","textEdit":{"newText":"TIMER1_CAPT_vect","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER1_COMPA_vect_num","insertText":"TIMER1_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPA_vect_num","score":0.86528974771499634,"sortText":"40a27c5fTIMER1_COMPA_vect_num","textEdit":{"newText":"TIMER1_COMPA_vect_num","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER1_COMPB_vect_num","insertText":"TIMER1_COMPB_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER1_COMPB_vect_num","score":0.86528974771499634,"sortText":"40a27c5fTIMER1_COMPB_vect_num","textEdit":{"newText":"TIMER1_COMPB_vect_num","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2","insertText":"TIMER2","insertTextFormat":2,"kind":1,"label":" TIMER2","score":0.86528974771499634,"sortText":"40a27c5fTIMER2","textEdit":{"newText":"TIMER2","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2A","insertText":"TIMER2A","insertTextFormat":2,"kind":1,"label":" TIMER2A","score":0.86528974771499634,"sortText":"40a27c5fTIMER2A","textEdit":{"newText":"TIMER2A","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER2B","insertText":"TIMER2B","insertTextFormat":2,"kind":1,"label":" TIMER2B","score":0.86528974771499634,"sortText":"40a27c5fTIMER2B","textEdit":{"newText":"TIMER2B","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER2_COMPA_vect","insertText":"TIMER2_COMPA_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect","score":0.86528974771499634,"sortText":"40a27c5fTIMER2_COMPA_vect","textEdit":{"newText":"TIMER2_COMPA_vect","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER2_COMPA_vect_num","insertText":"TIMER2_COMPA_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_COMPA_vect_num","score":0.86528974771499634,"sortText":"40a27c5fTIMER2_COMPA_vect_num","textEdit":{"newText":"TIMER2_COMPA_vect_num","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER2_OVF_vect","insertText":"TIMER2_OVF_vect","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect","score":0.86528974771499634,"sortText":"40a27c5fTIMER2_OVF_vect","textEdit":{"newText":"TIMER2_OVF_vect","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMER2_OVF_vect_num","insertText":"TIMER2_OVF_vect_num","insertTextFormat":2,"kind":1,"label":" TIMER2_OVF_vect_num","score":0.86528974771499634,"sortText":"40a27c5fTIMER2_OVF_vect_num","textEdit":{"newText":"TIMER2_OVF_vect_num","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3A","insertText":"TIMER3A","insertTextFormat":2,"kind":1,"label":" TIMER3A","score":0.86528974771499634,"sortText":"40a27c5fTIMER3A","textEdit":{"newText":"TIMER3A","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3B","insertText":"TIMER3B","insertTextFormat":2,"kind":1,"label":" TIMER3B","score":0.86528974771499634,"sortText":"40a27c5fTIMER3B","textEdit":{"newText":"TIMER3B","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER3C","insertText":"TIMER3C","insertTextFormat":2,"kind":1,"label":" TIMER3C","score":0.86528974771499634,"sortText":"40a27c5fTIMER3C","textEdit":{"newText":"TIMER3C","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4A","insertText":"TIMER4A","insertTextFormat":2,"kind":1,"label":" TIMER4A","score":0.86528974771499634,"sortText":"40a27c5fTIMER4A","textEdit":{"newText":"TIMER4A","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4B","insertText":"TIMER4B","insertTextFormat":2,"kind":1,"label":" TIMER4B","score":0.86528974771499634,"sortText":"40a27c5fTIMER4B","textEdit":{"newText":"TIMER4B","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4C","insertText":"TIMER4C","insertTextFormat":2,"kind":1,"label":" TIMER4C","score":0.86528974771499634,"sortText":"40a27c5fTIMER4C","textEdit":{"newText":"TIMER4C","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER4D","insertText":"TIMER4D","insertTextFormat":2,"kind":1,"label":" TIMER4D","score":0.86528974771499634,"sortText":"40a27c5fTIMER4D","textEdit":{"newText":"TIMER4D","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5A","insertText":"TIMER5A","insertTextFormat":2,"kind":1,"label":" TIMER5A","score":0.86528974771499634,"sortText":"40a27c5fTIMER5A","textEdit":{"newText":"TIMER5A","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5B","insertText":"TIMER5B","insertTextFormat":2,"kind":1,"label":" TIMER5B","score":0.86528974771499634,"sortText":"40a27c5fTIMER5B","textEdit":{"newText":"TIMER5B","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"TIMER5C","insertText":"TIMER5C","insertTextFormat":2,"kind":1,"label":" TIMER5C","score":0.86528974771499634,"sortText":"40a27c5fTIMER5C","textEdit":{"newText":"TIMER5C","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"tanf","insertText":"tanf","insertTextFormat":2,"kind":1,"label":" tanf","score":0.68351686000823975,"sortText":"40d1050atanf","textEdit":{"newText":"tanf","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"tanhf","insertText":"tanhf","insertTextFormat":2,"kind":1,"label":" tanhf","score":0.68351686000823975,"sortText":"40d1050atanhf","textEdit":{"newText":"tanhf","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"truncf","insertText":"truncf","insertTextFormat":2,"kind":1,"label":" truncf","score":0.68351686000823975,"sortText":"40d1050atruncf","textEdit":{"newText":"truncf","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCCR0B","insertText":"TCCR0B","insertTextFormat":2,"kind":1,"label":" TCCR0B","score":0.57685983180999756,"sortText":"40ec52eaTCCR0B","textEdit":{"newText":"TCCR0B","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCCR1A","insertText":"TCCR1A","insertTextFormat":2,"kind":1,"label":" TCCR1A","score":0.57685983180999756,"sortText":"40ec52eaTCCR1A","textEdit":{"newText":"TCCR1A","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCN2UB","insertText":"TCN2UB","insertTextFormat":2,"kind":1,"label":" TCN2UB","score":0.57685983180999756,"sortText":"40ec52eaTCN2UB","textEdit":{"newText":"TCN2UB","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT0","insertText":"TCNT0","insertTextFormat":2,"kind":1,"label":" TCNT0","score":0.57685983180999756,"sortText":"40ec52eaTCNT0","textEdit":{"newText":"TCNT0","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT0_2","insertText":"TCNT0_2","insertTextFormat":2,"kind":1,"label":" TCNT0_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_2","textEdit":{"newText":"TCNT0_2","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT0_3","insertText":"TCNT0_3","insertTextFormat":2,"kind":1,"label":" TCNT0_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_3","textEdit":{"newText":"TCNT0_3","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT0_5","insertText":"TCNT0_5","insertTextFormat":2,"kind":1,"label":" TCNT0_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_5","textEdit":{"newText":"TCNT0_5","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT0_6","insertText":"TCNT0_6","insertTextFormat":2,"kind":1,"label":" TCNT0_6","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_6","textEdit":{"newText":"TCNT0_6","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT0_7","insertText":"TCNT0_7","insertTextFormat":2,"kind":1,"label":" TCNT0_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT0_7","textEdit":{"newText":"TCNT0_7","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1H","insertText":"TCNT1H","insertTextFormat":2,"kind":1,"label":" TCNT1H","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H","textEdit":{"newText":"TCNT1H","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1H0","insertText":"TCNT1H0","insertTextFormat":2,"kind":1,"label":" TCNT1H0","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H0","textEdit":{"newText":"TCNT1H0","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1H3","insertText":"TCNT1H3","insertTextFormat":2,"kind":1,"label":" TCNT1H3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H3","textEdit":{"newText":"TCNT1H3","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1H4","insertText":"TCNT1H4","insertTextFormat":2,"kind":1,"label":" TCNT1H4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1H4","textEdit":{"newText":"TCNT1H4","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1L","insertText":"TCNT1L","insertTextFormat":2,"kind":1,"label":" TCNT1L","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L","textEdit":{"newText":"TCNT1L","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1L1","insertText":"TCNT1L1","insertTextFormat":2,"kind":1,"label":" TCNT1L1","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L1","textEdit":{"newText":"TCNT1L1","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1L2","insertText":"TCNT1L2","insertTextFormat":2,"kind":1,"label":" TCNT1L2","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L2","textEdit":{"newText":"TCNT1L2","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1L3","insertText":"TCNT1L3","insertTextFormat":2,"kind":1,"label":" TCNT1L3","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L3","textEdit":{"newText":"TCNT1L3","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1L4","insertText":"TCNT1L4","insertTextFormat":2,"kind":1,"label":" TCNT1L4","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L4","textEdit":{"newText":"TCNT1L4","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT1L5","insertText":"TCNT1L5","insertTextFormat":2,"kind":1,"label":" TCNT1L5","score":0.57685983180999756,"sortText":"40ec52eaTCNT1L5","textEdit":{"newText":"TCNT1L5","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT2","insertText":"TCNT2","insertTextFormat":2,"kind":1,"label":" TCNT2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2","textEdit":{"newText":"TCNT2","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT2_0","insertText":"TCNT2_0","insertTextFormat":2,"kind":1,"label":" TCNT2_0","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_0","textEdit":{"newText":"TCNT2_0","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT2_2","insertText":"TCNT2_2","insertTextFormat":2,"kind":1,"label":" TCNT2_2","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_2","textEdit":{"newText":"TCNT2_2","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT2_3","insertText":"TCNT2_3","insertTextFormat":2,"kind":1,"label":" TCNT2_3","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_3","textEdit":{"newText":"TCNT2_3","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT2_4","insertText":"TCNT2_4","insertTextFormat":2,"kind":1,"label":" TCNT2_4","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_4","textEdit":{"newText":"TCNT2_4","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT2_5","insertText":"TCNT2_5","insertTextFormat":2,"kind":1,"label":" TCNT2_5","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_5","textEdit":{"newText":"TCNT2_5","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCNT2_7","insertText":"TCNT2_7","insertTextFormat":2,"kind":1,"label":" TCNT2_7","score":0.57685983180999756,"sortText":"40ec52eaTCNT2_7","textEdit":{"newText":"TCNT2_7","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCR2AUB","insertText":"TCR2AUB","insertTextFormat":2,"kind":1,"label":" TCR2AUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2AUB","textEdit":{"newText":"TCR2AUB","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TCR2BUB","insertText":"TCR2BUB","insertTextFormat":2,"kind":1,"label":" TCR2BUB","score":0.57685983180999756,"sortText":"40ec52eaTCR2BUB","textEdit":{"newText":"TCR2BUB","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIFR0","insertText":"TIFR0","insertTextFormat":2,"kind":1,"label":" TIFR0","score":0.57685983180999756,"sortText":"40ec52eaTIFR0","textEdit":{"newText":"TIFR0","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIFR1","insertText":"TIFR1","insertTextFormat":2,"kind":1,"label":" TIFR1","score":0.57685983180999756,"sortText":"40ec52eaTIFR1","textEdit":{"newText":"TIFR1","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIFR2","insertText":"TIFR2","insertTextFormat":2,"kind":1,"label":" TIFR2","score":0.57685983180999756,"sortText":"40ec52eaTIFR2","textEdit":{"newText":"TIFR2","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TIMSK0","insertText":"TIMSK0","insertTextFormat":2,"kind":1,"label":" TIMSK0","score":0.57685983180999756,"sortText":"40ec52eaTIMSK0","textEdit":{"newText":"TIMSK0","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TOV1","insertText":"TOV1","insertTextFormat":2,"kind":1,"label":" TOV1","score":0.57685983180999756,"sortText":"40ec52eaTOV1","textEdit":{"newText":"TOV1","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TSM","insertText":"TSM","insertTextFormat":2,"kind":1,"label":" TSM","score":0.57685983180999756,"sortText":"40ec52eaTSM","textEdit":{"newText":"TSM","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWA1","insertText":"TWA1","insertTextFormat":2,"kind":1,"label":" TWA1","score":0.57685983180999756,"sortText":"40ec52eaTWA1","textEdit":{"newText":"TWA1","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWA2","insertText":"TWA2","insertTextFormat":2,"kind":1,"label":" TWA2","score":0.57685983180999756,"sortText":"40ec52eaTWA2","textEdit":{"newText":"TWA2","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWA4","insertText":"TWA4","insertTextFormat":2,"kind":1,"label":" TWA4","score":0.57685983180999756,"sortText":"40ec52eaTWA4","textEdit":{"newText":"TWA4","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWA5","insertText":"TWA5","insertTextFormat":2,"kind":1,"label":" TWA5","score":0.57685983180999756,"sortText":"40ec52eaTWA5","textEdit":{"newText":"TWA5","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWAM0","insertText":"TWAM0","insertTextFormat":2,"kind":1,"label":" TWAM0","score":0.57685983180999756,"sortText":"40ec52eaTWAM0","textEdit":{"newText":"TWAM0","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWAM1","insertText":"TWAM1","insertTextFormat":2,"kind":1,"label":" TWAM1","score":0.57685983180999756,"sortText":"40ec52eaTWAM1","textEdit":{"newText":"TWAM1","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWAM4","insertText":"TWAM4","insertTextFormat":2,"kind":1,"label":" TWAM4","score":0.57685983180999756,"sortText":"40ec52eaTWAM4","textEdit":{"newText":"TWAM4","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWAM5","insertText":"TWAM5","insertTextFormat":2,"kind":1,"label":" TWAM5","score":0.57685983180999756,"sortText":"40ec52eaTWAM5","textEdit":{"newText":"TWAM5","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWAMR","insertText":"TWAMR","insertTextFormat":2,"kind":1,"label":" TWAMR","score":0.57685983180999756,"sortText":"40ec52eaTWAMR","textEdit":{"newText":"TWAMR","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWAR","insertText":"TWAR","insertTextFormat":2,"kind":1,"label":" TWAR","score":0.57685983180999756,"sortText":"40ec52eaTWAR","textEdit":{"newText":"TWAR","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWBR","insertText":"TWBR","insertTextFormat":2,"kind":1,"label":" TWBR","score":0.57685983180999756,"sortText":"40ec52eaTWBR","textEdit":{"newText":"TWBR","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWBR0","insertText":"TWBR0","insertTextFormat":2,"kind":1,"label":" TWBR0","score":0.57685983180999756,"sortText":"40ec52eaTWBR0","textEdit":{"newText":"TWBR0","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWBR4","insertText":"TWBR4","insertTextFormat":2,"kind":1,"label":" TWBR4","score":0.57685983180999756,"sortText":"40ec52eaTWBR4","textEdit":{"newText":"TWBR4","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}},{"filterText":"TWBR7","insertText":"TWBR7","insertTextFormat":2,"kind":1,"label":" TWBR7","score":0.57685983180999756,"sortText":"40ec52eaTWBR7","textEdit":{"newText":"TWBR7","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}}}}]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":16,"jsonrpc":"2.0"}Content-Length: 496

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":3},"end":{"line":47,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tỉmeSerial'"}]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 3073

{"id":16,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}},{"kind":13,"name":"Serial","range":{"end":{"character":8,"line":79},"start":{"character":0,"line":78}},"selectionRange":{"end":{"character":8,"line":79},"start":{"character":2,"line":79}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":9,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":8,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":17,"line":97},"start":{"character":5,"line":97}}}]}Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":47,"character":3},"end":{"line":47,"character":3}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":12},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":4}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":47,"character":5},"end":{"line":47,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 496

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tỉmeSerial'"}]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":6}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":13},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":11},"jsonrpc":"2.0"}Content-Length: 287

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":7},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 2790

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 't'","range":{"end":{"character":3,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":48},"start":{"character":8,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":78},"start":{"character":0,"line":78}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":9,"line":79},"start":{"character":8,"line":79}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":82},"start":{"character":0,"line":82}},"severity":1,"source":"clang"},{"code":"redefinition","message":"Redefinition of 'loop'\n\nSIM800L_ver1.ino.cpp:53:6: note: previous definition is here","range":{"end":{"character":9,"line":83},"start":{"character":5,"line":83}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:84:6: error: redefinition of 'loop'","range":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}},"severity":3},{"code":"redefinition","message":"Redefinition of 'sms'\n\nSIM800L_ver1.ino.cpp:58:6: note: previous definition is here","range":{"end":{"character":8,"line":88},"start":{"character":5,"line":88}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:89:6: error: redefinition of 'sms'","range":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}},"severity":3},{"code":"redefinition","message":"Redefinition of 'updateSerial'\n\nSIM800L_ver1.ino.cpp:67:6: note: previous definition is here","range":{"end":{"character":17,"line":97},"start":{"character":5,"line":97}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:98:6: error: redefinition of 'updateSerial'","range":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}},"severity":3},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":109},"start":{"character":0,"line":109}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":110},"start":{"character":0,"line":110}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":15}}Content-Length: 8494

{"id":19,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"char *","filterText":"begin","insertText":"begin()","insertTextFormat":2,"kind":2,"label":" begin()","score":9.6800003051757812,"sortText":"3ee51eb8begin","textEdit":{"newText":"begin()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"const char *","filterText":"c_str","insertText":"c_str()","insertTextFormat":2,"kind":2,"label":" c_str() const","score":9.6800003051757812,"sortText":"3ee51eb8c_str","textEdit":{"newText":"c_str()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"char","filterText":"charAt","insertText":"charAt(${1:unsigned int index})","insertTextFormat":2,"kind":2,"label":" charAt(unsigned int index) const","score":9.6800003051757812,"sortText":"3ee51eb8charAt","textEdit":{"newText":"charAt(${1:unsigned int index})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"int","filterText":"compareTo","insertText":"compareTo(${1:const String &s})","insertTextFormat":2,"kind":2,"label":" compareTo(const String &s) const","score":9.6800003051757812,"sortText":"3ee51eb8compareTo","textEdit":{"newText":"compareTo(${1:const String &s})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[11 overloads]","filterText":"concat","insertText":"concat($0)","insertTextFormat":2,"kind":2,"label":" concat(…)","score":9.6800003051757812,"sortText":"3ee51eb8concat","textEdit":{"newText":"concat($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"char *","filterText":"end","insertText":"end()","insertTextFormat":2,"kind":2,"label":" end()","score":9.6800003051757812,"sortText":"3ee51eb8end","textEdit":{"newText":"end()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"unsigned char","filterText":"endsWith","insertText":"endsWith(${1:const String &suffix})","insertTextFormat":2,"kind":2,"label":" endsWith(const String &suffix) const","score":9.6800003051757812,"sortText":"3ee51eb8endsWith","textEdit":{"newText":"endsWith(${1:const String &suffix})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"equals","insertText":"equals($0)","insertTextFormat":2,"kind":2,"label":" equals(…)","score":9.6800003051757812,"sortText":"3ee51eb8equals","textEdit":{"newText":"equals($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"unsigned char","filterText":"equalsIgnoreCase","insertText":"equalsIgnoreCase(${1:const String &s})","insertTextFormat":2,"kind":2,"label":" equalsIgnoreCase(const String &s) const","score":9.6800003051757812,"sortText":"3ee51eb8equalsIgnoreCase","textEdit":{"newText":"equalsIgnoreCase(${1:const String &s})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"void","filterText":"getBytes","insertText":"getBytes(${1:unsigned char *buf}, ${2:unsigned int bufsize})","insertTextFormat":2,"kind":2,"label":" getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index = 0) const","score":9.6800003051757812,"sortText":"3ee51eb8getBytes","textEdit":{"newText":"getBytes(${1:unsigned char *buf}, ${2:unsigned int bufsize})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[4 overloads]","filterText":"indexOf","insertText":"indexOf($0)","insertTextFormat":2,"kind":2,"label":" indexOf(…)","score":9.6800003051757812,"sortText":"3ee51eb8indexOf","textEdit":{"newText":"indexOf($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[4 overloads]","filterText":"lastIndexOf","insertText":"lastIndexOf($0)","insertTextFormat":2,"kind":2,"label":" lastIndexOf(…)","score":9.6800003051757812,"sortText":"3ee51eb8lastIndexOf","textEdit":{"newText":"lastIndexOf($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"unsigned int","filterText":"length","insertText":"length()","insertTextFormat":2,"kind":2,"label":" length() const","score":9.6800003051757812,"sortText":"3ee51eb8length","textEdit":{"newText":"length()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"remove","insertText":"remove($0)","insertTextFormat":2,"kind":2,"label":" remove(…)","score":9.6800003051757812,"sortText":"3ee51eb8remove","textEdit":{"newText":"remove($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"replace","insertText":"replace($0)","insertTextFormat":2,"kind":2,"label":" replace(…)","score":9.6800003051757812,"sortText":"3ee51eb8replace","textEdit":{"newText":"replace($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"unsigned char","filterText":"reserve","insertText":"reserve(${1:unsigned int size})","insertTextFormat":2,"kind":2,"label":" reserve(unsigned int size)","score":9.6800003051757812,"sortText":"3ee51eb8reserve","textEdit":{"newText":"reserve(${1:unsigned int size})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"void","filterText":"setCharAt","insertText":"setCharAt(${1:unsigned int index}, ${2:char c})","insertTextFormat":2,"kind":2,"label":" setCharAt(unsigned int index, char c)","score":9.6800003051757812,"sortText":"3ee51eb8setCharAt","textEdit":{"newText":"setCharAt(${1:unsigned int index}, ${2:char c})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"startsWith","insertText":"startsWith($0)","insertTextFormat":2,"kind":2,"label":" startsWith(…)","score":9.6800003051757812,"sortText":"3ee51eb8startsWith","textEdit":{"newText":"startsWith($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"substring","insertText":"substring($0)","insertTextFormat":2,"kind":2,"label":" substring(…)","score":9.6800003051757812,"sortText":"3ee51eb8substring","textEdit":{"newText":"substring($0)","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"void","filterText":"toCharArray","insertText":"toCharArray(${1:char *buf}, ${2:unsigned int bufsize})","insertTextFormat":2,"kind":2,"label":" toCharArray(char *buf, unsigned int bufsize, unsigned int index = 0) const","score":9.6800003051757812,"sortText":"3ee51eb8toCharArray","textEdit":{"newText":"toCharArray(${1:char *buf}, ${2:unsigned int bufsize})","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"double","filterText":"toDouble","insertText":"toDouble()","insertTextFormat":2,"kind":2,"label":" toDouble() const","score":9.6800003051757812,"sortText":"3ee51eb8toDouble","textEdit":{"newText":"toDouble()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"float","filterText":"toFloat","insertText":"toFloat()","insertTextFormat":2,"kind":2,"label":" toFloat() const","score":9.6800003051757812,"sortText":"3ee51eb8toFloat","textEdit":{"newText":"toFloat()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"long","filterText":"toInt","insertText":"toInt()","insertTextFormat":2,"kind":2,"label":" toInt() const","score":9.6800003051757812,"sortText":"3ee51eb8toInt","textEdit":{"newText":"toInt()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"void","filterText":"toLowerCase","insertText":"toLowerCase()","insertTextFormat":2,"kind":2,"label":" toLowerCase()","score":9.6800003051757812,"sortText":"3ee51eb8toLowerCase","textEdit":{"newText":"toLowerCase()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"void","filterText":"toUpperCase","insertText":"toUpperCase()","insertTextFormat":2,"kind":2,"label":" toUpperCase()","score":9.6800003051757812,"sortText":"3ee51eb8toUpperCase","textEdit":{"newText":"toUpperCase()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}},{"detail":"void","filterText":"trim","insertText":"trim()","insertTextFormat":2,"kind":2,"label":" trim()","score":9.6800003051757812,"sortText":"3ee51eb8trim","textEdit":{"newText":"trim()","range":{"end":{"character":7,"line":47},"start":{"character":7,"line":47}}}}]}}
>>>
Content-Length: 496

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tỉmeSerial'"}]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 2616

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":78},"start":{"character":0,"line":78}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":9,"line":79},"start":{"character":8,"line":79}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":82},"start":{"character":0,"line":82}},"severity":1,"source":"clang"},{"code":"redefinition","message":"Redefinition of 'loop'\n\nSIM800L_ver1.ino.cpp:53:6: note: previous definition is here","range":{"end":{"character":9,"line":83},"start":{"character":5,"line":83}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:84:6: error: redefinition of 'loop'","range":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}},"severity":3},{"code":"redefinition","message":"Redefinition of 'sms'\n\nSIM800L_ver1.ino.cpp:58:6: note: previous definition is here","range":{"end":{"character":8,"line":88},"start":{"character":5,"line":88}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:89:6: error: redefinition of 'sms'","range":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}},"severity":3},{"code":"redefinition","message":"Redefinition of 'updateSerial'\n\nSIM800L_ver1.ino.cpp:67:6: note: previous definition is here","range":{"end":{"character":17,"line":97},"start":{"character":5,"line":97}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:98:6: error: redefinition of 'updateSerial'","range":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}},"severity":3},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":109},"start":{"character":0,"line":109}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":110},"start":{"character":0,"line":110}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":18}}Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}Content-Length: 2592

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'Serial' in 'String'","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":78},"start":{"character":0,"line":78}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":9,"line":79},"start":{"character":8,"line":79}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":82},"start":{"character":0,"line":82}},"severity":1,"source":"clang"},{"code":"redefinition","message":"Redefinition of 'loop'\n\nSIM800L_ver1.ino.cpp:53:6: note: previous definition is here","range":{"end":{"character":9,"line":83},"start":{"character":5,"line":83}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:84:6: error: redefinition of 'loop'","range":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}},"severity":3},{"code":"redefinition","message":"Redefinition of 'sms'\n\nSIM800L_ver1.ino.cpp:58:6: note: previous definition is here","range":{"end":{"character":8,"line":88},"start":{"character":5,"line":88}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:89:6: error: redefinition of 'sms'","range":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}},"severity":3},{"code":"redefinition","message":"Redefinition of 'updateSerial'\n\nSIM800L_ver1.ino.cpp:67:6: note: previous definition is here","range":{"end":{"character":17,"line":97},"start":{"character":5,"line":97}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:98:6: error: redefinition of 'updateSerial'","range":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}},"severity":3},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":109},"start":{"character":0,"line":109}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":110},"start":{"character":0,"line":110}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":19}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":7}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":15},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":8}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 496

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":9},"end":{"line":47,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tỉmeSerial'"}]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}Content-Length: 2788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 're' in 'String'","range":{"end":{"character":9,"line":47},"start":{"character":7,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":78},"start":{"character":0,"line":78}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":9,"line":79},"start":{"character":8,"line":79}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":82},"start":{"character":0,"line":82}},"severity":1,"source":"clang"},{"code":"redefinition","message":"Redefinition of 'loop'\n\nSIM800L_ver1.ino.cpp:53:6: note: previous definition is here","range":{"end":{"character":9,"line":83},"start":{"character":5,"line":83}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:84:6: error: redefinition of 'loop'","range":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}},"severity":3},{"code":"redefinition","message":"Redefinition of 'sms'\n\nSIM800L_ver1.ino.cpp:58:6: note: previous definition is here","range":{"end":{"character":8,"line":88},"start":{"character":5,"line":88}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:89:6: error: redefinition of 'sms'","range":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}},"severity":3},{"code":"redefinition","message":"Redefinition of 'updateSerial'\n\nSIM800L_ver1.ino.cpp:67:6: note: previous definition is here","range":{"end":{"character":17,"line":97},"start":{"character":5,"line":97}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:98:6: error: redefinition of 'updateSerial'","range":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}},"severity":3},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":109},"start":{"character":0,"line":109}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":110},"start":{"character":0,"line":110}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":21}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":47,"character":9},"end":{"line":47,"character":9}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":16},"jsonrpc":"2.0"}Content-Length: 498

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":10},"end":{"line":47,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tỉmeSerial'"}]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}Content-Length: 2790

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'rem' in 'String'","range":{"end":{"character":10,"line":47},"start":{"character":7,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":78},"start":{"character":0,"line":78}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":9,"line":79},"start":{"character":8,"line":79}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":82},"start":{"character":0,"line":82}},"severity":1,"source":"clang"},{"code":"redefinition","message":"Redefinition of 'loop'\n\nSIM800L_ver1.ino.cpp:53:6: note: previous definition is here","range":{"end":{"character":9,"line":83},"start":{"character":5,"line":83}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:84:6: error: redefinition of 'loop'","range":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}},"severity":3},{"code":"redefinition","message":"Redefinition of 'sms'\n\nSIM800L_ver1.ino.cpp:58:6: note: previous definition is here","range":{"end":{"character":8,"line":88},"start":{"character":5,"line":88}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:89:6: error: redefinition of 'sms'","range":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}},"severity":3},{"code":"redefinition","message":"Redefinition of 'updateSerial'\n\nSIM800L_ver1.ino.cpp:67:6: note: previous definition is here","range":{"end":{"character":17,"line":97},"start":{"character":5,"line":97}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:98:6: error: redefinition of 'updateSerial'","range":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}},"severity":3},{"code":"unknown_typename","message":"Unknown type name 'me'","range":{"end":{"character":2,"line":109},"start":{"character":0,"line":109}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":110},"start":{"character":0,"line":110}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":22}}
>>>
Content-Length: 1788

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":23},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time=\"\";\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  tachChuoi();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  time.rem\n"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":10}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":17},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":23,"jsonrpc":"2.0"}Content-Length: 498

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":11},"end":{"line":41,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tỉmeSerial'"}]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 1174

{"id":23,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}Content-Length: 1737

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'remo' in 'String'","range":{"end":{"character":11,"line":41},"start":{"character":7,"line":41}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:17: note: to match this '{'","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:43:1: error: expected '}'","range":{"end":{"character":17,"line":34},"start":{"character":16,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":24}}Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":41,"character":11},"end":{"line":41,"character":11}},"text":"v"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":18},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":41,"character":12},"end":{"line":41,"character":12}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":13},"end":{"line":41,"character":13}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1174

{"id":25,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":41},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}Content-Length: 2077

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called\n\nC:\\Users\\Admin\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:184:7:\nnote: possible target for call\n\nC:\\Users\\Admin\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:185:7:\nnote: possible target for call","range":{"end":{"character":13,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:17: note: to match this '{'","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:43:1: error: expected '}'","range":{"end":{"character":17,"line":34},"start":{"character":16,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":26}}Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":13},"end":{"line":41,"character":13}},"context":{"diagnostics":[]}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":28,"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":19},"jsonrpc":"2.0"}
<<<
Content-Length: 1174

{"id":28,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":13,"line":41},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":13},"end":{"line":41,"character":13}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":20},"jsonrpc":"2.0"}Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":41,"character":7},"end":{"line":41,"character":13}},"rangeLength":6,"text":"remove()"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":21},"jsonrpc":"2.0"}Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}Content-Length: 2206

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'remove'\n\nC:\\Users\\Admin\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:184:7:\nnote: candidate function not viable: requires single argument 'index', but no arguments were provided\n\nC:\\Users\\Admin\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:185:7:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided","range":{"end":{"character":13,"line":41},"start":{"character":2,"line":41}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:17: note: to match this '{'","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:43:1: error: expected '}'","range":{"end":{"character":17,"line":34},"start":{"character":16,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":27}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":22},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 1174

{"id":32,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":15,"line":41},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":34,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":27},"jsonrpc":"2.0"}Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"context":{"diagnostics":[]}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":35,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":6}},"context":{"diagnostics":[]}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":7}},"context":{"diagnostics":[]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":8}},"context":{"diagnostics":[]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":9}},"context":{"diagnostics":[]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}},"context":{"diagnostics":[]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":11}},"context":{"diagnostics":[]}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":41,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":12}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":13}},"context":{"diagnostics":[]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":43,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":14}},"context":{"diagnostics":[]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":15}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":16}},"context":{"diagnostics":[]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":17}},"context":{"diagnostics":[]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":18}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":19}},"context":{"diagnostics":[]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":20}},"context":{"diagnostics":[]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":21}},"context":{"diagnostics":[]}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":51,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":22}},"context":{"diagnostics":[]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":23}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":24}},"context":{"diagnostics":[]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":25}},"context":{"diagnostics":[]}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":55,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":42,"character":21},"end":{"line":0,"character":5}},"context":{"diagnostics":[]}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":56,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":26}},"context":{"diagnostics":[]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":27}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":28}},"context":{"diagnostics":[]}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":59,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":29}},"context":{"diagnostics":[]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":42,"character":14}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":61,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":14}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":62,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":63,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":41,"character":15},"end":{"line":41,"character":15}},"text":"4"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:17: note: to match this '{'","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:43:1: error: expected '}'","range":{"end":{"character":17,"line":34},"start":{"character":16,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":28}}Content-Length: 1562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:17: note: to match this '{'","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:43:1: error: expected '}'","range":{"end":{"character":17,"line":34},"start":{"character":16,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":29}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}},"context":{"diagnostics":[]}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":64,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 1174

{"id":65,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":17,"line":41},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}},"context":{"diagnostics":[]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1362

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":24},"start":{"character":2,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:35:17: note: to match this '{'","range":{"end":{"character":0,"line":42},"start":{"character":0,"line":42}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:43:1: error: expected '}'","range":{"end":{"character":17,"line":34},"start":{"character":16,"line":34}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":30}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":18},"end":{"line":41,"character":18}},"context":{"diagnostics":[]}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":67,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 1174

{"id":68,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":18,"line":41},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":14,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":14}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":69,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":38,"character":8}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":70,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":31,"character":6}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":71,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":40,"character":3},"end":{"line":41,"character":15}},"context":{"diagnostics":[]}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":72,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":15}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":73,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":15}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":74,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":71},"jsonrpc":"2.0"}Content-Length: 437

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}},"text":"\r\n  time.remove(2"},{"range":{"start":{"line":40,"character":3},"end":{"line":41,"character":15}},"rangeLength":17,"text":""}]},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server905088963/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":15}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 102

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":75,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":1456,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server070499255\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":44,"character":4},"end":{"line":45,"character":15}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":16}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":3,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":18,"line":45},"start":{"character":11,"line":45}}}}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":46,"character":19}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":4,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":46,"character":19}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 434

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":44,"character":4},"end":{"line":45,"character":15}},"rangeLength":17,"text":""},{"range":{"start":{"line":44,"character":3},"end":{"line":44,"character":3}},"text":"\r\n  time.remove(2"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server070499255/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":46,"character":18}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 101

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":6,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":1456,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server925943751\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":45,"character":15},"end":{"line":45,"character":15}},"text":"8"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":16},"end":{"line":45,"character":16}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'prin8tln' in 'SoftwareSerial'","range":{"end":{"character":19,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":2}}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":17}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":3,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":16}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t print(const char[])\n```"},"range":{"end":{"character":16,"line":47},"start":{"character":11,"line":47}}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 2856

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time=\"\";\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 40 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 45 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 54 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  tachChuoi();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  time.remove(28);\n  Serial.print(time);\n  //+CCLK: \"21/08/05,19:28:10+28\"\n\n}\nvoid loop()\n{\n  \n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":11},"end":{"line":47,"character":19}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'prin8tln' in 'SoftwareSerial'"}]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 2313

{"id":6,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":3}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":16}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":14}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":8,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":12}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 319

{"id":9,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `remove`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned int index`\n\n---\n```cpp\n// In String\npublic: void remove(unsigned int index)\n```"},"range":{"end":{"character":13,"line":47},"start":{"character":7,"line":47}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":14}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":10,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":13}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 320

{"id":11,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `remove`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned int index`\n\n---\n```cpp\n// In String\npublic: void remove(unsigned int index)\n```"},"range":{"end":{"character":13,"line":47},"start":{"character":7,"line":47}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":13}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":12,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":47},"start":{"character":7,"line":47}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":13}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":7}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 320

{"id":14,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `remove`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned int index`\n\n---\n```cpp\n// In String\npublic: void remove(unsigned int index)\n```"},"range":{"end":{"character":13,"line":47},"start":{"character":7,"line":47}}}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":13}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":8},"context":{"triggerKind":1}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 952

{"id":15,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"[2 overloads]","filterText":"remove","insertText":"remove","insertTextFormat":2,"kind":2,"label":" remove(…)","score":9.6800003051757812,"sortText":"3ee51eb8remove","textEdit":{"newText":"remove","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"replace","insertText":"replace","insertTextFormat":2,"kind":2,"label":" replace(…)","score":9.6800003051757812,"sortText":"3ee51eb8replace","textEdit":{"newText":"replace","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}}}},{"detail":"unsigned char","filterText":"reserve","insertText":"reserve","insertTextFormat":2,"kind":2,"label":" reserve(unsigned int size)","score":9.6800003051757812,"sortText":"3ee51eb8reserve","textEdit":{"newText":"reserve","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}}}}]}}Content-Length: 381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'r' in 'String'","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":4}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 387

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":5}}
>>>
Content-Length: 480

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":8}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":7}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":8},"context":{"triggerKind":1}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 1276

{"id":17,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"setCharAt","insertText":"setCharAt","insertTextFormat":2,"kind":2,"label":" setCharAt(unsigned int index, char c)","score":9.6800003051757812,"sortText":"3ee51eb8setCharAt","textEdit":{"newText":"setCharAt","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"startsWith","insertText":"startsWith","insertTextFormat":2,"kind":2,"label":" startsWith(…)","score":9.6800003051757812,"sortText":"3ee51eb8startsWith","textEdit":{"newText":"startsWith","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}}}},{"detail":"[2 overloads]","filterText":"substring","insertText":"substring","insertTextFormat":2,"kind":2,"label":" substring(…)","score":9.6800003051757812,"sortText":"3ee51eb8substring","textEdit":{"newText":"substring","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}}}},{"detail":"const char *","filterText":"c_str","insertText":"c_str","insertTextFormat":2,"kind":2,"label":" c_str() const","score":1.1000000238418579,"sortText":"80000000c_str","textEdit":{"newText":"c_str","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}}}}]}}Content-Length: 381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 's' in 'String'","range":{"end":{"character":8,"line":47},"start":{"character":7,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":6}}
>>>
Content-Length: 2851

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":7},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time=\"\";\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid tachChuoi();\n#line 40 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 45 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 54 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  tachChuoi();\n}\nvoid tachChuoi(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  time.s(28);\n  Serial.print(time);\n  //+CCLK: \"21/08/05,19:28:10+28\"\n\n}\nvoid loop()\n{\n  \n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":8}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":47,"character":9},"end":{"line":47,"character":9}},"text":"b"}]},"jsonrpc":"2.0"}Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":10},"end":{"line":47,"character":10}},"context":{"diagnostics":[]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'sub' in 'String'","range":{"end":{"character":10,"line":47},"start":{"character":7,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":9}}Content-Length: 2314

{"id":19,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":10}},"rangeLength":3,"text":"substring"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":16},"jsonrpc":"2.0"}Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":16}},"context":{"diagnostics":[]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":10}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":25}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":21,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":16}},"context":{"diagnostics":[]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":17},"jsonrpc":"2.0"}Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":16}},"context":{"diagnostics":[]}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":23,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":17}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":24,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":17}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":25,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":47},"start":{"character":7,"line":47}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":17}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":17}},"text":","}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 240

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":18}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":18,"line":47},"start":{"character":17,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":11}}Content-Length: 312

{"id":27,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"substring(unsigned int beginIndex) -> String","parameters":[{"label":[10,33]}]},{"label":"substring(unsigned int beginIndex, unsigned int endIndex) -> String","parameters":[{"label":[10,33]},{"label":[35,56]}]}]}}
>>>
Content-Length: 476

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":18},"end":{"line":47,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":18}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 476

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":18},"end":{"line":47,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":18}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 476

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":18}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":17}},"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":12}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":47,"character":18},"end":{"line":47,"character":18}},"text":"9"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":13}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":19},"end":{"line":47,"character":19}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":5}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":32,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":37,"character":6}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":33,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":10}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 402

{"id":34,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `substring`  \n\n---\n→ `class String`  \nParameters:  \n- `unsigned int beginIndex`\n- `unsigned int endIndex`\n\n---\n```cpp\n// In String\npublic: String substring(unsigned int beginIndex, unsigned int endIndex) const\n```"},"range":{"end":{"character":16,"line":47},"start":{"character":7,"line":47}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":18}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"id":35,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `time`  \n\n---\nType: `class String`  \nPassed by const reference  \n\n---\n```cpp\nString time = \"\"\n```"},"range":{"end":{"character":19,"line":48},"start":{"character":15,"line":48}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":19}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":36,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `const String &`\n\n---\n```cpp\n// In Print\npublic: size_t print(const String &)\n```"},"range":{"end":{"character":19,"line":48},"start":{"character":15,"line":48}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":19}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":37,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":48},"start":{"character":9,"line":48}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":19},"end":{"line":48,"character":19}},"context":{"diagnostics":[]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":23}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":39,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":48,"character":19},"end":{"line":48,"character":19}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":20},"context":{"triggerKind":1}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":40,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 720

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":14}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":26}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":41,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 2314

{"id":42,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}}]}
>>>
Content-Length: 594

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":20},"end":{"line":48,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":48,"character":15},"end":{"line":48,"character":20}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here"}]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 640

{"id":43,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp":[{"newText":"time","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'time1' to 'time'"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":26}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":44,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":24}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":45,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":47,"character":2}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 385

{"id":46,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":3,"range":{"end":{"character":8,"line":45},"start":{"character":4,"line":45}}},{"kind":1,"range":{"end":{"character":6,"line":47},"start":{"character":2,"line":47}}},{"kind":1,"range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":2}},"context":{"diagnostics":[]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":2}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1226

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'ttime'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":7,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:48:3: error: use of undeclared identifier 'ttime'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":15}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":47,"character":3},"end":{"line":47,"character":3}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1228

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'titime'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":8,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:48:3: error: use of undeclared identifier 'titime'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":16}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":4}},"text":"m"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 907

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'timtime'","range":{"end":{"character":9,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":17}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":47,"character":5},"end":{"line":47,"character":5}},"text":"w"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 909

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'timwtime'","range":{"end":{"character":10,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":18}}
>>>
Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'timwtime'"}]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 2314

{"id":49,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":47,"character":5},"end":{"line":47,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":47,"character":5},"end":{"line":47,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 909

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'timetime'","range":{"end":{"character":10,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":20}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":6}},"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 910

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'time1time'","range":{"end":{"character":11,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":21}}
>>>
Content-Length: 493

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'time1time'"}]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 2314

{"id":51,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":7}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1427

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":7,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:48:3: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":12,"line":47},"start":{"character":8,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":22}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":8}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1226

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":7,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:48:3: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":23}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":9},"end":{"line":47,"character":9}},"context":{"diagnostics":[]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 2314

{"id":53,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":47,"character":9},"end":{"line":47,"character":9}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1226

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":7,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:48:3: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":48},"start":{"character":15,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":24}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":47,"character":10},"end":{"line":47,"character":10}},"context":{"diagnostics":[]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 2314

{"id":55,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":17,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":51},"start":{"character":0,"line":40}},"selectionRange":{"end":{"character":14,"line":40},"start":{"character":5,"line":40}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":52}},"selectionRange":{"end":{"character":9,"line":52},"start":{"character":5,"line":52}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":8,"line":57},"start":{"character":5,"line":57}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":77},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":17,"line":66},"start":{"character":5,"line":66}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":56,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 741

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:48:3: error: use of undeclared identifier 'time1'; did you mean 'time'?"},{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:16: error: use of undeclared identifier 'time1'; did you mean 'time'?"}]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":0}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 121

{"id":58,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":6,"line":6},"start":{"character":0,"line":6}}}]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"context":{"diagnostics":[]}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":59,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":5,"character":80}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":5,"character":80},"end":{"line":5,"character":80}},"context":{"diagnostics":[]}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":61,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":5,"character":80},"end":{"line":5,"character":80}},"text":"\r\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1226

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:8:8: note: 'time' declared here","range":{"end":{"character":7,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:8:8: note: 'time' declared here","range":{"end":{"character":20,"line":49},"start":{"character":15,"line":49}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:50:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":25}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"text":"String time=\"\";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1642

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"redefinition","message":"Redefinition of 'time'\n\nSIM800L_ver1.ino.cpp:7:8: note: previous definition is here","range":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:8:8: error: redefinition of 'time'","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":7,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'time1'; did you mean 'time'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'time' declared here","range":{"end":{"character":20,"line":49},"start":{"character":15,"line":49}},"severity":1,"source":"clang"},{"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:50:16: error: use of undeclared identifier 'time1'; did you mean 'time'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":26}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 2499

{"id":63,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":52},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":57},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":9,"line":53},"start":{"character":5,"line":53}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":66},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":8,"line":58},"start":{"character":5,"line":58}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":67}},"selectionRange":{"end":{"character":17,"line":67},"start":{"character":5,"line":67}}}]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":11}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 122

{"id":64,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}}]}
>>>
Content-Length: 931

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"Previous definition is here\n\nSIM800L_ver1.ino.cpp:8:8: error: redefinition of 'time'"},{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'time1'; did you mean 'time'?"},{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'time' declared here\n\nSIM800L_ver1.ino.cpp:50:16: error: use of undeclared identifier 'time1'; did you mean 'time'?"}]}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":65,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":18,"character":14}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":66,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":12},"context":{"triggerKind":1}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":67,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":27}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":12}},"context":{"diagnostics":[]}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":68,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":30,"character":19}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":69,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":5,"character":19}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 320

{"id":70,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mySerial`  \n\n---\nType: `class SoftwareSerial`  \nSIM800L Tx & Rx is connected to Arduino #3 & #2  \n\n---\n```cpp\nSoftwareSerial mySerial(3, 2)\n```"},"range":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":63,"character":19}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":71,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":65,"character":19}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"id":72,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `size_t`  \nParameters:  \n- `uint8_t byte`\n\n---\n```cpp\n// In SoftwareSerial\npublic: virtual size_t write(uint8_t byte)\n```"},"range":{"end":{"character":20,"line":65},"start":{"character":19,"line":65}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":29}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":73,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":15}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":74,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":9}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":75,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `const String &`\n\n---\n```cpp\n// In Print\npublic: size_t print(const String &)\n```"},"range":{"end":{"character":14,"line":49},"start":{"character":9,"line":49}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":8}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"id":76,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `const String &`\n\n---\n```cpp\n// In Print\npublic: size_t print(const String &)\n```"},"range":{"end":{"character":8,"line":49},"start":{"character":2,"line":49}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":6}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":77,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `time1`  \n\n---\nType: `class String`  \n\n---\n```cpp\nString time1 = \"\"\n```"},"range":{"end":{"character":7,"line":48},"start":{"character":2,"line":48}}}}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":7}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":78,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":3,"range":{"end":{"character":7,"line":48},"start":{"character":2,"line":48}}},{"kind":1,"range":{"end":{"character":20,"line":49},"start":{"character":15,"line":49}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":7}},"context":{"diagnostics":[]}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":79,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":7}},"context":{"diagnostics":[]}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":80,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":2}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":81,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `time1`  \n\n---\nType: `class String`  \n\n---\n```cpp\nString time1 = \"\"\n```"},"range":{"end":{"character":7,"line":48},"start":{"character":2,"line":48}}}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":7}},"rangeLength":5,"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":3},"context":{"triggerKind":1}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 24760

{"id":82,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"kind":15,"label":" decltype(expression)","score":8,"sortText":"3f000000decltype","textEdit":{"newText":"decltype(${0:expression})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"void","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete [] expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete [] ${0:expression}","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"void","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete ${0:expression}","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"do","insertText":"do {\n${1:statements}\n}while (${0:expression})","insertTextFormat":2,"kind":15,"label":" do {statements}while (expression)","score":8,"sortText":"3f000000do","textEdit":{"newText":"do {\n${1:statements}\n}while (${0:expression})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"double","insertText":"double","insertTextFormat":2,"kind":14,"label":" double","score":8,"sortText":"3f000000double","textEdit":{"newText":"double","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"dynamic_cast","insertText":"dynamic_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" dynamic_cast<type>(expression)","score":8,"sortText":"3f000000dynamic_cast","textEdit":{"newText":"dynamic_cast<${1:type}>(${0:expression})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"kind":3,"label":" delay(unsigned long ms)","score":6.6010479927062988,"sortText":"3f2cc437delay","textEdit":{"newText":"delay(${1:unsigned long ms})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_timer_PGM","score":1.9036375284194946,"sortText":"400c559bdigital_pin_to_timer_PGM","textEdit":{"newText":"digital_pin_to_timer_PGM","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"filterText":"div","insertText":"div(${1:int __num}, ${2:int __denom})","insertTextFormat":2,"kind":3,"label":" div(int __num, int __denom)","score":1.5037370920181274,"sortText":"403f858bdiv","textEdit":{"newText":"div(${1:int __num}, ${2:int __denom})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"filterText":"div_t","insertText":"div_t","insertTextFormat":2,"kind":8,"label":" div_t","score":1.5037370920181274,"sortText":"403f858bdiv_t","textEdit":{"newText":"div_t","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostre","insertText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","insertTextFormat":2,"kind":3,"label":" dtostre(double __val, char *__s, unsigned char __prec, unsigned char __flags)","score":1.5037370920181274,"sortText":"403f858bdtostre","textEdit":{"newText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostrf","insertText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","insertTextFormat":2,"kind":3,"label":" dtostrf(double __val, signed char __width, unsigned char __prec, char *__s)","score":1.5037370920181274,"sortText":"403f858bdtostrf","textEdit":{"newText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"kind":3,"label":" digitalWrite(uint8_t pin, uint8_t val)","score":1.3503646850585938,"sortText":"40532740digitalWrite","textEdit":{"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_bit_mask_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_bit_mask_PGM","textEdit":{"newText":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_port_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_port_PGM","textEdit":{"newText":"digital_pin_to_port_PGM","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"kind":3,"label":" delayMicroseconds(unsigned int us)","score":1.2690916061401367,"sortText":"405d8e68delayMicroseconds","textEdit":{"newText":"delayMicroseconds(${1:unsigned int us})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"kind":3,"label":" detachInterrupt(uint8_t interruptNum)","score":1.2690916061401367,"sortText":"405d8e68detachInterrupt","textEdit":{"newText":"detachInterrupt(${1:uint8_t interruptNum})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":1.2690916061401367,"sortText":"405d8e68digitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToTimer(P)","score":0.86528974771499634,"sortText":"40a27c5fdigitalPinToTimer","textEdit":{"newText":"digitalPinToTimer(${1:P})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_ALWAYS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_ALWAYS_SIGN","textEdit":{"newText":"DTOSTR_ALWAYS_SIGN","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_PLUS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_PLUS_SIGN","textEdit":{"newText":"DTOSTR_PLUS_SIGN","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":2,"kind":1,"label":" DTOSTR_UPPERCASE","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_UPPERCASE","textEdit":{"newText":"DTOSTR_UPPERCASE","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD0","insertText":"DD0","insertTextFormat":2,"kind":1,"label":" DD0","score":0.57685983180999756,"sortText":"40ec52eaDD0","textEdit":{"newText":"DD0","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD1","insertText":"DD1","insertTextFormat":2,"kind":1,"label":" DD1","score":0.57685983180999756,"sortText":"40ec52eaDD1","textEdit":{"newText":"DD1","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD2","insertText":"DD2","insertTextFormat":2,"kind":1,"label":" DD2","score":0.57685983180999756,"sortText":"40ec52eaDD2","textEdit":{"newText":"DD2","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD3","insertText":"DD3","insertTextFormat":2,"kind":1,"label":" DD3","score":0.57685983180999756,"sortText":"40ec52eaDD3","textEdit":{"newText":"DD3","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD4","insertText":"DD4","insertTextFormat":2,"kind":1,"label":" DD4","score":0.57685983180999756,"sortText":"40ec52eaDD4","textEdit":{"newText":"DD4","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD5","insertText":"DD5","insertTextFormat":2,"kind":1,"label":" DD5","score":0.57685983180999756,"sortText":"40ec52eaDD5","textEdit":{"newText":"DD5","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD6","insertText":"DD6","insertTextFormat":2,"kind":1,"label":" DD6","score":0.57685983180999756,"sortText":"40ec52eaDD6","textEdit":{"newText":"DD6","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DD7","insertText":"DD7","insertTextFormat":2,"kind":1,"label":" DD7","score":0.57685983180999756,"sortText":"40ec52eaDD7","textEdit":{"newText":"DD7","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB0","insertText":"DDB0","insertTextFormat":2,"kind":1,"label":" DDB0","score":0.57685983180999756,"sortText":"40ec52eaDDB0","textEdit":{"newText":"DDB0","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB1","insertText":"DDB1","insertTextFormat":2,"kind":1,"label":" DDB1","score":0.57685983180999756,"sortText":"40ec52eaDDB1","textEdit":{"newText":"DDB1","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB2","insertText":"DDB2","insertTextFormat":2,"kind":1,"label":" DDB2","score":0.57685983180999756,"sortText":"40ec52eaDDB2","textEdit":{"newText":"DDB2","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB3","insertText":"DDB3","insertTextFormat":2,"kind":1,"label":" DDB3","score":0.57685983180999756,"sortText":"40ec52eaDDB3","textEdit":{"newText":"DDB3","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB4","insertText":"DDB4","insertTextFormat":2,"kind":1,"label":" DDB4","score":0.57685983180999756,"sortText":"40ec52eaDDB4","textEdit":{"newText":"DDB4","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB5","insertText":"DDB5","insertTextFormat":2,"kind":1,"label":" DDB5","score":0.57685983180999756,"sortText":"40ec52eaDDB5","textEdit":{"newText":"DDB5","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB6","insertText":"DDB6","insertTextFormat":2,"kind":1,"label":" DDB6","score":0.57685983180999756,"sortText":"40ec52eaDDB6","textEdit":{"newText":"DDB6","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDB7","insertText":"DDB7","insertTextFormat":2,"kind":1,"label":" DDB7","score":0.57685983180999756,"sortText":"40ec52eaDDB7","textEdit":{"newText":"DDB7","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDC0","insertText":"DDC0","insertTextFormat":2,"kind":1,"label":" DDC0","score":0.57685983180999756,"sortText":"40ec52eaDDC0","textEdit":{"newText":"DDC0","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDC1","insertText":"DDC1","insertTextFormat":2,"kind":1,"label":" DDC1","score":0.57685983180999756,"sortText":"40ec52eaDDC1","textEdit":{"newText":"DDC1","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDC2","insertText":"DDC2","insertTextFormat":2,"kind":1,"label":" DDC2","score":0.57685983180999756,"sortText":"40ec52eaDDC2","textEdit":{"newText":"DDC2","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDC3","insertText":"DDC3","insertTextFormat":2,"kind":1,"label":" DDC3","score":0.57685983180999756,"sortText":"40ec52eaDDC3","textEdit":{"newText":"DDC3","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDC4","insertText":"DDC4","insertTextFormat":2,"kind":1,"label":" DDC4","score":0.57685983180999756,"sortText":"40ec52eaDDC4","textEdit":{"newText":"DDC4","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDC5","insertText":"DDC5","insertTextFormat":2,"kind":1,"label":" DDC5","score":0.57685983180999756,"sortText":"40ec52eaDDC5","textEdit":{"newText":"DDC5","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDC6","insertText":"DDC6","insertTextFormat":2,"kind":1,"label":" DDC6","score":0.57685983180999756,"sortText":"40ec52eaDDC6","textEdit":{"newText":"DDC6","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD0","insertText":"DDD0","insertTextFormat":2,"kind":1,"label":" DDD0","score":0.57685983180999756,"sortText":"40ec52eaDDD0","textEdit":{"newText":"DDD0","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD1","insertText":"DDD1","insertTextFormat":2,"kind":1,"label":" DDD1","score":0.57685983180999756,"sortText":"40ec52eaDDD1","textEdit":{"newText":"DDD1","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD2","insertText":"DDD2","insertTextFormat":2,"kind":1,"label":" DDD2","score":0.57685983180999756,"sortText":"40ec52eaDDD2","textEdit":{"newText":"DDD2","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD3","insertText":"DDD3","insertTextFormat":2,"kind":1,"label":" DDD3","score":0.57685983180999756,"sortText":"40ec52eaDDD3","textEdit":{"newText":"DDD3","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD4","insertText":"DDD4","insertTextFormat":2,"kind":1,"label":" DDD4","score":0.57685983180999756,"sortText":"40ec52eaDDD4","textEdit":{"newText":"DDD4","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD5","insertText":"DDD5","insertTextFormat":2,"kind":1,"label":" DDD5","score":0.57685983180999756,"sortText":"40ec52eaDDD5","textEdit":{"newText":"DDD5","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD6","insertText":"DDD6","insertTextFormat":2,"kind":1,"label":" DDD6","score":0.57685983180999756,"sortText":"40ec52eaDDD6","textEdit":{"newText":"DDD6","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDD7","insertText":"DDD7","insertTextFormat":2,"kind":1,"label":" DDD7","score":0.57685983180999756,"sortText":"40ec52eaDDD7","textEdit":{"newText":"DDD7","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDRB","insertText":"DDRB","insertTextFormat":2,"kind":1,"label":" DDRB","score":0.57685983180999756,"sortText":"40ec52eaDDRB","textEdit":{"newText":"DDRB","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDRC","insertText":"DDRC","insertTextFormat":2,"kind":1,"label":" DDRC","score":0.57685983180999756,"sortText":"40ec52eaDDRC","textEdit":{"newText":"DDRC","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DDRD","insertText":"DDRD","insertTextFormat":2,"kind":1,"label":" DDRD","score":0.57685983180999756,"sortText":"40ec52eaDDRD","textEdit":{"newText":"DDRD","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"kind":1,"label":" DEFAULT","score":0.57685983180999756,"sortText":"40ec52eaDEFAULT","textEdit":{"newText":"DEFAULT","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"kind":1,"label":" DEG_TO_RAD","score":0.57685983180999756,"sortText":"40ec52eaDEG_TO_RAD","textEdit":{"newText":"DEG_TO_RAD","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":2,"kind":1,"label":" DIDR0","score":0.57685983180999756,"sortText":"40ec52eaDIDR0","textEdit":{"newText":"DIDR0","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":2,"kind":1,"label":" DIDR1","score":0.57685983180999756,"sortText":"40ec52eaDIDR1","textEdit":{"newText":"DIDR1","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"kind":1,"label":" DISPLAY","score":0.57685983180999756,"sortText":"40ec52eaDISPLAY","textEdit":{"newText":"DISPLAY","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DOR0","insertText":"DOR0","insertTextFormat":2,"kind":1,"label":" DOR0","score":0.57685983180999756,"sortText":"40ec52eaDOR0","textEdit":{"newText":"DOR0","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"DORD","insertText":"DORD","insertTextFormat":2,"kind":1,"label":" DORD","score":0.57685983180999756,"sortText":"40ec52eaDORD","textEdit":{"newText":"DORD","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"kind":1,"label":" degrees(rad)","score":0.57685983180999756,"sortText":"40ec52eadegrees","textEdit":{"newText":"degrees(${1:rad})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToBitMask(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToBitMask","textEdit":{"newText":"digitalPinToBitMask(${1:P})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToPort(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToPort","textEdit":{"newText":"digitalPinToPort(${1:P})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"DEC","insertText":"DEC","insertTextFormat":2,"kind":1,"label":"•DEC","score":0.53754985332489014,"sortText":"40f66322DEC","textEdit":{"newText":"DEC","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinHasPWM(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinHasPWM","textEdit":{"newText":"digitalPinHasPWM(${1:p})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToInterrupt(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToInterrupt","textEdit":{"newText":"digitalPinToInterrupt(${1:p})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICR(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICR","textEdit":{"newText":"digitalPinToPCICR(${1:p})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICRbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICRbit","textEdit":{"newText":"digitalPinToPCICRbit(${1:p})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSK(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSK","textEdit":{"newText":"digitalPinToPCMSK(${1:p})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}},{"filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSKbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSKbit","textEdit":{"newText":"digitalPinToPCMSKbit(${1:p})","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}}}}]}}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'd'","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":28}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":48,"character":3},"end":{"line":48,"character":3}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'dt'","range":{"end":{"character":4,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":29}}
>>>
Content-Length: 485

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dt'"}]}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":83,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 2500

{"id":84,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":52},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":57},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":9,"line":53},"start":{"character":5,"line":53}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":66},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":8,"line":58},"start":{"character":5,"line":58}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":67}},"selectionRange":{"end":{"character":17,"line":67},"start":{"character":5,"line":67}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":48,"character":3},"end":{"line":48,"character":4}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":48,"character":3},"end":{"line":48,"character":3}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'd'","range":{"end":{"character":3,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":30}}Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'da'","range":{"end":{"character":4,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":31}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":4}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":48,"character":5},"end":{"line":48,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'dat'","range":{"end":{"character":5,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":32}}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":33}}
>>>
Content-Length: 487

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":6},"end":{"line":48,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'date'"}]}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":85,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 2500

{"id":86,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":52},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":57},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":9,"line":53},"start":{"character":5,"line":53}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":66},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":8,"line":58},"start":{"character":5,"line":58}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":67}},"selectionRange":{"end":{"character":17,"line":67},"start":{"character":5,"line":67}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":31},"end":{"line":48,"character":31}},"context":{"diagnostics":[]}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":87,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":48,"character":31},"end":{"line":48,"character":31}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":34}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":2}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":3},"context":{"triggerKind":1}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 5867

{"id":88,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"HardwareSerial","insertText":"HardwareSerial","insertTextFormat":2,"kind":7,"label":"•HardwareSerial","score":4.8584280014038086,"sortText":"3f6487c2HardwareSerial","textEdit":{"newText":"HardwareSerial","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"filterText":"HardwareSerial","insertText":"HardwareSerial(${1:volatile uint8_t *ubrrh}, ${2:volatile uint8_t *ubrrl}, ${3:volatile uint8_t *ucsra}, ${4:volatile uint8_t *ucsrb}, ${5:volatile uint8_t *ucsrc}, ${6:volatile uint8_t *udr})","insertTextFormat":2,"kind":4,"label":" HardwareSerial(volatile uint8_t *ubrrh, volatile uint8_t *ubrrl, volatile uint8_t *ucsra, volatile uint8_t *ucsrb, volatile uint8_t *ucsrc, volatile uint8_t *udr)","score":4.4000000953674316,"sortText":"3f733333HardwareSerial","textEdit":{"newText":"HardwareSerial(${1:volatile uint8_t *ubrrh}, ${2:volatile uint8_t *ubrrl}, ${3:volatile uint8_t *ucsra}, ${4:volatile uint8_t *ucsrb}, ${5:volatile uint8_t *ucsrc}, ${6:volatile uint8_t *udr})","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"additionalTextEdits":[{"newText":"#include <math.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"double","documentation":{"kind":"markdown","value":"From `<math.h>`  \nThe hypot() function returns \\<em>sqrt(\\_\\_x\\*\\_\\_x + \\_\\_y\\*\\_\\_y)\\</em>. This is the length of the hypotenuse of a right triangle with sides of length \\\\a \\_\\_x and \\\\a \\_\\_y, or the distance of the point (\\\\a \\_\\_x, \\\\a \\_\\_y) from the origin. Using this function instead of the direct formula is wise, since the error is much smaller. No underflow with small \\\\a \\_\\_x and \\\\a \\_\\_y. No overflow if result is in range."},"filterText":"hypot","insertText":"hypot(${1:double __x}, ${2:double __y})","insertTextFormat":2,"kind":3,"label":"•hypot(double __x, double __y)","score":1.5037370920181274,"sortText":"403f858bhypot","textEdit":{"newText":"hypot(${1:double __x}, ${2:double __y})","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"HAVE_HWSERIAL0","insertText":"HAVE_HWSERIAL0","insertTextFormat":2,"kind":1,"label":"•HAVE_HWSERIAL0","score":0.68351686000823975,"sortText":"40d1050aHAVE_HWSERIAL0","textEdit":{"newText":"HAVE_HWSERIAL0","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"filterText":"hypotf","insertText":"hypotf","insertTextFormat":2,"kind":1,"label":" hypotf","score":0.68351686000823975,"sortText":"40d1050ahypotf","textEdit":{"newText":"hypotf","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"HALF_PI","insertText":"HALF_PI","insertTextFormat":2,"kind":1,"label":" HALF_PI","score":0.57685983180999756,"sortText":"40ec52eaHALF_PI","textEdit":{"newText":"HALF_PI","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"filterText":"HFUSE_DEFAULT","insertText":"HFUSE_DEFAULT","insertTextFormat":2,"kind":1,"label":" HFUSE_DEFAULT","score":0.57685983180999756,"sortText":"40ec52eaHFUSE_DEFAULT","textEdit":{"newText":"HFUSE_DEFAULT","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"HIGH","insertText":"HIGH","insertTextFormat":2,"kind":1,"label":" HIGH","score":0.57685983180999756,"sortText":"40ec52eaHIGH","textEdit":{"newText":"HIGH","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"highByte","insertText":"highByte(${1:w})","insertTextFormat":2,"kind":1,"label":" highByte(w)","score":0.57685983180999756,"sortText":"40ec52eahighByte","textEdit":{"newText":"highByte(${1:w})","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"HEX","insertText":"HEX","insertTextFormat":2,"kind":1,"label":"•HEX","score":0.53754985332489014,"sortText":"40f66322HEX","textEdit":{"newText":"HEX","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"detail":"[12 overloads]","filterText":"StringSumHelper","insertText":"StringSumHelper($0)","insertTextFormat":2,"kind":4,"label":" StringSumHelper(…)","score":1,"sortText":"80000000StringSumHelper","textEdit":{"newText":"StringSumHelper($0)","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"kind":7,"label":" StringSumHelper","score":1.1000000238418579,"sortText":"80000000StringSumHelper","textEdit":{"newText":"StringSumHelper","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}},{"filterText":"__FlashStringHelper","insertText":"__FlashStringHelper","insertTextFormat":2,"kind":7,"label":" __FlashStringHelper","score":0.11000000685453415,"sortText":"80000000__FlashStringHelper","textEdit":{"newText":"__FlashStringHelper","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}}}}]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":89,"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":49,"character":3},"end":{"line":49,"character":3}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":89,"jsonrpc":"2.0"}Content-Length: 769

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'h'","range":{"end":{"character":3,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":50},"start":{"character":8,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":35}}Content-Length: 770

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'ho'","range":{"end":{"character":4,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":50},"start":{"character":8,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":36}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":4}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 771

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'hou'","range":{"end":{"character":5,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":50},"start":{"character":8,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":37}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":49,"character":5},"end":{"line":49,"character":5}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":6},"context":{"triggerKind":1}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":90,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 2500

{"id":91,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}Content-Length: 772

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":50},"start":{"character":8,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":38}}
>>>
Content-Length: 474

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":6},"end":{"line":49,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'hour'"}]}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":92,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 2500

{"id":93,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 474

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":6},"end":{"line":49,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'hour'"}]}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":94,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":49,"character":6},"end":{"line":49,"character":6}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 772

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":50},"start":{"character":8,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":39}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":49,"character":7},"end":{"line":49,"character":7}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":40}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":49,"character":8},"end":{"line":49,"character":8}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":41}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":48,"character":9},"end":{"line":48,"character":31}},"context":{"diagnostics":[]}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":95,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 2500

{"id":96,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":9}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":97,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":9}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":98,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":29}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":99,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":49,"character":9},"end":{"line":49,"character":9}},"text":"time.substring(19,28);"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":42}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":31}},"context":{"diagnostics":[]}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":100,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 2501

{"id":101,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":0}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":102,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":0}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":103,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":14}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"id":104,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":1,"range":{"end":{"character":11,"line":39},"start":{"character":2,"line":39}}},{"kind":1,"range":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":14}},"context":{"diagnostics":[]}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":105,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":5}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":106,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tachChuoi`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid tachChuoi()\n```"},"range":{"end":{"character":14,"line":41},"start":{"character":5,"line":41}}}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":41,"character":5},"end":{"line":41,"character":14}},"rangeLength":9,"text":"G"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":6},"context":{"triggerKind":1}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 10390

{"id":107,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"char *","filterText":"getenv","insertText":"getenv","insertTextFormat":2,"kind":3,"label":" getenv(const char *)","score":1.5037370920181274,"sortText":"403f858bgetenv","textEdit":{"newText":"getenv","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"additionalTextEdits":[{"newText":"#include <stdio.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<stdio.h>`  \ngetc() function implementation, required by standard"},"filterText":"getc","insertText":"getc","insertTextFormat":2,"kind":3,"label":"•getc(FILE *__stream)","score":1.1826096773147583,"sortText":"4068a03fgetc","textEdit":{"newText":"getc","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"additionalTextEdits":[{"newText":"#include <stdio.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<stdio.h>`  \ngetchar() function implementation, required by standard"},"filterText":"getchar","insertText":"getchar","insertTextFormat":2,"kind":3,"label":"•getchar()","score":1.1826096773147583,"sortText":"4068a03fgetchar","textEdit":{"newText":"getchar","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"additionalTextEdits":[{"newText":"#include <stdio.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `<stdio.h>`  \nSimilar to fgets() except that it will operate on stream \\\\c stdin,  \nand the trailing newline (if any) will not be stored in the string.  \nIt is the caller's responsibility to provide enough storage to hold the characters read."},"filterText":"gets","insertText":"gets","insertTextFormat":2,"kind":3,"label":"•gets(char *__str)","score":1.1826096773147583,"sortText":"4068a03fgets","textEdit":{"newText":"gets","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"documentation":{"kind":"markdown","value":"From `\"SoftwareSerial.h\"`"},"filterText":"GCC_VERSION","insertText":"GCC_VERSION","insertTextFormat":2,"kind":1,"label":" GCC_VERSION","score":0.84263044595718384,"sortText":"40a8495fGCC_VERSION","textEdit":{"newText":"GCC_VERSION","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR0","insertText":"GPIOR0","insertTextFormat":2,"kind":1,"label":" GPIOR0","score":0.57685983180999756,"sortText":"40ec52eaGPIOR0","textEdit":{"newText":"GPIOR0","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR00","insertText":"GPIOR00","insertTextFormat":2,"kind":1,"label":" GPIOR00","score":0.57685983180999756,"sortText":"40ec52eaGPIOR00","textEdit":{"newText":"GPIOR00","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR01","insertText":"GPIOR01","insertTextFormat":2,"kind":1,"label":" GPIOR01","score":0.57685983180999756,"sortText":"40ec52eaGPIOR01","textEdit":{"newText":"GPIOR01","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR02","insertText":"GPIOR02","insertTextFormat":2,"kind":1,"label":" GPIOR02","score":0.57685983180999756,"sortText":"40ec52eaGPIOR02","textEdit":{"newText":"GPIOR02","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR03","insertText":"GPIOR03","insertTextFormat":2,"kind":1,"label":" GPIOR03","score":0.57685983180999756,"sortText":"40ec52eaGPIOR03","textEdit":{"newText":"GPIOR03","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR04","insertText":"GPIOR04","insertTextFormat":2,"kind":1,"label":" GPIOR04","score":0.57685983180999756,"sortText":"40ec52eaGPIOR04","textEdit":{"newText":"GPIOR04","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR05","insertText":"GPIOR05","insertTextFormat":2,"kind":1,"label":" GPIOR05","score":0.57685983180999756,"sortText":"40ec52eaGPIOR05","textEdit":{"newText":"GPIOR05","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR06","insertText":"GPIOR06","insertTextFormat":2,"kind":1,"label":" GPIOR06","score":0.57685983180999756,"sortText":"40ec52eaGPIOR06","textEdit":{"newText":"GPIOR06","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR07","insertText":"GPIOR07","insertTextFormat":2,"kind":1,"label":" GPIOR07","score":0.57685983180999756,"sortText":"40ec52eaGPIOR07","textEdit":{"newText":"GPIOR07","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR1","insertText":"GPIOR1","insertTextFormat":2,"kind":1,"label":" GPIOR1","score":0.57685983180999756,"sortText":"40ec52eaGPIOR1","textEdit":{"newText":"GPIOR1","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR10","insertText":"GPIOR10","insertTextFormat":2,"kind":1,"label":" GPIOR10","score":0.57685983180999756,"sortText":"40ec52eaGPIOR10","textEdit":{"newText":"GPIOR10","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR11","insertText":"GPIOR11","insertTextFormat":2,"kind":1,"label":" GPIOR11","score":0.57685983180999756,"sortText":"40ec52eaGPIOR11","textEdit":{"newText":"GPIOR11","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR12","insertText":"GPIOR12","insertTextFormat":2,"kind":1,"label":" GPIOR12","score":0.57685983180999756,"sortText":"40ec52eaGPIOR12","textEdit":{"newText":"GPIOR12","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR13","insertText":"GPIOR13","insertTextFormat":2,"kind":1,"label":" GPIOR13","score":0.57685983180999756,"sortText":"40ec52eaGPIOR13","textEdit":{"newText":"GPIOR13","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR14","insertText":"GPIOR14","insertTextFormat":2,"kind":1,"label":" GPIOR14","score":0.57685983180999756,"sortText":"40ec52eaGPIOR14","textEdit":{"newText":"GPIOR14","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR15","insertText":"GPIOR15","insertTextFormat":2,"kind":1,"label":" GPIOR15","score":0.57685983180999756,"sortText":"40ec52eaGPIOR15","textEdit":{"newText":"GPIOR15","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR16","insertText":"GPIOR16","insertTextFormat":2,"kind":1,"label":" GPIOR16","score":0.57685983180999756,"sortText":"40ec52eaGPIOR16","textEdit":{"newText":"GPIOR16","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR17","insertText":"GPIOR17","insertTextFormat":2,"kind":1,"label":" GPIOR17","score":0.57685983180999756,"sortText":"40ec52eaGPIOR17","textEdit":{"newText":"GPIOR17","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR2","insertText":"GPIOR2","insertTextFormat":2,"kind":1,"label":" GPIOR2","score":0.57685983180999756,"sortText":"40ec52eaGPIOR2","textEdit":{"newText":"GPIOR2","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR20","insertText":"GPIOR20","insertTextFormat":2,"kind":1,"label":" GPIOR20","score":0.57685983180999756,"sortText":"40ec52eaGPIOR20","textEdit":{"newText":"GPIOR20","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR21","insertText":"GPIOR21","insertTextFormat":2,"kind":1,"label":" GPIOR21","score":0.57685983180999756,"sortText":"40ec52eaGPIOR21","textEdit":{"newText":"GPIOR21","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR22","insertText":"GPIOR22","insertTextFormat":2,"kind":1,"label":" GPIOR22","score":0.57685983180999756,"sortText":"40ec52eaGPIOR22","textEdit":{"newText":"GPIOR22","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR23","insertText":"GPIOR23","insertTextFormat":2,"kind":1,"label":" GPIOR23","score":0.57685983180999756,"sortText":"40ec52eaGPIOR23","textEdit":{"newText":"GPIOR23","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR24","insertText":"GPIOR24","insertTextFormat":2,"kind":1,"label":" GPIOR24","score":0.57685983180999756,"sortText":"40ec52eaGPIOR24","textEdit":{"newText":"GPIOR24","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR25","insertText":"GPIOR25","insertTextFormat":2,"kind":1,"label":" GPIOR25","score":0.57685983180999756,"sortText":"40ec52eaGPIOR25","textEdit":{"newText":"GPIOR25","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR26","insertText":"GPIOR26","insertTextFormat":2,"kind":1,"label":" GPIOR26","score":0.57685983180999756,"sortText":"40ec52eaGPIOR26","textEdit":{"newText":"GPIOR26","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GPIOR27","insertText":"GPIOR27","insertTextFormat":2,"kind":1,"label":" GPIOR27","score":0.57685983180999756,"sortText":"40ec52eaGPIOR27","textEdit":{"newText":"GPIOR27","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"GTCCR","insertText":"GTCCR","insertTextFormat":2,"kind":1,"label":" GTCCR","score":0.57685983180999756,"sortText":"40ec52eaGTCCR","textEdit":{"newText":"GTCCR","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"getc","insertText":"getc(${1:__stream})","insertTextFormat":2,"kind":1,"label":" getc(__stream)","score":0.53754985332489014,"sortText":"40f66322getc","textEdit":{"newText":"getc(${1:__stream})","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}},{"filterText":"getchar","insertText":"getchar()","insertTextFormat":2,"kind":1,"label":" getchar()","score":0.53754985332489014,"sortText":"40f66322getchar","textEdit":{"newText":"getchar()","range":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}}}]}}Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":43}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":6},"end":{"line":41,"character":6}},"context":{"diagnostics":[]}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":108,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 2492

{"id":109,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"G","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":6,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":41,"character":6},"end":{"line":41,"character":6}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":41,"character":7},"end":{"line":41,"character":7}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":44}}Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":45}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":8},"end":{"line":41,"character":8}},"context":{"diagnostics":[]}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":110,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 2494

{"id":111,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"Get","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":8,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":41,"character":8},"end":{"line":41,"character":8}},"text":"T"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":46}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":41,"character":9},"end":{"line":41,"character":9}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":10},"context":{"triggerKind":1}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":112,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":113,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTi","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":10,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":47}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":10}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":11},"context":{"triggerKind":1}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":114,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":115,"jsonrpc":"2.0"}Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":41,"character":11},"end":{"line":41,"character":11}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":115,"jsonrpc":"2.0"}Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":48}}Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":49}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":41,"character":12},"end":{"line":41,"character":12}},"context":{"diagnostics":[]}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":116,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 2499

{"id":117,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"tachChuoi","range":{"end":{"character":16,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":14,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 2920

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":50},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString time1=\"\";\nString time=\"\";\n#line 7 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 29 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid GetTime();\n#line 42 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 47 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 56 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 7 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  tachChuoi();\n}\nvoid GetTime(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  date = time.substring(19,28);\n  hour = time.substring(19,28);\n  Serial.print(time1);\n  //+CCLK: \"21/08/05,19:28:10+28\"\n\n}\nvoid loop()\n{\n  \n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":39,"character":10}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 40

{"id":118,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 769

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tachChuoi'","range":{"end":{"character":11,"line":39},"start":{"character":2,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":50}}Content-Length: 2497

{"id":119,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":39,"character":11}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":120,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":97},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":121,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":11}},"context":{"diagnostics":[]}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":122,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":11,"line":39},"start":{"character":2,"line":39}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":123,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":39,"character":1}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":124,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":100},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":98},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":11}},"rangeLength":9,"text":"G"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":99},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":39,"character":3},"context":{"triggerKind":1}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 10932

{"id":125,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"goto","insertText":"goto ${0:label};","insertTextFormat":2,"kind":15,"label":" goto label;","score":8,"sortText":"3f000000goto","textEdit":{"newText":"goto ${0:label};","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"detail":"void","filterText":"GetTime","insertText":"GetTime","insertTextFormat":2,"kind":3,"label":" GetTime()","score":7.3863968849182129,"sortText":"3f13a2a3GetTime","textEdit":{"newText":"GetTime","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"detail":"char *","filterText":"getenv","insertText":"getenv","insertTextFormat":2,"kind":3,"label":" getenv(const char *)","score":1.5037370920181274,"sortText":"403f858bgetenv","textEdit":{"newText":"getenv","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"additionalTextEdits":[{"newText":"#include <stdio.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<stdio.h>`  \ngetc() function implementation, required by standard"},"filterText":"getc","insertText":"getc","insertTextFormat":2,"kind":3,"label":"•getc(FILE *__stream)","score":1.1826096773147583,"sortText":"4068a03fgetc","textEdit":{"newText":"getc","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"additionalTextEdits":[{"newText":"#include <stdio.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"int","documentation":{"kind":"markdown","value":"From `<stdio.h>`  \ngetchar() function implementation, required by standard"},"filterText":"getchar","insertText":"getchar","insertTextFormat":2,"kind":3,"label":"•getchar()","score":1.1826096773147583,"sortText":"4068a03fgetchar","textEdit":{"newText":"getchar","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"additionalTextEdits":[{"newText":"#include <stdio.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"char *","documentation":{"kind":"markdown","value":"From `<stdio.h>`  \nSimilar to fgets() except that it will operate on stream \\\\c stdin,  \nand the trailing newline (if any) will not be stored in the string.  \nIt is the caller's responsibility to provide enough storage to hold the characters read."},"filterText":"gets","insertText":"gets","insertTextFormat":2,"kind":3,"label":"•gets(char *__str)","score":1.1826096773147583,"sortText":"4068a03fgets","textEdit":{"newText":"gets","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"documentation":{"kind":"markdown","value":"From `\"SoftwareSerial.h\"`"},"filterText":"GCC_VERSION","insertText":"GCC_VERSION","insertTextFormat":2,"kind":1,"label":" GCC_VERSION","score":0.84263044595718384,"sortText":"40a8495fGCC_VERSION","textEdit":{"newText":"GCC_VERSION","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR0","insertText":"GPIOR0","insertTextFormat":2,"kind":1,"label":" GPIOR0","score":0.57685983180999756,"sortText":"40ec52eaGPIOR0","textEdit":{"newText":"GPIOR0","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR00","insertText":"GPIOR00","insertTextFormat":2,"kind":1,"label":" GPIOR00","score":0.57685983180999756,"sortText":"40ec52eaGPIOR00","textEdit":{"newText":"GPIOR00","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR01","insertText":"GPIOR01","insertTextFormat":2,"kind":1,"label":" GPIOR01","score":0.57685983180999756,"sortText":"40ec52eaGPIOR01","textEdit":{"newText":"GPIOR01","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR02","insertText":"GPIOR02","insertTextFormat":2,"kind":1,"label":" GPIOR02","score":0.57685983180999756,"sortText":"40ec52eaGPIOR02","textEdit":{"newText":"GPIOR02","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR03","insertText":"GPIOR03","insertTextFormat":2,"kind":1,"label":" GPIOR03","score":0.57685983180999756,"sortText":"40ec52eaGPIOR03","textEdit":{"newText":"GPIOR03","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR04","insertText":"GPIOR04","insertTextFormat":2,"kind":1,"label":" GPIOR04","score":0.57685983180999756,"sortText":"40ec52eaGPIOR04","textEdit":{"newText":"GPIOR04","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR05","insertText":"GPIOR05","insertTextFormat":2,"kind":1,"label":" GPIOR05","score":0.57685983180999756,"sortText":"40ec52eaGPIOR05","textEdit":{"newText":"GPIOR05","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR06","insertText":"GPIOR06","insertTextFormat":2,"kind":1,"label":" GPIOR06","score":0.57685983180999756,"sortText":"40ec52eaGPIOR06","textEdit":{"newText":"GPIOR06","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR07","insertText":"GPIOR07","insertTextFormat":2,"kind":1,"label":" GPIOR07","score":0.57685983180999756,"sortText":"40ec52eaGPIOR07","textEdit":{"newText":"GPIOR07","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR1","insertText":"GPIOR1","insertTextFormat":2,"kind":1,"label":" GPIOR1","score":0.57685983180999756,"sortText":"40ec52eaGPIOR1","textEdit":{"newText":"GPIOR1","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR10","insertText":"GPIOR10","insertTextFormat":2,"kind":1,"label":" GPIOR10","score":0.57685983180999756,"sortText":"40ec52eaGPIOR10","textEdit":{"newText":"GPIOR10","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR11","insertText":"GPIOR11","insertTextFormat":2,"kind":1,"label":" GPIOR11","score":0.57685983180999756,"sortText":"40ec52eaGPIOR11","textEdit":{"newText":"GPIOR11","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR12","insertText":"GPIOR12","insertTextFormat":2,"kind":1,"label":" GPIOR12","score":0.57685983180999756,"sortText":"40ec52eaGPIOR12","textEdit":{"newText":"GPIOR12","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR13","insertText":"GPIOR13","insertTextFormat":2,"kind":1,"label":" GPIOR13","score":0.57685983180999756,"sortText":"40ec52eaGPIOR13","textEdit":{"newText":"GPIOR13","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR14","insertText":"GPIOR14","insertTextFormat":2,"kind":1,"label":" GPIOR14","score":0.57685983180999756,"sortText":"40ec52eaGPIOR14","textEdit":{"newText":"GPIOR14","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR15","insertText":"GPIOR15","insertTextFormat":2,"kind":1,"label":" GPIOR15","score":0.57685983180999756,"sortText":"40ec52eaGPIOR15","textEdit":{"newText":"GPIOR15","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR16","insertText":"GPIOR16","insertTextFormat":2,"kind":1,"label":" GPIOR16","score":0.57685983180999756,"sortText":"40ec52eaGPIOR16","textEdit":{"newText":"GPIOR16","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR17","insertText":"GPIOR17","insertTextFormat":2,"kind":1,"label":" GPIOR17","score":0.57685983180999756,"sortText":"40ec52eaGPIOR17","textEdit":{"newText":"GPIOR17","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR2","insertText":"GPIOR2","insertTextFormat":2,"kind":1,"label":" GPIOR2","score":0.57685983180999756,"sortText":"40ec52eaGPIOR2","textEdit":{"newText":"GPIOR2","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR20","insertText":"GPIOR20","insertTextFormat":2,"kind":1,"label":" GPIOR20","score":0.57685983180999756,"sortText":"40ec52eaGPIOR20","textEdit":{"newText":"GPIOR20","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR21","insertText":"GPIOR21","insertTextFormat":2,"kind":1,"label":" GPIOR21","score":0.57685983180999756,"sortText":"40ec52eaGPIOR21","textEdit":{"newText":"GPIOR21","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR22","insertText":"GPIOR22","insertTextFormat":2,"kind":1,"label":" GPIOR22","score":0.57685983180999756,"sortText":"40ec52eaGPIOR22","textEdit":{"newText":"GPIOR22","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR23","insertText":"GPIOR23","insertTextFormat":2,"kind":1,"label":" GPIOR23","score":0.57685983180999756,"sortText":"40ec52eaGPIOR23","textEdit":{"newText":"GPIOR23","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR24","insertText":"GPIOR24","insertTextFormat":2,"kind":1,"label":" GPIOR24","score":0.57685983180999756,"sortText":"40ec52eaGPIOR24","textEdit":{"newText":"GPIOR24","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR25","insertText":"GPIOR25","insertTextFormat":2,"kind":1,"label":" GPIOR25","score":0.57685983180999756,"sortText":"40ec52eaGPIOR25","textEdit":{"newText":"GPIOR25","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR26","insertText":"GPIOR26","insertTextFormat":2,"kind":1,"label":" GPIOR26","score":0.57685983180999756,"sortText":"40ec52eaGPIOR26","textEdit":{"newText":"GPIOR26","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GPIOR27","insertText":"GPIOR27","insertTextFormat":2,"kind":1,"label":" GPIOR27","score":0.57685983180999756,"sortText":"40ec52eaGPIOR27","textEdit":{"newText":"GPIOR27","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"GTCCR","insertText":"GTCCR","insertTextFormat":2,"kind":1,"label":" GTCCR","score":0.57685983180999756,"sortText":"40ec52eaGTCCR","textEdit":{"newText":"GTCCR","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"getc","insertText":"getc(${1:__stream})","insertTextFormat":2,"kind":1,"label":" getc(__stream)","score":0.53754985332489014,"sortText":"40f66322getc","textEdit":{"newText":"getc(${1:__stream})","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}},{"filterText":"getchar","insertText":"getchar()","insertTextFormat":2,"kind":1,"label":" getchar()","score":0.53754985332489014,"sortText":"40f66322getchar","textEdit":{"newText":"getchar()","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}}}}]}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":39,"character":3},"end":{"line":39,"character":3}},"context":{"diagnostics":[]}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":126,"jsonrpc":"2.0","result":[]}Content-Length: 760

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'G'","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":51}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":39,"character":3},"end":{"line":39,"character":3}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 761

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Ge'","range":{"end":{"character":4,"line":39},"start":{"character":2,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":52}}
>>>
Content-Length: 486

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ge'"}]}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":127,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":128,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":4}},"rangeLength":2,"text":"GetTime"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":53}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":39,"character":9},"end":{"line":39,"character":9}},"context":{"diagnostics":[]}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":129,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":130,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":15}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":131,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":16}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":132,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":13}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":133,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":26}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":134,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":22}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":135,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":25}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":136,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":26}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":137,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":26}},"context":{"diagnostics":[]}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":138,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":25},"end":{"line":49,"character":26}},"context":{"diagnostics":[]}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":139,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":24},"end":{"line":49,"character":26}},"context":{"diagnostics":[]}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":140,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":24}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":141,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":49,"character":24},"end":{"line":49,"character":26}},"rangeLength":2,"text":"3"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":54}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":49,"character":25},"end":{"line":49,"character":25}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":55}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":26}},"context":{"diagnostics":[]}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":142,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":143,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":29}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":144,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":29}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":145,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":29}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":146,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":29}},"context":{"diagnostics":[]}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":147,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":28}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":148,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":28}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":149,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":29}},"rangeLength":1,"text":"5"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":56}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":29},"end":{"line":49,"character":29}},"context":{"diagnostics":[]}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":150,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":151,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":28}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":152,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":28}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":153,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":28}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":154,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":28}},"context":{"diagnostics":[]}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":155,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":27},"end":{"line":49,"character":28}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":26}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":157,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":49,"character":27},"end":{"line":49,"character":28}},"rangeLength":1,"text":"3"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":57}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":28}},"context":{"diagnostics":[]}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":158,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":159,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":42,"character":15}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":160,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":18,"line":42},"start":{"character":11,"line":42}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":41,"character":10}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"id":161,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `GetTime`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid GetTime()\n```"},"range":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":18}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":162,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":20}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":163,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `const String &`\n\n---\n```cpp\n// In Print\npublic: size_t print(const String &)\n```"},"range":{"end":{"character":20,"line":50},"start":{"character":15,"line":50}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":19}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"id":164,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `time1`  \n\n---\nType: `class String`  \nPassed by const reference  \n\n---\n```cpp\nString time1 = \"\"\n```"},"range":{"end":{"character":20,"line":50},"start":{"character":15,"line":50}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":15}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"id":165,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `time1`  \n\n---\nType: `class String`  \nPassed by const reference  \n\n---\n```cpp\nString time1 = \"\"\n```"},"range":{"end":{"character":20,"line":50},"start":{"character":15,"line":50}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":14}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":166,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `const String &`\n\n---\n```cpp\n// In Print\npublic: size_t print(const String &)\n```"},"range":{"end":{"character":14,"line":50},"start":{"character":9,"line":50}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":14}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":167,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":50},"start":{"character":9,"line":50}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":14},"end":{"line":50,"character":14}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":50,"character":14},"end":{"line":50,"character":14}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":15},"context":{"triggerKind":1}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 362

{"id":169,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"[12 overloads]","filterText":"println","insertText":"println","insertTextFormat":2,"kind":2,"label":" println(…)","score":9.4506111145019531,"sortText":"3ee8ca4cprintln","textEdit":{"newText":"println","range":{"end":{"character":15,"line":50},"start":{"character":9,"line":50}}}}]}}Content-Length: 764

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'printl' in 'HardwareSerial'","range":{"end":{"character":15,"line":50},"start":{"character":9,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":58}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":50,"character":15},"end":{"line":50,"character":15}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 579

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":59}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":16},"end":{"line":50,"character":16}},"context":{"diagnostics":[]}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":170,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":171,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":24},"end":{"line":50,"character":24}},"context":{"diagnostics":[]}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":172,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":20}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"id":173,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":1,"range":{"end":{"character":22,"line":50},"start":{"character":17,"line":50}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":22}},"context":{"diagnostics":[]}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":174,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":22}},"rangeLength":5,"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":18},"context":{"triggerKind":1}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 24563

{"id":175,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"kind":15,"label":" decltype(expression)","score":8,"sortText":"3f000000decltype","textEdit":{"newText":"decltype(${0:expression})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"void","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete ${0:expression}","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"void","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete [] expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete [] ${0:expression}","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"double","insertText":"double","insertTextFormat":2,"kind":14,"label":" double","score":8,"sortText":"3f000000double","textEdit":{"newText":"double","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"dynamic_cast","insertText":"dynamic_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" dynamic_cast<type>(expression)","score":8,"sortText":"3f000000dynamic_cast","textEdit":{"newText":"dynamic_cast<${1:type}>(${0:expression})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"kind":3,"label":" delay(unsigned long ms)","score":6.6010479927062988,"sortText":"3f2cc437delay","textEdit":{"newText":"delay(${1:unsigned long ms})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_timer_PGM","score":1.9036375284194946,"sortText":"400c559bdigital_pin_to_timer_PGM","textEdit":{"newText":"digital_pin_to_timer_PGM","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"filterText":"div","insertText":"div(${1:int __num}, ${2:int __denom})","insertTextFormat":2,"kind":3,"label":" div(int __num, int __denom)","score":1.5037370920181274,"sortText":"403f858bdiv","textEdit":{"newText":"div(${1:int __num}, ${2:int __denom})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"filterText":"div_t","insertText":"div_t","insertTextFormat":2,"kind":8,"label":" div_t","score":1.5037370920181274,"sortText":"403f858bdiv_t","textEdit":{"newText":"div_t","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostre","insertText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","insertTextFormat":2,"kind":3,"label":" dtostre(double __val, char *__s, unsigned char __prec, unsigned char __flags)","score":1.5037370920181274,"sortText":"403f858bdtostre","textEdit":{"newText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostrf","insertText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","insertTextFormat":2,"kind":3,"label":" dtostrf(double __val, signed char __width, unsigned char __prec, char *__s)","score":1.5037370920181274,"sortText":"403f858bdtostrf","textEdit":{"newText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"kind":3,"label":" digitalWrite(uint8_t pin, uint8_t val)","score":1.3503646850585938,"sortText":"40532740digitalWrite","textEdit":{"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_bit_mask_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_bit_mask_PGM","textEdit":{"newText":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_port_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_port_PGM","textEdit":{"newText":"digital_pin_to_port_PGM","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"kind":3,"label":" delayMicroseconds(unsigned int us)","score":1.2690916061401367,"sortText":"405d8e68delayMicroseconds","textEdit":{"newText":"delayMicroseconds(${1:unsigned int us})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"kind":3,"label":" detachInterrupt(uint8_t interruptNum)","score":1.2690916061401367,"sortText":"405d8e68detachInterrupt","textEdit":{"newText":"detachInterrupt(${1:uint8_t interruptNum})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":1.2690916061401367,"sortText":"405d8e68digitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToTimer(P)","score":0.86528974771499634,"sortText":"40a27c5fdigitalPinToTimer","textEdit":{"newText":"digitalPinToTimer(${1:P})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_ALWAYS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_ALWAYS_SIGN","textEdit":{"newText":"DTOSTR_ALWAYS_SIGN","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_PLUS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_PLUS_SIGN","textEdit":{"newText":"DTOSTR_PLUS_SIGN","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":2,"kind":1,"label":" DTOSTR_UPPERCASE","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_UPPERCASE","textEdit":{"newText":"DTOSTR_UPPERCASE","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD0","insertText":"DD0","insertTextFormat":2,"kind":1,"label":" DD0","score":0.57685983180999756,"sortText":"40ec52eaDD0","textEdit":{"newText":"DD0","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD1","insertText":"DD1","insertTextFormat":2,"kind":1,"label":" DD1","score":0.57685983180999756,"sortText":"40ec52eaDD1","textEdit":{"newText":"DD1","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD2","insertText":"DD2","insertTextFormat":2,"kind":1,"label":" DD2","score":0.57685983180999756,"sortText":"40ec52eaDD2","textEdit":{"newText":"DD2","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD3","insertText":"DD3","insertTextFormat":2,"kind":1,"label":" DD3","score":0.57685983180999756,"sortText":"40ec52eaDD3","textEdit":{"newText":"DD3","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD4","insertText":"DD4","insertTextFormat":2,"kind":1,"label":" DD4","score":0.57685983180999756,"sortText":"40ec52eaDD4","textEdit":{"newText":"DD4","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD5","insertText":"DD5","insertTextFormat":2,"kind":1,"label":" DD5","score":0.57685983180999756,"sortText":"40ec52eaDD5","textEdit":{"newText":"DD5","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD6","insertText":"DD6","insertTextFormat":2,"kind":1,"label":" DD6","score":0.57685983180999756,"sortText":"40ec52eaDD6","textEdit":{"newText":"DD6","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DD7","insertText":"DD7","insertTextFormat":2,"kind":1,"label":" DD7","score":0.57685983180999756,"sortText":"40ec52eaDD7","textEdit":{"newText":"DD7","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB0","insertText":"DDB0","insertTextFormat":2,"kind":1,"label":" DDB0","score":0.57685983180999756,"sortText":"40ec52eaDDB0","textEdit":{"newText":"DDB0","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB1","insertText":"DDB1","insertTextFormat":2,"kind":1,"label":" DDB1","score":0.57685983180999756,"sortText":"40ec52eaDDB1","textEdit":{"newText":"DDB1","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB2","insertText":"DDB2","insertTextFormat":2,"kind":1,"label":" DDB2","score":0.57685983180999756,"sortText":"40ec52eaDDB2","textEdit":{"newText":"DDB2","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB3","insertText":"DDB3","insertTextFormat":2,"kind":1,"label":" DDB3","score":0.57685983180999756,"sortText":"40ec52eaDDB3","textEdit":{"newText":"DDB3","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB4","insertText":"DDB4","insertTextFormat":2,"kind":1,"label":" DDB4","score":0.57685983180999756,"sortText":"40ec52eaDDB4","textEdit":{"newText":"DDB4","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB5","insertText":"DDB5","insertTextFormat":2,"kind":1,"label":" DDB5","score":0.57685983180999756,"sortText":"40ec52eaDDB5","textEdit":{"newText":"DDB5","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB6","insertText":"DDB6","insertTextFormat":2,"kind":1,"label":" DDB6","score":0.57685983180999756,"sortText":"40ec52eaDDB6","textEdit":{"newText":"DDB6","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDB7","insertText":"DDB7","insertTextFormat":2,"kind":1,"label":" DDB7","score":0.57685983180999756,"sortText":"40ec52eaDDB7","textEdit":{"newText":"DDB7","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDC0","insertText":"DDC0","insertTextFormat":2,"kind":1,"label":" DDC0","score":0.57685983180999756,"sortText":"40ec52eaDDC0","textEdit":{"newText":"DDC0","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDC1","insertText":"DDC1","insertTextFormat":2,"kind":1,"label":" DDC1","score":0.57685983180999756,"sortText":"40ec52eaDDC1","textEdit":{"newText":"DDC1","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDC2","insertText":"DDC2","insertTextFormat":2,"kind":1,"label":" DDC2","score":0.57685983180999756,"sortText":"40ec52eaDDC2","textEdit":{"newText":"DDC2","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDC3","insertText":"DDC3","insertTextFormat":2,"kind":1,"label":" DDC3","score":0.57685983180999756,"sortText":"40ec52eaDDC3","textEdit":{"newText":"DDC3","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDC4","insertText":"DDC4","insertTextFormat":2,"kind":1,"label":" DDC4","score":0.57685983180999756,"sortText":"40ec52eaDDC4","textEdit":{"newText":"DDC4","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDC5","insertText":"DDC5","insertTextFormat":2,"kind":1,"label":" DDC5","score":0.57685983180999756,"sortText":"40ec52eaDDC5","textEdit":{"newText":"DDC5","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDC6","insertText":"DDC6","insertTextFormat":2,"kind":1,"label":" DDC6","score":0.57685983180999756,"sortText":"40ec52eaDDC6","textEdit":{"newText":"DDC6","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD0","insertText":"DDD0","insertTextFormat":2,"kind":1,"label":" DDD0","score":0.57685983180999756,"sortText":"40ec52eaDDD0","textEdit":{"newText":"DDD0","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD1","insertText":"DDD1","insertTextFormat":2,"kind":1,"label":" DDD1","score":0.57685983180999756,"sortText":"40ec52eaDDD1","textEdit":{"newText":"DDD1","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD2","insertText":"DDD2","insertTextFormat":2,"kind":1,"label":" DDD2","score":0.57685983180999756,"sortText":"40ec52eaDDD2","textEdit":{"newText":"DDD2","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD3","insertText":"DDD3","insertTextFormat":2,"kind":1,"label":" DDD3","score":0.57685983180999756,"sortText":"40ec52eaDDD3","textEdit":{"newText":"DDD3","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD4","insertText":"DDD4","insertTextFormat":2,"kind":1,"label":" DDD4","score":0.57685983180999756,"sortText":"40ec52eaDDD4","textEdit":{"newText":"DDD4","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD5","insertText":"DDD5","insertTextFormat":2,"kind":1,"label":" DDD5","score":0.57685983180999756,"sortText":"40ec52eaDDD5","textEdit":{"newText":"DDD5","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD6","insertText":"DDD6","insertTextFormat":2,"kind":1,"label":" DDD6","score":0.57685983180999756,"sortText":"40ec52eaDDD6","textEdit":{"newText":"DDD6","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDD7","insertText":"DDD7","insertTextFormat":2,"kind":1,"label":" DDD7","score":0.57685983180999756,"sortText":"40ec52eaDDD7","textEdit":{"newText":"DDD7","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDRB","insertText":"DDRB","insertTextFormat":2,"kind":1,"label":" DDRB","score":0.57685983180999756,"sortText":"40ec52eaDDRB","textEdit":{"newText":"DDRB","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDRC","insertText":"DDRC","insertTextFormat":2,"kind":1,"label":" DDRC","score":0.57685983180999756,"sortText":"40ec52eaDDRC","textEdit":{"newText":"DDRC","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DDRD","insertText":"DDRD","insertTextFormat":2,"kind":1,"label":" DDRD","score":0.57685983180999756,"sortText":"40ec52eaDDRD","textEdit":{"newText":"DDRD","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"kind":1,"label":" DEFAULT","score":0.57685983180999756,"sortText":"40ec52eaDEFAULT","textEdit":{"newText":"DEFAULT","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"kind":1,"label":" DEG_TO_RAD","score":0.57685983180999756,"sortText":"40ec52eaDEG_TO_RAD","textEdit":{"newText":"DEG_TO_RAD","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":2,"kind":1,"label":" DIDR0","score":0.57685983180999756,"sortText":"40ec52eaDIDR0","textEdit":{"newText":"DIDR0","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":2,"kind":1,"label":" DIDR1","score":0.57685983180999756,"sortText":"40ec52eaDIDR1","textEdit":{"newText":"DIDR1","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"kind":1,"label":" DISPLAY","score":0.57685983180999756,"sortText":"40ec52eaDISPLAY","textEdit":{"newText":"DISPLAY","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DOR0","insertText":"DOR0","insertTextFormat":2,"kind":1,"label":" DOR0","score":0.57685983180999756,"sortText":"40ec52eaDOR0","textEdit":{"newText":"DOR0","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"DORD","insertText":"DORD","insertTextFormat":2,"kind":1,"label":" DORD","score":0.57685983180999756,"sortText":"40ec52eaDORD","textEdit":{"newText":"DORD","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"kind":1,"label":" degrees(rad)","score":0.57685983180999756,"sortText":"40ec52eadegrees","textEdit":{"newText":"degrees(${1:rad})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToBitMask(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToBitMask","textEdit":{"newText":"digitalPinToBitMask(${1:P})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToPort(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToPort","textEdit":{"newText":"digitalPinToPort(${1:P})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"DEC","insertText":"DEC","insertTextFormat":2,"kind":1,"label":"•DEC","score":0.53754985332489014,"sortText":"40f66322DEC","textEdit":{"newText":"DEC","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinHasPWM(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinHasPWM","textEdit":{"newText":"digitalPinHasPWM(${1:p})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToInterrupt(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToInterrupt","textEdit":{"newText":"digitalPinToInterrupt(${1:p})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICR(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICR","textEdit":{"newText":"digitalPinToPCICR(${1:p})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICRbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICRbit","textEdit":{"newText":"digitalPinToPCICRbit(${1:p})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSK(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSK","textEdit":{"newText":"digitalPinToPCMSK(${1:p})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}},{"filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSKbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSKbit","textEdit":{"newText":"digitalPinToPCMSKbit(${1:p})","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}}}}]}}Content-Length: 762

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'd'","range":{"end":{"character":18,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":60}}
>>>
Content-Length: 489

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":18},"end":{"line":50,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":176,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":177,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":50,"character":18},"end":{"line":50,"character":18}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 763

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'da'","range":{"end":{"character":19,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":61}}
>>>
Content-Length: 490

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":19},"end":{"line":50,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'da'"}]}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":178,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":179,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":50,"character":19},"end":{"line":50,"character":19}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 764

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'dat'","range":{"end":{"character":20,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":62}}
>>>
Content-Length: 491

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":20},"end":{"line":50,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dat'"}]}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":180,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":181,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":50,"character":20},"end":{"line":50,"character":20}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 765

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":63}}
>>>
Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":21},"end":{"line":50,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'date'"}]}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":182,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":183,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":53},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":9,"line":54},"start":{"character":5,"line":54}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":67},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":8,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":79},"start":{"character":0,"line":68}},"selectionRange":{"end":{"character":17,"line":68},"start":{"character":5,"line":68}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":23},"end":{"line":50,"character":23}},"context":{"diagnostics":[]}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":184,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 491

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'date'"}]}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":185,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":3}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 242

{"id":186,"jsonrpc":"2.0","result":[{"range":{"end":{"character":23,"line":69},"start":{"character":17,"line":69}},"uri":"file:///C:/Users/Admin/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":3}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"id":187,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":8,"line":50},"start":{"character":2,"line":50}}}}
>>>
Content-Length: 205

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Admin/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/Admin/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":14}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":188,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":17}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":189,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":23}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":190,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":23},"end":{"line":50,"character":23}},"context":{"diagnostics":[]}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":191,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":50,"character":23},"end":{"line":50,"character":23}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 765

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":64}}
>>>
Content-Length: 331

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":2}},"text":"Serial.println(date);"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 951

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":65}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":23},"end":{"line":51,"character":23}},"context":{"diagnostics":[]}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":192,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":193,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":20}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":194,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":19}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":195,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'date'"}]}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":196,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":21}},"rangeLength":4,"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":18},"context":{"triggerKind":1}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 5893

{"id":197,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"HardwareSerial","insertText":"HardwareSerial","insertTextFormat":2,"kind":7,"label":"•HardwareSerial","score":7.2876424789428711,"sortText":"3f16cba2HardwareSerial","textEdit":{"newText":"HardwareSerial","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"filterText":"HardwareSerial","insertText":"HardwareSerial(${1:volatile uint8_t *ubrrh}, ${2:volatile uint8_t *ubrrl}, ${3:volatile uint8_t *ucsra}, ${4:volatile uint8_t *ucsrb}, ${5:volatile uint8_t *ucsrc}, ${6:volatile uint8_t *udr})","insertTextFormat":2,"kind":4,"label":" HardwareSerial(volatile uint8_t *ubrrh, volatile uint8_t *ubrrl, volatile uint8_t *ucsra, volatile uint8_t *ucsrb, volatile uint8_t *ucsrc, volatile uint8_t *udr)","score":6.6000003814697266,"sortText":"3f2cccccHardwareSerial","textEdit":{"newText":"HardwareSerial(${1:volatile uint8_t *ubrrh}, ${2:volatile uint8_t *ubrrl}, ${3:volatile uint8_t *ucsra}, ${4:volatile uint8_t *ucsrb}, ${5:volatile uint8_t *ucsrc}, ${6:volatile uint8_t *udr})","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"additionalTextEdits":[{"newText":"#include <math.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"double","documentation":{"kind":"markdown","value":"From `<math.h>`  \nThe hypot() function returns \\<em>sqrt(\\_\\_x\\*\\_\\_x + \\_\\_y\\*\\_\\_y)\\</em>. This is the length of the hypotenuse of a right triangle with sides of length \\\\a \\_\\_x and \\\\a \\_\\_y, or the distance of the point (\\\\a \\_\\_x, \\\\a \\_\\_y) from the origin. Using this function instead of the direct formula is wise, since the error is much smaller. No underflow with small \\\\a \\_\\_x and \\\\a \\_\\_y. No overflow if result is in range."},"filterText":"hypot","insertText":"hypot(${1:double __x}, ${2:double __y})","insertTextFormat":2,"kind":3,"label":"•hypot(double __x, double __y)","score":1.5037370920181274,"sortText":"403f858bhypot","textEdit":{"newText":"hypot(${1:double __x}, ${2:double __y})","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"HAVE_HWSERIAL0","insertText":"HAVE_HWSERIAL0","insertTextFormat":2,"kind":1,"label":"•HAVE_HWSERIAL0","score":1.0252752304077148,"sortText":"407cc3c8HAVE_HWSERIAL0","textEdit":{"newText":"HAVE_HWSERIAL0","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"filterText":"hypotf","insertText":"hypotf","insertTextFormat":2,"kind":1,"label":" hypotf","score":0.68351686000823975,"sortText":"40d1050ahypotf","textEdit":{"newText":"hypotf","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"HALF_PI","insertText":"HALF_PI","insertTextFormat":2,"kind":1,"label":" HALF_PI","score":0.57685983180999756,"sortText":"40ec52eaHALF_PI","textEdit":{"newText":"HALF_PI","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"filterText":"HFUSE_DEFAULT","insertText":"HFUSE_DEFAULT","insertTextFormat":2,"kind":1,"label":" HFUSE_DEFAULT","score":0.57685983180999756,"sortText":"40ec52eaHFUSE_DEFAULT","textEdit":{"newText":"HFUSE_DEFAULT","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"HIGH","insertText":"HIGH","insertTextFormat":2,"kind":1,"label":" HIGH","score":0.57685983180999756,"sortText":"40ec52eaHIGH","textEdit":{"newText":"HIGH","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"highByte","insertText":"highByte(${1:w})","insertTextFormat":2,"kind":1,"label":" highByte(w)","score":0.57685983180999756,"sortText":"40ec52eahighByte","textEdit":{"newText":"highByte(${1:w})","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"HEX","insertText":"HEX","insertTextFormat":2,"kind":1,"label":"•HEX","score":0.53754985332489014,"sortText":"40f66322HEX","textEdit":{"newText":"HEX","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"detail":"[12 overloads]","filterText":"StringSumHelper","insertText":"StringSumHelper($0)","insertTextFormat":2,"kind":4,"label":" StringSumHelper(…)","score":1,"sortText":"80000000StringSumHelper","textEdit":{"newText":"StringSumHelper($0)","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"kind":7,"label":" StringSumHelper","score":1.1000000238418579,"sortText":"80000000StringSumHelper","textEdit":{"newText":"StringSumHelper","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}},{"filterText":"__FlashStringHelper","insertText":"__FlashStringHelper","insertTextFormat":2,"kind":7,"label":" __FlashStringHelper","score":0.11000000685453415,"sortText":"80000000__FlashStringHelper","textEdit":{"newText":"__FlashStringHelper","range":{"end":{"character":18,"line":51},"start":{"character":17,"line":51}}}}]}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":51,"character":18},"end":{"line":51,"character":18}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 949

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ho'","range":{"end":{"character":19,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":67}}
>>>
Content-Length: 490

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":19},"end":{"line":51,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ho'"}]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":199,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":51,"character":19},"end":{"line":51,"character":19}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 950

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hou'","range":{"end":{"character":20,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":68}}
>>>
Content-Length: 491

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":20},"end":{"line":51,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'hou'"}]}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":200,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":201,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":51,"character":20},"end":{"line":51,"character":20}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":21},"context":{"triggerKind":1}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":202,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 951

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":69}}
>>>
Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'hour'"}]}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":203,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 2497

{"id":204,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"time1","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":52,"character":26}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":205,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":52,"character":26}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":206,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":23},"end":{"line":51,"character":23}},"context":{"diagnostics":[]}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":207,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":52,"character":24}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":208,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":23}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":209,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":20}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":210,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":20}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":211,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":21}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":212,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":10}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":213,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":48,"character":15}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":214,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":7}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":215,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":22,"character":10}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"id":216,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long baud`\n\n---\n```cpp\n// In HardwareSerial\npublic: void begin(unsigned long baud)\n```"},"range":{"end":{"character":14,"line":22},"start":{"character":9,"line":22}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":19,"character":11}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":217,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":11}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":218,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":6},"start":{"character":7,"line":6}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":12}},"context":{"diagnostics":[]}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":219,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":12}},"rangeLength":5,"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":8},"context":{"triggerKind":1}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 22793

{"id":220,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"kind":3,"label":" delay(unsigned long ms)","score":1.7308542728424072,"sortText":"4022735edelay","textEdit":{"newText":"delay(${1:unsigned long ms})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"filterText":"div","insertText":"div(${1:int __num}, ${2:int __denom})","insertTextFormat":2,"kind":3,"label":" div(int __num, int __denom)","score":1.5037370920181274,"sortText":"403f858bdiv","textEdit":{"newText":"div(${1:int __num}, ${2:int __denom})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"filterText":"div_t","insertText":"div_t","insertTextFormat":2,"kind":8,"label":" div_t","score":1.5037370920181274,"sortText":"403f858bdiv_t","textEdit":{"newText":"div_t","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostre","insertText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","insertTextFormat":2,"kind":3,"label":" dtostre(double __val, char *__s, unsigned char __prec, unsigned char __flags)","score":1.5037370920181274,"sortText":"403f858bdtostre","textEdit":{"newText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostrf","insertText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","insertTextFormat":2,"kind":3,"label":" dtostrf(double __val, signed char __width, unsigned char __prec, char *__s)","score":1.5037370920181274,"sortText":"403f858bdtostrf","textEdit":{"newText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"kind":3,"label":" digitalWrite(uint8_t pin, uint8_t val)","score":1.3503646850585938,"sortText":"40532740digitalWrite","textEdit":{"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_bit_mask_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_bit_mask_PGM","textEdit":{"newText":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_port_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_port_PGM","textEdit":{"newText":"digital_pin_to_port_PGM","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"kind":3,"label":" delayMicroseconds(unsigned int us)","score":1.2690916061401367,"sortText":"405d8e68delayMicroseconds","textEdit":{"newText":"delayMicroseconds(${1:unsigned int us})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"kind":3,"label":" detachInterrupt(uint8_t interruptNum)","score":1.2690916061401367,"sortText":"405d8e68detachInterrupt","textEdit":{"newText":"detachInterrupt(${1:uint8_t interruptNum})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":1.2690916061401367,"sortText":"405d8e68digitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_timer_PGM","score":1.2690916061401367,"sortText":"405d8e68digital_pin_to_timer_PGM","textEdit":{"newText":"digital_pin_to_timer_PGM","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_ALWAYS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_ALWAYS_SIGN","textEdit":{"newText":"DTOSTR_ALWAYS_SIGN","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_PLUS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_PLUS_SIGN","textEdit":{"newText":"DTOSTR_PLUS_SIGN","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":2,"kind":1,"label":" DTOSTR_UPPERCASE","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_UPPERCASE","textEdit":{"newText":"DTOSTR_UPPERCASE","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD0","insertText":"DD0","insertTextFormat":2,"kind":1,"label":" DD0","score":0.57685983180999756,"sortText":"40ec52eaDD0","textEdit":{"newText":"DD0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD1","insertText":"DD1","insertTextFormat":2,"kind":1,"label":" DD1","score":0.57685983180999756,"sortText":"40ec52eaDD1","textEdit":{"newText":"DD1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD2","insertText":"DD2","insertTextFormat":2,"kind":1,"label":" DD2","score":0.57685983180999756,"sortText":"40ec52eaDD2","textEdit":{"newText":"DD2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD3","insertText":"DD3","insertTextFormat":2,"kind":1,"label":" DD3","score":0.57685983180999756,"sortText":"40ec52eaDD3","textEdit":{"newText":"DD3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD4","insertText":"DD4","insertTextFormat":2,"kind":1,"label":" DD4","score":0.57685983180999756,"sortText":"40ec52eaDD4","textEdit":{"newText":"DD4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD5","insertText":"DD5","insertTextFormat":2,"kind":1,"label":" DD5","score":0.57685983180999756,"sortText":"40ec52eaDD5","textEdit":{"newText":"DD5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD6","insertText":"DD6","insertTextFormat":2,"kind":1,"label":" DD6","score":0.57685983180999756,"sortText":"40ec52eaDD6","textEdit":{"newText":"DD6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DD7","insertText":"DD7","insertTextFormat":2,"kind":1,"label":" DD7","score":0.57685983180999756,"sortText":"40ec52eaDD7","textEdit":{"newText":"DD7","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB0","insertText":"DDB0","insertTextFormat":2,"kind":1,"label":" DDB0","score":0.57685983180999756,"sortText":"40ec52eaDDB0","textEdit":{"newText":"DDB0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB1","insertText":"DDB1","insertTextFormat":2,"kind":1,"label":" DDB1","score":0.57685983180999756,"sortText":"40ec52eaDDB1","textEdit":{"newText":"DDB1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB2","insertText":"DDB2","insertTextFormat":2,"kind":1,"label":" DDB2","score":0.57685983180999756,"sortText":"40ec52eaDDB2","textEdit":{"newText":"DDB2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB3","insertText":"DDB3","insertTextFormat":2,"kind":1,"label":" DDB3","score":0.57685983180999756,"sortText":"40ec52eaDDB3","textEdit":{"newText":"DDB3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB4","insertText":"DDB4","insertTextFormat":2,"kind":1,"label":" DDB4","score":0.57685983180999756,"sortText":"40ec52eaDDB4","textEdit":{"newText":"DDB4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB5","insertText":"DDB5","insertTextFormat":2,"kind":1,"label":" DDB5","score":0.57685983180999756,"sortText":"40ec52eaDDB5","textEdit":{"newText":"DDB5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB6","insertText":"DDB6","insertTextFormat":2,"kind":1,"label":" DDB6","score":0.57685983180999756,"sortText":"40ec52eaDDB6","textEdit":{"newText":"DDB6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDB7","insertText":"DDB7","insertTextFormat":2,"kind":1,"label":" DDB7","score":0.57685983180999756,"sortText":"40ec52eaDDB7","textEdit":{"newText":"DDB7","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDC0","insertText":"DDC0","insertTextFormat":2,"kind":1,"label":" DDC0","score":0.57685983180999756,"sortText":"40ec52eaDDC0","textEdit":{"newText":"DDC0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDC1","insertText":"DDC1","insertTextFormat":2,"kind":1,"label":" DDC1","score":0.57685983180999756,"sortText":"40ec52eaDDC1","textEdit":{"newText":"DDC1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDC2","insertText":"DDC2","insertTextFormat":2,"kind":1,"label":" DDC2","score":0.57685983180999756,"sortText":"40ec52eaDDC2","textEdit":{"newText":"DDC2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDC3","insertText":"DDC3","insertTextFormat":2,"kind":1,"label":" DDC3","score":0.57685983180999756,"sortText":"40ec52eaDDC3","textEdit":{"newText":"DDC3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDC4","insertText":"DDC4","insertTextFormat":2,"kind":1,"label":" DDC4","score":0.57685983180999756,"sortText":"40ec52eaDDC4","textEdit":{"newText":"DDC4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDC5","insertText":"DDC5","insertTextFormat":2,"kind":1,"label":" DDC5","score":0.57685983180999756,"sortText":"40ec52eaDDC5","textEdit":{"newText":"DDC5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDC6","insertText":"DDC6","insertTextFormat":2,"kind":1,"label":" DDC6","score":0.57685983180999756,"sortText":"40ec52eaDDC6","textEdit":{"newText":"DDC6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD0","insertText":"DDD0","insertTextFormat":2,"kind":1,"label":" DDD0","score":0.57685983180999756,"sortText":"40ec52eaDDD0","textEdit":{"newText":"DDD0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD1","insertText":"DDD1","insertTextFormat":2,"kind":1,"label":" DDD1","score":0.57685983180999756,"sortText":"40ec52eaDDD1","textEdit":{"newText":"DDD1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD2","insertText":"DDD2","insertTextFormat":2,"kind":1,"label":" DDD2","score":0.57685983180999756,"sortText":"40ec52eaDDD2","textEdit":{"newText":"DDD2","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD3","insertText":"DDD3","insertTextFormat":2,"kind":1,"label":" DDD3","score":0.57685983180999756,"sortText":"40ec52eaDDD3","textEdit":{"newText":"DDD3","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD4","insertText":"DDD4","insertTextFormat":2,"kind":1,"label":" DDD4","score":0.57685983180999756,"sortText":"40ec52eaDDD4","textEdit":{"newText":"DDD4","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD5","insertText":"DDD5","insertTextFormat":2,"kind":1,"label":" DDD5","score":0.57685983180999756,"sortText":"40ec52eaDDD5","textEdit":{"newText":"DDD5","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD6","insertText":"DDD6","insertTextFormat":2,"kind":1,"label":" DDD6","score":0.57685983180999756,"sortText":"40ec52eaDDD6","textEdit":{"newText":"DDD6","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDD7","insertText":"DDD7","insertTextFormat":2,"kind":1,"label":" DDD7","score":0.57685983180999756,"sortText":"40ec52eaDDD7","textEdit":{"newText":"DDD7","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDRB","insertText":"DDRB","insertTextFormat":2,"kind":1,"label":" DDRB","score":0.57685983180999756,"sortText":"40ec52eaDDRB","textEdit":{"newText":"DDRB","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDRC","insertText":"DDRC","insertTextFormat":2,"kind":1,"label":" DDRC","score":0.57685983180999756,"sortText":"40ec52eaDDRC","textEdit":{"newText":"DDRC","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DDRD","insertText":"DDRD","insertTextFormat":2,"kind":1,"label":" DDRD","score":0.57685983180999756,"sortText":"40ec52eaDDRD","textEdit":{"newText":"DDRD","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"kind":1,"label":" DEFAULT","score":0.57685983180999756,"sortText":"40ec52eaDEFAULT","textEdit":{"newText":"DEFAULT","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"kind":1,"label":" DEG_TO_RAD","score":0.57685983180999756,"sortText":"40ec52eaDEG_TO_RAD","textEdit":{"newText":"DEG_TO_RAD","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":2,"kind":1,"label":" DIDR0","score":0.57685983180999756,"sortText":"40ec52eaDIDR0","textEdit":{"newText":"DIDR0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":2,"kind":1,"label":" DIDR1","score":0.57685983180999756,"sortText":"40ec52eaDIDR1","textEdit":{"newText":"DIDR1","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"kind":1,"label":" DISPLAY","score":0.57685983180999756,"sortText":"40ec52eaDISPLAY","textEdit":{"newText":"DISPLAY","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DOR0","insertText":"DOR0","insertTextFormat":2,"kind":1,"label":" DOR0","score":0.57685983180999756,"sortText":"40ec52eaDOR0","textEdit":{"newText":"DOR0","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"DORD","insertText":"DORD","insertTextFormat":2,"kind":1,"label":" DORD","score":0.57685983180999756,"sortText":"40ec52eaDORD","textEdit":{"newText":"DORD","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"kind":1,"label":" degrees(rad)","score":0.57685983180999756,"sortText":"40ec52eadegrees","textEdit":{"newText":"degrees(${1:rad})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToBitMask(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToBitMask","textEdit":{"newText":"digitalPinToBitMask(${1:P})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToPort(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToPort","textEdit":{"newText":"digitalPinToPort(${1:P})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToTimer(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToTimer","textEdit":{"newText":"digitalPinToTimer(${1:P})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"DEC","insertText":"DEC","insertTextFormat":2,"kind":1,"label":"•DEC","score":0.53754985332489014,"sortText":"40f66322DEC","textEdit":{"newText":"DEC","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinHasPWM(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinHasPWM","textEdit":{"newText":"digitalPinHasPWM(${1:p})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToInterrupt(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToInterrupt","textEdit":{"newText":"digitalPinToInterrupt(${1:p})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICR(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICR","textEdit":{"newText":"digitalPinToPCICR(${1:p})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICRbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICRbit","textEdit":{"newText":"digitalPinToPCICRbit(${1:p})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSK(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSK","textEdit":{"newText":"digitalPinToPCMSK(${1:p})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}},{"filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSKbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSKbit","textEdit":{"newText":"digitalPinToPCMSKbit(${1:p})","range":{"end":{"character":8,"line":6},"start":{"character":7,"line":6}}}}]}}Content-Length: 951

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":70}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1584

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'date'; did you mean 'dat'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'dat' declared here","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"message":"'dat' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'date'; did you mean 'dat'?","range":{"end":{"character":10,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'date'; did you mean 'dat'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'dat' declared here","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"message":"'dat' declared here\n\nSIM800L_ver1.ino.cpp:51:18: error: use of undeclared identifier 'date'; did you mean 'dat'?","range":{"end":{"character":10,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":72}}
>>>
Content-Length: 737

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":10}},"severity":3,"message":"'dat' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'date'; did you mean 'dat'?"},{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":10}},"severity":3,"message":"'dat' declared here\n\nSIM800L_ver1.ino.cpp:51:18: error: use of undeclared identifier 'date'; did you mean 'dat'?"}]}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":221,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 2495

{"id":222,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"dat","range":{"end":{"character":13,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"ă"}]},"jsonrpc":"2.0"}Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":10},"context":{"triggerKind":1}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":223,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 951

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'date'","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":76}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"text":"w"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":11},"context":{"triggerKind":1}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":224,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 2496

{"id":225,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"datw","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}Content-Length: 1592

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'date'; did you mean 'datw'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'datw' declared here","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"message":"'datw' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'date'; did you mean 'datw'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'date'; did you mean 'datw'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'datw' declared here","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"message":"'datw' declared here\n\nSIM800L_ver1.ino.cpp:51:18: error: use of undeclared identifier 'date'; did you mean 'datw'?","range":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":81}}
>>>
Content-Length: 741

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'datw' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'date'; did you mean 'datw'?"},{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'datw' declared here\n\nSIM800L_ver1.ino.cpp:51:18: error: use of undeclared identifier 'date'; did you mean 'datw'?"}]}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":226,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 2496

{"id":227,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"datw","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}
>>>
Content-Length: 741

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'datw' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'date'; did you mean 'datw'?"},{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":11}},"severity":3,"message":"'datw' declared here\n\nSIM800L_ver1.ino.cpp:51:18: error: use of undeclared identifier 'date'; did you mean 'datw'?"}]}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":228,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":11},"context":{"triggerKind":1}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 1584

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'date'; did you mean 'dat'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'dat' declared here","range":{"end":{"character":6,"line":48},"start":{"character":2,"line":48}},"severity":1,"source":"clang"},{"message":"'dat' declared here\n\nSIM800L_ver1.ino.cpp:49:3: error: use of undeclared identifier 'date'; did you mean 'dat'?","range":{"end":{"character":10,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'date'; did you mean 'dat'? (fix available)\n\nSIM800L_ver1.ino.cpp:7:8: note: 'dat' declared here","range":{"end":{"character":21,"line":50},"start":{"character":17,"line":50}},"severity":1,"source":"clang"},{"message":"'dat' declared here\n\nSIM800L_ver1.ino.cpp:51:18: error: use of undeclared identifier 'date'; did you mean 'dat'?","range":{"end":{"character":10,"line":6},"start":{"character":7,"line":6}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":82}}Content-Length: 69

{"id":229,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 2496

{"id":230,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":12,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":8,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":17,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":40},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":54},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":12,"line":41},"start":{"character":5,"line":41}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":59},"start":{"character":0,"line":55}},"selectionRange":{"end":{"character":9,"line":55},"start":{"character":5,"line":55}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":68},"start":{"character":0,"line":60}},"selectionRange":{"end":{"character":8,"line":60},"start":{"character":5,"line":60}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":69}},"selectionRange":{"end":{"character":17,"line":69},"start":{"character":5,"line":69}}}]}Content-Length: 581

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":6,"line":49},"start":{"character":2,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hour'","range":{"end":{"character":21,"line":51},"start":{"character":17,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":83}}
>>>
Content-Length: 584

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":84},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString date\n"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"context":{"diagnostics":[]}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":231,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 434

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":0,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":84}}Content-Length: 412

{"id":232,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":11,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":233,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":189},"jsonrpc":"2.0"}Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":234,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":234,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":0}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":235,"jsonrpc":"2.0","result":[{"range":{"end":{"character":12,"line":44},"start":{"character":6,"line":44}},"uri":"file:///C:/Users/Admin/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/WString.h"}]}
>>>
Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Admin/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/WString.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/Admin/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/WString.h"}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":0}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"id":236,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":6,"line":6},"start":{"character":0,"line":6}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":6,"character":0}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"id":237,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":6,"line":6},"start":{"character":0,"line":6}}}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":238,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"text":"\r\n"}]},"jsonrpc":"2.0"}Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"text":"String date=\"\";"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server925943751/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":7,"character":15},"end":{"line":7,"character":15}},"context":{"diagnostics":[]}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 101

{"error":{"code":-32602,"message":"onCodeAction called for non-added file"},"id":239,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":1456,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server516447807\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":16,"character":15},"end":{"line":16,"character":15}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":16,"character":11}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":8}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}Content-Length: 631

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":8,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":9,"line":16},"start":{"character":8,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":4}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":7}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}Content-Length: 631

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":7,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":8,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":5}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}
>>>
Content-Length: 723

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":5},"end":{"line":16,"character":7}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":8}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 556

{"id":7,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":8,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp":[{"newText":";","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":7}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 263

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":16,"character":8},"context":{"triggerKind":1}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 67

{"id":8,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":8}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 632

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":10,"line":16},"start":{"character":9,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":7}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":11,"line":16},"start":{"character":10,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":8}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":10}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":11,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":12,"line":16},"start":{"character":11,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":9}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}
>>>
Content-Length: 728

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":5},"end":{"line":16,"character":11}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":12}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 560

{"id":9,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":12,"line":16},"start":{"character":11,"line":16}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp":[{"newText":";","range":{"end":{"character":11,"line":16},"start":{"character":11,"line":16}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 635

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":11,"line":16},"start":{"character":10,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":10}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":10}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":16,"character":11},"context":{"triggerKind":1}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":10,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 635

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_decl_incomplete_type","message":"Variable has incomplete type 'void'","range":{"end":{"character":11,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":12,"line":16},"start":{"character":11,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":11}}
>>>
Content-Length: 729

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":5},"end":{"line":16,"character":11}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":12}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 561

{"id":11,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":12,"line":16},"start":{"character":11,"line":16}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp":[{"newText":";","range":{"end":{"character":11,"line":16},"start":{"character":11,"line":16}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}
>>>
Content-Length: 2962

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":12},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString date=\"\";\nString hour=\"\";\nString time=\"\";\n#line 8 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 30 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid GetTime();\n#line 44 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 49 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 58 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 8 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  GetTime();\n}\nvoid GetTime(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  date = time.substring(19,28);\n  hour = time.substring(30,35);\n  Serial.println(date);\n  Serial.println(hour);\n  //+CCLK: \"21/08/05,19:28:10+28\"\n\n}\nvoid loop()\n{\n  \n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":12}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},"context":{"diagnostics":[]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 2684

{"id":13,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":8,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":17,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":55},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":12,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":60},"start":{"character":0,"line":56}},"selectionRange":{"end":{"character":9,"line":56},"start":{"character":5,"line":56}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":69},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":8,"line":61},"start":{"character":5,"line":61}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":81},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":17,"line":70},"start":{"character":5,"line":70}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":24}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":14,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":28}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":15,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":49,"character":28}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":29}},"context":{"diagnostics":[]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":17,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":29,"line":49},"start":{"character":28,"line":49}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":29}},"rangeLength":1,"text":"7"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":13}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":29},"end":{"line":49,"character":29}},"context":{"diagnostics":[]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 2962

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":14},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString date=\"\";\nString hour=\"\";\nString time=\"\";\n#line 8 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 30 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid GetTime();\n#line 44 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 49 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 58 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 8 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  GetTime();\n}\nvoid GetTime(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  date = time.substring(19,27);\n  hour = time.substring(30,35);\n  Serial.println(date);\n  Serial.println(hour);\n  //+CCLK: \"21/08/05,19:28:10+28\"\n\n}\nvoid loop()\n{\n  \n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":26}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 403

{"id":19,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `substring`  \n\n---\n→ `class String`  \nParameters:  \n- `unsigned int beginIndex`\n- `unsigned int endIndex`\n\n---\n```cpp\n// In String\npublic: String substring(unsigned int beginIndex, unsigned int endIndex) const\n```"},"range":{"end":{"character":27,"line":50},"start":{"character":26,"line":50}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":20,"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":17},"jsonrpc":"2.0"}
<<<
Content-Length: 2684

{"id":20,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":8,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":17,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":55},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":12,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":60},"start":{"character":0,"line":56}},"selectionRange":{"end":{"character":9,"line":56},"start":{"character":5,"line":56}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":69},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":8,"line":61},"start":{"character":5,"line":61}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":81},"start":{"character":0,"line":70}},"selectionRange":{"end":{"character":17,"line":70},"start":{"character":5,"line":70}}}]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":26}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":21,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":23,"line":49},"start":{"character":14,"line":49}}},{"kind":1,"range":{"end":{"character":23,"line":50},"start":{"character":14,"line":50}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":26}},"context":{"diagnostics":[]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":22,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":26,"line":50},"start":{"character":25,"line":50}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":24},"end":{"line":50,"character":26}},"context":{"diagnostics":[]}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":23,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":26,"line":50},"start":{"character":24,"line":50}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":24}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":24,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":50,"character":24},"end":{"line":50,"character":26}},"rangeLength":2,"text":"2"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":15}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":25}},"context":{"diagnostics":[]}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":25,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":25}},"text":"8"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":16}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":26},"end":{"line":50,"character":26}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":28}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":27,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":28}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":28,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":28}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":28},"end":{"line":50,"character":28}},"context":{"diagnostics":[]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":28},"end":{"line":50,"character":29}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":31,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","selection":{"end":{"character":29,"line":50},"start":{"character":28,"line":50}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":28}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":32,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":50,"character":28},"end":{"line":50,"character":29}},"rangeLength":1,"text":"3"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":17}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":29},"end":{"line":50,"character":29}},"context":{"diagnostics":[]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":56,"character":4}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":34,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":53,"character":33}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":35,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":31}},"context":{"diagnostics":[]}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":31}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":18}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":2}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":3},"context":{"triggerKind":1}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 27071

{"id":37,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"SoftwareSerial","documentation":{"kind":"markdown","value":"SIM800L Tx & Rx is connected to Arduino #3 & #2"},"filterText":"mySerial","insertText":"mySerial","insertTextFormat":2,"kind":6,"label":" mySerial","score":15.605921745300293,"sortText":"3e864e25mySerial","textEdit":{"newText":"mySerial","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"additionalTextEdits":[{"newText":"#include <stdlib.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"void *","documentation":{"kind":"markdown","value":"From `<stdlib.h>`  \nThe malloc() function allocates \\\\c size bytes of memory.  \nIf malloc() fails, a NULL pointer is returned.  \nNote that malloc() does \\\\e not initialize the returned memory to zero bytes.  \nSee the chapter about \\\\ref malloc \"malloc() usage\" for implementation details."},"filterText":"malloc","insertText":"malloc(${1:size_t __size})","insertTextFormat":2,"kind":3,"label":"•malloc(size_t __size)","score":1.5037370920181274,"sortText":"403f858bmalloc","textEdit":{"newText":"malloc(${1:size_t __size})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memccpy(void \\*dest, const void \\*src, int val, size_t len)  \n\\\\brief Copy memory area.  \nThe memccpy() function copies no more than \\\\p len bytes from memory area \\\\p src to memory area \\\\p dest, stopping when the character \\\\p val is found.  \n\\\\returns The memccpy() function returns a pointer to the next character in \\\\p dest after \\\\p val, or NULL if \\\\p val was not found in the first  \n\\\\p len characters of \\\\p src."},"filterText":"memccpy","insertText":"memccpy(${1:void *}, ${2:const void *}, ${3:int}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memccpy(void *, const void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemccpy","textEdit":{"newText":"memccpy(${1:void *}, ${2:const void *}, ${3:int}, ${4:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memccpy_P (void \\*dest, const void \\*src, int val, size_t len)  \nThis function is similar to memccpy() except that \\\\p src is pointer to a string in program space."},"filterText":"memccpy_P","insertText":"memccpy_P(${1:void *}, ${2:const void *}, ${3:int __val}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memccpy_P(void *, const void *, int __val, size_t)","score":1.5037370920181274,"sortText":"403f858bmemccpy_P","textEdit":{"newText":"memccpy_P(${1:void *}, ${2:const void *}, ${3:int __val}, ${4:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"From `<string.h>`  \n\\\\ingroup avr_string  \n\\\\fn void \\*memchr(const void \\*src, int val, size_t len)  \n\\\\brief Scan memory for a character.  \nThe memchr() function scans the first len bytes of the memory area pointed to by src for the character val. The first byte to match val (interpreted as an unsigned character) stops the operation.  \n\\\\returns The memchr() function returns a pointer to the matching byte or NULL if the character does not occur in the given memory area."},"filterText":"memchr","insertText":"memchr(${1:const void *}, ${2:int}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memchr(const void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemchr","textEdit":{"newText":"memchr(${1:const void *}, ${2:int}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"const void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const void * memchr_P(const void \\*s, int val, size_t len)  \n\\\\brief Scan flash memory for a character.  \nThe memchr_P() function scans the first \\\\p len bytes of the flash memory area pointed to by \\\\p s for the character \\\\p val. The first byte to match \\\\p val (interpreted as an unsigned character) stops the operation.  \n\\\\return The memchr_P() function returns a pointer to the matching byte or \\\\c NULL if the character does not occur in the given memory area."},"filterText":"memchr_P","insertText":"memchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","insertTextFormat":2,"kind":3,"label":" memchr_P(const void *, int __val, size_t __len)","score":1.5037370920181274,"sortText":"403f858bmemchr_P","textEdit":{"newText":"memchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `<string.h>`  \n\\\\ingroup avr_string  \n\\\\fn int memcmp(const void \\*s1, const void \\*s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp() function compares the first len bytes of the memory areas s1 and s2. The comparision is performed using unsigned char operations.  \n\\\\returns The memcmp() function returns an integer less than, equal to, or greater than zero if the first len bytes of s1 is found, respectively, to be less than, to match, or be greater than the first len bytes of s2.  \n\\\\note Be sure to store the result in a 16 bit variable since you may get incorrect results if you use an unsigned char or char due to truncation.  \n\\\\warning This function is not -mint8 compatible, although if you only care about testing for equality, this function should be safe to use."},"filterText":"memcmp","insertText":"memcmp(${1:const void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp(const void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcmp","textEdit":{"newText":"memcmp(${1:const void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int memcmp_P(const void \\*s1, const void \\*s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp_P() function compares the first \\\\p len bytes of the memory areas \\\\p s1 and flash \\\\p s2. The comparision is performed using unsigned char operations.  \n\\\\returns The memcmp_P() function returns an integer less than, equal to, or greater than zero if the first \\\\p len bytes of \\\\p s1 is found,  \nrespectively, to be less than, to match, or be greater than the first  \n\\\\p len bytes of \\\\p s2."},"filterText":"memcmp_P","insertText":"memcmp_P(${1:const void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp_P(const void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcmp_P","textEdit":{"newText":"memcmp_P(${1:const void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int memcmp_PF(const void \\*s1, uint_farptr_t s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp_PF() function compares the first \\\\p len bytes of the memory areas \\\\p s1 and flash \\\\p s2. The comparision is performed using unsigned char operations. It is an equivalent of memcmp_P() function, except that it is capable working on all FLASH including the exteded area above 64kB.  \n\\\\returns The memcmp_PF() function returns an integer less than, equal to, or greater than zero if the first \\\\p len bytes of \\\\p s1 is found,  \nrespectively, to be less than, to match, or be greater than the first  \n\\\\p len bytes of \\\\p s2."},"filterText":"memcmp_PF","insertText":"memcmp_PF(${1:const void *}, ${2:uint_farptr_t}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp_PF(const void *, uint_farptr_t, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcmp_PF","textEdit":{"newText":"memcmp_PF(${1:const void *}, ${2:uint_farptr_t}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"From `<string.h>`  \n\\\\ingroup avr_string  \n\\\\fn void \\*memcpy(void \\*dest, const void \\*src, size_t len)  \n\\\\brief Copy a memory area.  \nThe memcpy() function copies len bytes from memory area src to memory area dest. The memory areas may not overlap. Use memmove() if the memory areas do overlap.  \n\\\\returns The memcpy() function returns a pointer to dest."},"filterText":"memcpy","insertText":"memcpy(${1:void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcpy(void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcpy","textEdit":{"newText":"memcpy(${1:void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memcpy_P(void \\*dest, const void \\*src, size_t n)  \nThe memcpy_P() function is similar to memcpy(), except the src string resides in program space.  \n\\\\returns The memcpy_P() function returns a pointer to dest."},"filterText":"memcpy_P","insertText":"memcpy_P(${1:void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcpy_P(void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemcpy_P","textEdit":{"newText":"memcpy_P(${1:void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memcpy_PF(void \\*dest, uint_farptr_t src, size_t n)  \n\\\\brief Copy a memory block from flash to SRAM  \nThe memcpy_PF() function is similar to memcpy(), except the data is copied from the program space and is addressed using a far pointer.  \n\\\\param dest A pointer to the destination buffer  \n\\\\param src A far pointer to the origin of data in flash memory  \n\\\\param n The number of bytes to be copied  \n\\\\returns The memcpy_PF() function returns a pointer to \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"memcpy_PF","insertText":"memcpy_PF(${1:void *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"kind":3,"label":" memcpy_PF(void *dest, uint_farptr_t src, size_t len)","score":1.5037370920181274,"sortText":"403f858bmemcpy_PF","textEdit":{"newText":"memcpy_PF(${1:void *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memmem(const void \\*s1, size_t len1, const void \\*s2, size_t len2)  \nThe memmem() function finds the start of the first occurrence of the substring \\\\p s2 of length \\\\p len2 in the memory area \\\\p s1 of length  \n\\\\p len1.  \n\\\\return The memmem() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p len2 is zero, the function returns \\\\p s1."},"filterText":"memmem","insertText":"memmem(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memmem(const void *, size_t, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemmem","textEdit":{"newText":"memmem(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn void \\*memmem_P(const void \\*s1, size_t len1, const void \\*s2, size_t len2)  \nThe memmem_P() function is similar to memmem() except that \\\\p s2 is pointer to a string in program space."},"filterText":"memmem_P","insertText":"memmem_P(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","insertTextFormat":2,"kind":3,"label":" memmem_P(const void *, size_t, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemmem_P","textEdit":{"newText":"memmem_P(${1:const void *}, ${2:size_t}, ${3:const void *}, ${4:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"From `<string.h>`  \n\\\\ingroup avr_string  \n\\\\fn void \\*memmove(void \\*dest, const void \\*src, size_t len)  \n\\\\brief Copy memory area.  \nThe memmove() function copies len bytes from memory area src to memory area dest. The memory areas may overlap.  \n\\\\returns The memmove() function returns a pointer to dest."},"filterText":"memmove","insertText":"memmove(${1:void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memmove(void *, const void *, size_t)","score":1.5037370920181274,"sortText":"403f858bmemmove","textEdit":{"newText":"memmove(${1:void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn void \\*memrchr(const void \\*src, int val, size_t len)  \nThe memrchr() function is like the memchr() function, except that it searches backwards from the end of the \\\\p len bytes pointed to by \\\\p src instead of forwards from the front. (Glibc, GNU extension.)  \n\\\\return The memrchr() function returns a pointer to the matching byte or \\\\c NULL if the character does not occur in the given memory area."},"filterText":"memrchr","insertText":"memrchr(${1:const void *}, ${2:int}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memrchr(const void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemrchr","textEdit":{"newText":"memrchr(${1:const void *}, ${2:int}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"const void *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const void +memrchr_P(const void \\*src, int val, size_t len)  \nThe memrchr_P() function is like the memchr_P() function, except that it searches backwards from the end of the \\\\p len bytes pointed to by \\\\p src instead of forwards from the front. (Glibc, GNU extension.)  \n\\\\return The memrchr_P() function returns a pointer to the matching byte or \\\\c NULL if the character does not occur in the given memory area."},"filterText":"memrchr_P","insertText":"memrchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","insertTextFormat":2,"kind":3,"label":" memrchr_P(const void *, int __val, size_t __len)","score":1.5037370920181274,"sortText":"403f858bmemrchr_P","textEdit":{"newText":"memrchr_P(${1:const void *}, ${2:int __val}, ${3:size_t __len})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"void *","documentation":{"kind":"markdown","value":"From `<string.h>`  \n\\\\ingroup avr_string  \n\\\\fn void \\*memset(void \\*dest, int val, size_t len)  \n\\\\brief Fill memory with a constant byte.  \nThe memset() function fills the first len bytes of the memory area pointed to by dest with the constant byte val.  \n\\\\returns The memset() function returns a pointer to the memory area dest."},"filterText":"memset","insertText":"memset(${1:void *}, ${2:int}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memset(void *, int, size_t)","score":1.5037370920181274,"sortText":"403f858bmemset","textEdit":{"newText":"memset(${1:void *}, ${2:int}, ${3:size_t})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"additionalTextEdits":[{"newText":"#include <math.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"double","documentation":{"kind":"markdown","value":"From `<math.h>`  \nThe modf() function breaks the argument \\\\a \\_\\_x into integral and fractional parts, each of which has the same sign as the argument.  \nIt stores the integral part as a double in the object pointed to by  \n\\\\a \\_\\_iptr.  \nThe modf() function returns the signed fractional part of \\\\a \\_\\_x.  \n\\\\note This implementation skips writing by zero pointer. However,  \nthe GCC 4.3 can replace this function with inline code that does not permit to use NULL address for the avoiding of storing."},"filterText":"modf","insertText":"modf(${1:double __x}, ${2:double *__iptr})","insertTextFormat":2,"kind":3,"label":"•modf(double __x, double *__iptr)","score":1.5037370920181274,"sortText":"403f858bmodf","textEdit":{"newText":"modf(${1:double __x}, ${2:double *__iptr})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"additionalTextEdits":[{"newText":"#include <math.h>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"float","documentation":{"kind":"markdown","value":"From `<math.h>`  \nAn alias for modf()."},"filterText":"modff","insertText":"modff(${1:float __x}, ${2:float *__iptr})","insertTextFormat":2,"kind":3,"label":"•modff(float __x, float *__iptr)","score":1.5037370920181274,"sortText":"403f858bmodff","textEdit":{"newText":"modff(${1:float __x}, ${2:float *__iptr})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"makeWord","insertText":"makeWord($0)","insertTextFormat":2,"kind":3,"label":" makeWord(…)","score":1.2690916061401367,"sortText":"405d8e68makeWord","textEdit":{"newText":"makeWord($0)","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"map","insertText":"map(${1:long}, ${2:long}, ${3:long}, ${4:long}, ${5:long})","insertTextFormat":2,"kind":3,"label":" map(long, long, long, long, long)","score":1.2690916061401367,"sortText":"405d8e68map","textEdit":{"newText":"map(${1:long}, ${2:long}, ${3:long}, ${4:long}, ${5:long})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"documentation":{"kind":"markdown","value":"Type whose alignment is supported in every context and is at least as great as that of any standard type not using alignment specifiers."},"filterText":"max_align_t","insertText":"max_align_t","insertTextFormat":2,"kind":8,"label":" max_align_t","score":1.2690916061401367,"sortText":"405d8e68max_align_t","textEdit":{"newText":"max_align_t","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"micros","insertText":"micros()","insertTextFormat":2,"kind":3,"label":" micros()","score":1.2690916061401367,"sortText":"405d8e68micros","textEdit":{"newText":"micros()","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"millis","insertText":"millis()","insertTextFormat":2,"kind":3,"label":" millis()","score":1.2690916061401367,"sortText":"405d8e68millis","textEdit":{"newText":"millis()","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"const uint8_t","filterText":"MISO","insertText":"MISO","insertTextFormat":2,"kind":6,"label":" MISO","score":1.0063711404800415,"sortText":"407f2f3bMISO","textEdit":{"newText":"MISO","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"detail":"const uint8_t","filterText":"MOSI","insertText":"MOSI","insertTextFormat":2,"kind":6,"label":" MOSI","score":1.0063711404800415,"sortText":"407f2f3bMOSI","textEdit":{"newText":"MOSI","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_1_PI","insertText":"M_1_PI","insertTextFormat":2,"kind":1,"label":" M_1_PI","score":0.68351686000823975,"sortText":"40d1050aM_1_PI","textEdit":{"newText":"M_1_PI","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_2_PI","insertText":"M_2_PI","insertTextFormat":2,"kind":1,"label":" M_2_PI","score":0.68351686000823975,"sortText":"40d1050aM_2_PI","textEdit":{"newText":"M_2_PI","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_2_SQRTPI","insertText":"M_2_SQRTPI","insertTextFormat":2,"kind":1,"label":" M_2_SQRTPI","score":0.68351686000823975,"sortText":"40d1050aM_2_SQRTPI","textEdit":{"newText":"M_2_SQRTPI","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_E","insertText":"M_E","insertTextFormat":2,"kind":1,"label":" M_E","score":0.68351686000823975,"sortText":"40d1050aM_E","textEdit":{"newText":"M_E","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_LN10","insertText":"M_LN10","insertTextFormat":2,"kind":1,"label":" M_LN10","score":0.68351686000823975,"sortText":"40d1050aM_LN10","textEdit":{"newText":"M_LN10","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_LN2","insertText":"M_LN2","insertTextFormat":2,"kind":1,"label":" M_LN2","score":0.68351686000823975,"sortText":"40d1050aM_LN2","textEdit":{"newText":"M_LN2","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_LOG10E","insertText":"M_LOG10E","insertTextFormat":2,"kind":1,"label":" M_LOG10E","score":0.68351686000823975,"sortText":"40d1050aM_LOG10E","textEdit":{"newText":"M_LOG10E","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_LOG2E","insertText":"M_LOG2E","insertTextFormat":2,"kind":1,"label":" M_LOG2E","score":0.68351686000823975,"sortText":"40d1050aM_LOG2E","textEdit":{"newText":"M_LOG2E","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_PI","insertText":"M_PI","insertTextFormat":2,"kind":1,"label":" M_PI","score":0.68351686000823975,"sortText":"40d1050aM_PI","textEdit":{"newText":"M_PI","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_PI_2","insertText":"M_PI_2","insertTextFormat":2,"kind":1,"label":" M_PI_2","score":0.68351686000823975,"sortText":"40d1050aM_PI_2","textEdit":{"newText":"M_PI_2","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_PI_4","insertText":"M_PI_4","insertTextFormat":2,"kind":1,"label":" M_PI_4","score":0.68351686000823975,"sortText":"40d1050aM_PI_4","textEdit":{"newText":"M_PI_4","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_SQRT1_2","insertText":"M_SQRT1_2","insertTextFormat":2,"kind":1,"label":" M_SQRT1_2","score":0.68351686000823975,"sortText":"40d1050aM_SQRT1_2","textEdit":{"newText":"M_SQRT1_2","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"M_SQRT2","insertText":"M_SQRT2","insertTextFormat":2,"kind":1,"label":" M_SQRT2","score":0.68351686000823975,"sortText":"40d1050aM_SQRT2","textEdit":{"newText":"M_SQRT2","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MCUCR","insertText":"MCUCR","insertTextFormat":2,"kind":1,"label":" MCUCR","score":0.57685983180999756,"sortText":"40ec52eaMCUCR","textEdit":{"newText":"MCUCR","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MCUSR","insertText":"MCUSR","insertTextFormat":2,"kind":1,"label":" MCUSR","score":0.57685983180999756,"sortText":"40ec52eaMCUSR","textEdit":{"newText":"MCUSR","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MPCM0","insertText":"MPCM0","insertTextFormat":2,"kind":1,"label":" MPCM0","score":0.57685983180999756,"sortText":"40ec52eaMPCM0","textEdit":{"newText":"MPCM0","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"MSBFIRST","insertText":"MSBFIRST","insertTextFormat":2,"kind":1,"label":" MSBFIRST","score":0.57685983180999756,"sortText":"40ec52eaMSBFIRST","textEdit":{"newText":"MSBFIRST","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MSTR","insertText":"MSTR","insertTextFormat":2,"kind":1,"label":" MSTR","score":0.57685983180999756,"sortText":"40ec52eaMSTR","textEdit":{"newText":"MSTR","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MUX0","insertText":"MUX0","insertTextFormat":2,"kind":1,"label":" MUX0","score":0.57685983180999756,"sortText":"40ec52eaMUX0","textEdit":{"newText":"MUX0","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MUX1","insertText":"MUX1","insertTextFormat":2,"kind":1,"label":" MUX1","score":0.57685983180999756,"sortText":"40ec52eaMUX1","textEdit":{"newText":"MUX1","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MUX2","insertText":"MUX2","insertTextFormat":2,"kind":1,"label":" MUX2","score":0.57685983180999756,"sortText":"40ec52eaMUX2","textEdit":{"newText":"MUX2","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"filterText":"MUX3","insertText":"MUX3","insertTextFormat":2,"kind":1,"label":" MUX3","score":0.57685983180999756,"sortText":"40ec52eaMUX3","textEdit":{"newText":"MUX3","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"max","insertText":"max(${1:a}, ${2:b})","insertTextFormat":2,"kind":1,"label":" max(a, b)","score":0.57685983180999756,"sortText":"40ec52eamax","textEdit":{"newText":"max(${1:a}, ${2:b})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"microsecondsToClockCycles","insertText":"microsecondsToClockCycles(${1:a})","insertTextFormat":2,"kind":1,"label":" microsecondsToClockCycles(a)","score":0.57685983180999756,"sortText":"40ec52eamicrosecondsToClockCycles","textEdit":{"newText":"microsecondsToClockCycles(${1:a})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"min","insertText":"min(${1:a}, ${2:b})","insertTextFormat":2,"kind":1,"label":" min(a, b)","score":0.57685983180999756,"sortText":"40ec52eamin","textEdit":{"newText":"min(${1:a}, ${2:b})","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}}}}]}}Content-Length: 379

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'm'","range":{"end":{"character":3,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":19}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":50,"character":3},"end":{"line":50,"character":3}},"text":"m"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":20}}
>>>
Content-Length: 472

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'mm'"}]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 368

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":4}},"rangeLength":2,"text":"memccpy(void *, const void *, int, size_t)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1186

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":16,"line":50},"start":{"character":15,"line":50}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":17,"line":50},"start":{"character":16,"line":50}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":23,"line":50},"start":{"character":18,"line":50}},"severity":1,"source":"clang"},{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":36,"line":50},"start":{"character":35,"line":50}},"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'size_t': expected expression","range":{"end":{"character":43,"line":50},"start":{"character":37,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":21}}
>>>
Content-Length: 692

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":15},"end":{"line":50,"character":16}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"},{"range":{"start":{"line":50,"character":16},"end":{"line":50,"character":17}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":44}},"rangeLength":42,"text":"mm"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":22}}
>>>
Content-Length: 472

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'mm'"}]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":4}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":23}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":2}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":3},"context":{"triggerKind":1}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 24683

{"id":41,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"String","filterText":"date","insertText":"date","insertTextFormat":2,"kind":6,"label":" date","score":13.502143859863281,"sortText":"3ea7f738date","textEdit":{"newText":"date","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"kind":15,"label":" decltype(expression)","score":8,"sortText":"3f000000decltype","textEdit":{"newText":"decltype(${0:expression})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"void","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete [] expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete [] ${0:expression}","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"void","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete ${0:expression}","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"double","insertText":"double","insertTextFormat":2,"kind":14,"label":" double","score":8,"sortText":"3f000000double","textEdit":{"newText":"double","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"dynamic_cast","insertText":"dynamic_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" dynamic_cast<type>(expression)","score":8,"sortText":"3f000000dynamic_cast","textEdit":{"newText":"dynamic_cast<${1:type}>(${0:expression})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"kind":3,"label":" delay(unsigned long ms)","score":6.6010479927062988,"sortText":"3f2cc437delay","textEdit":{"newText":"delay(${1:unsigned long ms})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_timer_PGM","score":1.9036375284194946,"sortText":"400c559bdigital_pin_to_timer_PGM","textEdit":{"newText":"digital_pin_to_timer_PGM","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"filterText":"div","insertText":"div(${1:int __num}, ${2:int __denom})","insertTextFormat":2,"kind":3,"label":" div(int __num, int __denom)","score":1.5037370920181274,"sortText":"403f858bdiv","textEdit":{"newText":"div(${1:int __num}, ${2:int __denom})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"filterText":"div_t","insertText":"div_t","insertTextFormat":2,"kind":8,"label":" div_t","score":1.5037370920181274,"sortText":"403f858bdiv_t","textEdit":{"newText":"div_t","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostre","insertText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","insertTextFormat":2,"kind":3,"label":" dtostre(double __val, char *__s, unsigned char __prec, unsigned char __flags)","score":1.5037370920181274,"sortText":"403f858bdtostre","textEdit":{"newText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostrf","insertText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","insertTextFormat":2,"kind":3,"label":" dtostrf(double __val, signed char __width, unsigned char __prec, char *__s)","score":1.5037370920181274,"sortText":"403f858bdtostrf","textEdit":{"newText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"kind":3,"label":" digitalWrite(uint8_t pin, uint8_t val)","score":1.3503646850585938,"sortText":"40532740digitalWrite","textEdit":{"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_bit_mask_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_bit_mask_PGM","textEdit":{"newText":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":2,"kind":6,"label":" digital_pin_to_port_PGM","score":1.2739236354827881,"sortText":"405cf012digital_pin_to_port_PGM","textEdit":{"newText":"digital_pin_to_port_PGM","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"kind":3,"label":" delayMicroseconds(unsigned int us)","score":1.2690916061401367,"sortText":"405d8e68delayMicroseconds","textEdit":{"newText":"delayMicroseconds(${1:unsigned int us})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"kind":3,"label":" detachInterrupt(uint8_t interruptNum)","score":1.2690916061401367,"sortText":"405d8e68detachInterrupt","textEdit":{"newText":"detachInterrupt(${1:uint8_t interruptNum})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":1.2690916061401367,"sortText":"405d8e68digitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToTimer(P)","score":0.86528974771499634,"sortText":"40a27c5fdigitalPinToTimer","textEdit":{"newText":"digitalPinToTimer(${1:P})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_ALWAYS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_ALWAYS_SIGN","textEdit":{"newText":"DTOSTR_ALWAYS_SIGN","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":2,"kind":1,"label":" DTOSTR_PLUS_SIGN","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_PLUS_SIGN","textEdit":{"newText":"DTOSTR_PLUS_SIGN","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":2,"kind":1,"label":" DTOSTR_UPPERCASE","score":0.68351686000823975,"sortText":"40d1050aDTOSTR_UPPERCASE","textEdit":{"newText":"DTOSTR_UPPERCASE","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD0","insertText":"DD0","insertTextFormat":2,"kind":1,"label":" DD0","score":0.57685983180999756,"sortText":"40ec52eaDD0","textEdit":{"newText":"DD0","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD1","insertText":"DD1","insertTextFormat":2,"kind":1,"label":" DD1","score":0.57685983180999756,"sortText":"40ec52eaDD1","textEdit":{"newText":"DD1","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD2","insertText":"DD2","insertTextFormat":2,"kind":1,"label":" DD2","score":0.57685983180999756,"sortText":"40ec52eaDD2","textEdit":{"newText":"DD2","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD3","insertText":"DD3","insertTextFormat":2,"kind":1,"label":" DD3","score":0.57685983180999756,"sortText":"40ec52eaDD3","textEdit":{"newText":"DD3","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD4","insertText":"DD4","insertTextFormat":2,"kind":1,"label":" DD4","score":0.57685983180999756,"sortText":"40ec52eaDD4","textEdit":{"newText":"DD4","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD5","insertText":"DD5","insertTextFormat":2,"kind":1,"label":" DD5","score":0.57685983180999756,"sortText":"40ec52eaDD5","textEdit":{"newText":"DD5","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD6","insertText":"DD6","insertTextFormat":2,"kind":1,"label":" DD6","score":0.57685983180999756,"sortText":"40ec52eaDD6","textEdit":{"newText":"DD6","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD7","insertText":"DD7","insertTextFormat":2,"kind":1,"label":" DD7","score":0.57685983180999756,"sortText":"40ec52eaDD7","textEdit":{"newText":"DD7","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB0","insertText":"DDB0","insertTextFormat":2,"kind":1,"label":" DDB0","score":0.57685983180999756,"sortText":"40ec52eaDDB0","textEdit":{"newText":"DDB0","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB1","insertText":"DDB1","insertTextFormat":2,"kind":1,"label":" DDB1","score":0.57685983180999756,"sortText":"40ec52eaDDB1","textEdit":{"newText":"DDB1","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB2","insertText":"DDB2","insertTextFormat":2,"kind":1,"label":" DDB2","score":0.57685983180999756,"sortText":"40ec52eaDDB2","textEdit":{"newText":"DDB2","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB3","insertText":"DDB3","insertTextFormat":2,"kind":1,"label":" DDB3","score":0.57685983180999756,"sortText":"40ec52eaDDB3","textEdit":{"newText":"DDB3","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB4","insertText":"DDB4","insertTextFormat":2,"kind":1,"label":" DDB4","score":0.57685983180999756,"sortText":"40ec52eaDDB4","textEdit":{"newText":"DDB4","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB5","insertText":"DDB5","insertTextFormat":2,"kind":1,"label":" DDB5","score":0.57685983180999756,"sortText":"40ec52eaDDB5","textEdit":{"newText":"DDB5","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB6","insertText":"DDB6","insertTextFormat":2,"kind":1,"label":" DDB6","score":0.57685983180999756,"sortText":"40ec52eaDDB6","textEdit":{"newText":"DDB6","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB7","insertText":"DDB7","insertTextFormat":2,"kind":1,"label":" DDB7","score":0.57685983180999756,"sortText":"40ec52eaDDB7","textEdit":{"newText":"DDB7","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC0","insertText":"DDC0","insertTextFormat":2,"kind":1,"label":" DDC0","score":0.57685983180999756,"sortText":"40ec52eaDDC0","textEdit":{"newText":"DDC0","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC1","insertText":"DDC1","insertTextFormat":2,"kind":1,"label":" DDC1","score":0.57685983180999756,"sortText":"40ec52eaDDC1","textEdit":{"newText":"DDC1","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC2","insertText":"DDC2","insertTextFormat":2,"kind":1,"label":" DDC2","score":0.57685983180999756,"sortText":"40ec52eaDDC2","textEdit":{"newText":"DDC2","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC3","insertText":"DDC3","insertTextFormat":2,"kind":1,"label":" DDC3","score":0.57685983180999756,"sortText":"40ec52eaDDC3","textEdit":{"newText":"DDC3","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC4","insertText":"DDC4","insertTextFormat":2,"kind":1,"label":" DDC4","score":0.57685983180999756,"sortText":"40ec52eaDDC4","textEdit":{"newText":"DDC4","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC5","insertText":"DDC5","insertTextFormat":2,"kind":1,"label":" DDC5","score":0.57685983180999756,"sortText":"40ec52eaDDC5","textEdit":{"newText":"DDC5","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC6","insertText":"DDC6","insertTextFormat":2,"kind":1,"label":" DDC6","score":0.57685983180999756,"sortText":"40ec52eaDDC6","textEdit":{"newText":"DDC6","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD0","insertText":"DDD0","insertTextFormat":2,"kind":1,"label":" DDD0","score":0.57685983180999756,"sortText":"40ec52eaDDD0","textEdit":{"newText":"DDD0","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD1","insertText":"DDD1","insertTextFormat":2,"kind":1,"label":" DDD1","score":0.57685983180999756,"sortText":"40ec52eaDDD1","textEdit":{"newText":"DDD1","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD2","insertText":"DDD2","insertTextFormat":2,"kind":1,"label":" DDD2","score":0.57685983180999756,"sortText":"40ec52eaDDD2","textEdit":{"newText":"DDD2","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD3","insertText":"DDD3","insertTextFormat":2,"kind":1,"label":" DDD3","score":0.57685983180999756,"sortText":"40ec52eaDDD3","textEdit":{"newText":"DDD3","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD4","insertText":"DDD4","insertTextFormat":2,"kind":1,"label":" DDD4","score":0.57685983180999756,"sortText":"40ec52eaDDD4","textEdit":{"newText":"DDD4","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD5","insertText":"DDD5","insertTextFormat":2,"kind":1,"label":" DDD5","score":0.57685983180999756,"sortText":"40ec52eaDDD5","textEdit":{"newText":"DDD5","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD6","insertText":"DDD6","insertTextFormat":2,"kind":1,"label":" DDD6","score":0.57685983180999756,"sortText":"40ec52eaDDD6","textEdit":{"newText":"DDD6","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD7","insertText":"DDD7","insertTextFormat":2,"kind":1,"label":" DDD7","score":0.57685983180999756,"sortText":"40ec52eaDDD7","textEdit":{"newText":"DDD7","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDRB","insertText":"DDRB","insertTextFormat":2,"kind":1,"label":" DDRB","score":0.57685983180999756,"sortText":"40ec52eaDDRB","textEdit":{"newText":"DDRB","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDRC","insertText":"DDRC","insertTextFormat":2,"kind":1,"label":" DDRC","score":0.57685983180999756,"sortText":"40ec52eaDDRC","textEdit":{"newText":"DDRC","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDRD","insertText":"DDRD","insertTextFormat":2,"kind":1,"label":" DDRD","score":0.57685983180999756,"sortText":"40ec52eaDDRD","textEdit":{"newText":"DDRD","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"kind":1,"label":" DEFAULT","score":0.57685983180999756,"sortText":"40ec52eaDEFAULT","textEdit":{"newText":"DEFAULT","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"kind":1,"label":" DEG_TO_RAD","score":0.57685983180999756,"sortText":"40ec52eaDEG_TO_RAD","textEdit":{"newText":"DEG_TO_RAD","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":2,"kind":1,"label":" DIDR0","score":0.57685983180999756,"sortText":"40ec52eaDIDR0","textEdit":{"newText":"DIDR0","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":2,"kind":1,"label":" DIDR1","score":0.57685983180999756,"sortText":"40ec52eaDIDR1","textEdit":{"newText":"DIDR1","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"kind":1,"label":" DISPLAY","score":0.57685983180999756,"sortText":"40ec52eaDISPLAY","textEdit":{"newText":"DISPLAY","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DOR0","insertText":"DOR0","insertTextFormat":2,"kind":1,"label":" DOR0","score":0.57685983180999756,"sortText":"40ec52eaDOR0","textEdit":{"newText":"DOR0","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DORD","insertText":"DORD","insertTextFormat":2,"kind":1,"label":" DORD","score":0.57685983180999756,"sortText":"40ec52eaDORD","textEdit":{"newText":"DORD","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"kind":1,"label":" degrees(rad)","score":0.57685983180999756,"sortText":"40ec52eadegrees","textEdit":{"newText":"degrees(${1:rad})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToBitMask(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToBitMask","textEdit":{"newText":"digitalPinToBitMask(${1:P})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToPort(P)","score":0.57685983180999756,"sortText":"40ec52eadigitalPinToPort","textEdit":{"newText":"digitalPinToPort(${1:P})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"DEC","insertText":"DEC","insertTextFormat":2,"kind":1,"label":"•DEC","score":0.53754985332489014,"sortText":"40f66322DEC","textEdit":{"newText":"DEC","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinHasPWM(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinHasPWM","textEdit":{"newText":"digitalPinHasPWM(${1:p})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToInterrupt(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToInterrupt","textEdit":{"newText":"digitalPinToInterrupt(${1:p})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICR(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICR","textEdit":{"newText":"digitalPinToPCICR(${1:p})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICRbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCICRbit","textEdit":{"newText":"digitalPinToPCICRbit(${1:p})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSK(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSK","textEdit":{"newText":"digitalPinToPCMSK(${1:p})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSKbit(p)","score":0.45744141936302185,"sortText":"4115ca3ddigitalPinToPCMSKbit","textEdit":{"newText":"digitalPinToPCMSKbit(${1:p})","range":{"end":{"character":3,"line":51},"start":{"character":2,"line":51}}}}]}}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":6,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":24}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":2}},"text":"đ"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":3},"context":{"triggerKind":1}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 67

{"id":42,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[]}}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":6,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":26}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":2}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":51,"character":3},"end":{"line":51,"character":3}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":4},"context":{"triggerKind":1}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 8459

{"id":43,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"DD0","insertText":"DD0","insertTextFormat":2,"kind":1,"label":" DD0","score":0.57685983180999756,"sortText":"40ec52eaDD0","textEdit":{"newText":"DD0","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD1","insertText":"DD1","insertTextFormat":2,"kind":1,"label":" DD1","score":0.57685983180999756,"sortText":"40ec52eaDD1","textEdit":{"newText":"DD1","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD2","insertText":"DD2","insertTextFormat":2,"kind":1,"label":" DD2","score":0.57685983180999756,"sortText":"40ec52eaDD2","textEdit":{"newText":"DD2","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD3","insertText":"DD3","insertTextFormat":2,"kind":1,"label":" DD3","score":0.57685983180999756,"sortText":"40ec52eaDD3","textEdit":{"newText":"DD3","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD4","insertText":"DD4","insertTextFormat":2,"kind":1,"label":" DD4","score":0.57685983180999756,"sortText":"40ec52eaDD4","textEdit":{"newText":"DD4","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD5","insertText":"DD5","insertTextFormat":2,"kind":1,"label":" DD5","score":0.57685983180999756,"sortText":"40ec52eaDD5","textEdit":{"newText":"DD5","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD6","insertText":"DD6","insertTextFormat":2,"kind":1,"label":" DD6","score":0.57685983180999756,"sortText":"40ec52eaDD6","textEdit":{"newText":"DD6","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DD7","insertText":"DD7","insertTextFormat":2,"kind":1,"label":" DD7","score":0.57685983180999756,"sortText":"40ec52eaDD7","textEdit":{"newText":"DD7","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB0","insertText":"DDB0","insertTextFormat":2,"kind":1,"label":" DDB0","score":0.57685983180999756,"sortText":"40fec88dDDB0","textEdit":{"newText":"DDB0","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB1","insertText":"DDB1","insertTextFormat":2,"kind":1,"label":" DDB1","score":0.57685983180999756,"sortText":"40fec88dDDB1","textEdit":{"newText":"DDB1","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB2","insertText":"DDB2","insertTextFormat":2,"kind":1,"label":" DDB2","score":0.57685983180999756,"sortText":"40fec88dDDB2","textEdit":{"newText":"DDB2","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB3","insertText":"DDB3","insertTextFormat":2,"kind":1,"label":" DDB3","score":0.57685983180999756,"sortText":"40fec88dDDB3","textEdit":{"newText":"DDB3","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB4","insertText":"DDB4","insertTextFormat":2,"kind":1,"label":" DDB4","score":0.57685983180999756,"sortText":"40fec88dDDB4","textEdit":{"newText":"DDB4","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB5","insertText":"DDB5","insertTextFormat":2,"kind":1,"label":" DDB5","score":0.57685983180999756,"sortText":"40fec88dDDB5","textEdit":{"newText":"DDB5","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB6","insertText":"DDB6","insertTextFormat":2,"kind":1,"label":" DDB6","score":0.57685983180999756,"sortText":"40fec88dDDB6","textEdit":{"newText":"DDB6","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDB7","insertText":"DDB7","insertTextFormat":2,"kind":1,"label":" DDB7","score":0.57685983180999756,"sortText":"40fec88dDDB7","textEdit":{"newText":"DDB7","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC0","insertText":"DDC0","insertTextFormat":2,"kind":1,"label":" DDC0","score":0.57685983180999756,"sortText":"40fec88dDDC0","textEdit":{"newText":"DDC0","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC1","insertText":"DDC1","insertTextFormat":2,"kind":1,"label":" DDC1","score":0.57685983180999756,"sortText":"40fec88dDDC1","textEdit":{"newText":"DDC1","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC2","insertText":"DDC2","insertTextFormat":2,"kind":1,"label":" DDC2","score":0.57685983180999756,"sortText":"40fec88dDDC2","textEdit":{"newText":"DDC2","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC3","insertText":"DDC3","insertTextFormat":2,"kind":1,"label":" DDC3","score":0.57685983180999756,"sortText":"40fec88dDDC3","textEdit":{"newText":"DDC3","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC4","insertText":"DDC4","insertTextFormat":2,"kind":1,"label":" DDC4","score":0.57685983180999756,"sortText":"40fec88dDDC4","textEdit":{"newText":"DDC4","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC5","insertText":"DDC5","insertTextFormat":2,"kind":1,"label":" DDC5","score":0.57685983180999756,"sortText":"40fec88dDDC5","textEdit":{"newText":"DDC5","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDC6","insertText":"DDC6","insertTextFormat":2,"kind":1,"label":" DDC6","score":0.57685983180999756,"sortText":"40fec88dDDC6","textEdit":{"newText":"DDC6","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD0","insertText":"DDD0","insertTextFormat":2,"kind":1,"label":" DDD0","score":0.57685983180999756,"sortText":"40fec88dDDD0","textEdit":{"newText":"DDD0","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD1","insertText":"DDD1","insertTextFormat":2,"kind":1,"label":" DDD1","score":0.57685983180999756,"sortText":"40fec88dDDD1","textEdit":{"newText":"DDD1","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD2","insertText":"DDD2","insertTextFormat":2,"kind":1,"label":" DDD2","score":0.57685983180999756,"sortText":"40fec88dDDD2","textEdit":{"newText":"DDD2","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD3","insertText":"DDD3","insertTextFormat":2,"kind":1,"label":" DDD3","score":0.57685983180999756,"sortText":"40fec88dDDD3","textEdit":{"newText":"DDD3","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD4","insertText":"DDD4","insertTextFormat":2,"kind":1,"label":" DDD4","score":0.57685983180999756,"sortText":"40fec88dDDD4","textEdit":{"newText":"DDD4","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD5","insertText":"DDD5","insertTextFormat":2,"kind":1,"label":" DDD5","score":0.57685983180999756,"sortText":"40fec88dDDD5","textEdit":{"newText":"DDD5","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD6","insertText":"DDD6","insertTextFormat":2,"kind":1,"label":" DDD6","score":0.57685983180999756,"sortText":"40fec88dDDD6","textEdit":{"newText":"DDD6","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDD7","insertText":"DDD7","insertTextFormat":2,"kind":1,"label":" DDD7","score":0.57685983180999756,"sortText":"40fec88dDDD7","textEdit":{"newText":"DDD7","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDRB","insertText":"DDRB","insertTextFormat":2,"kind":1,"label":" DDRB","score":0.57685983180999756,"sortText":"40fec88dDDRB","textEdit":{"newText":"DDRB","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDRC","insertText":"DDRC","insertTextFormat":2,"kind":1,"label":" DDRC","score":0.57685983180999756,"sortText":"40fec88dDDRC","textEdit":{"newText":"DDRC","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}},{"filterText":"DDRD","insertText":"DDRD","insertTextFormat":2,"kind":1,"label":" DDRD","score":0.57685983180999756,"sortText":"40fec88dDDRD","textEdit":{"newText":"DDRD","range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}}]}}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":6,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":29}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"context":{"diagnostics":[]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":4}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":45,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"context":{"diagnostics":[]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":6,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":30}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":2}},"text":"y"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":52,"character":3},"context":{"triggerKind":1}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":47,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":3,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":31}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"text":"y"}]},"jsonrpc":"2.0"}Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":52,"character":4},"context":{"triggerKind":1}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 68

{"id":48,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":32}}
>>>
Content-Length: 509

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":4}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 538

{"id":49,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp":[{"newText":";","range":{"end":{"character":4,"line":51},"start":{"character":4,"line":51}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":33}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":5}},"text":"-"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":34}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":52,"character":6},"end":{"line":52,"character":6}},"context":{"diagnostics":[]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":35}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":5}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":36}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":52,"character":6},"end":{"line":52,"character":6}},"context":{"diagnostics":[]}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":51,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":51,"character":4}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":52,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":37}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":5}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yy'","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":38}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":51,"character":6},"end":{"line":51,"character":6}},"context":{"diagnostics":[]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 2684

{"id":55,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":8,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":17,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"GetTime","range":{"end":{"character":1,"line":58},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":12,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":59}},"selectionRange":{"end":{"character":9,"line":59},"start":{"character":5,"line":59}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":84},"start":{"character":0,"line":73}},"selectionRange":{"end":{"character":17,"line":73},"start":{"character":5,"line":73}}}]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":50,"character":4}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":56,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":4,"line":51},"start":{"character":2,"line":51}}}]}
>>>
Content-Length: 472

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'mm'"}]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":4}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'mm'","range":{"end":{"character":4,"line":50},"start":{"character":2,"line":50}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yy'","range":{"end":{"character":4,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":39}}
>>>
Content-Length: 1864

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":40},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n#include \u003cString.h\u003e\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\nString date=\"\";\nString hour=\"\";\nString time=\"\";\n#line 8 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 30 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid GetTime();\n#line 8 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  // sms();\n  GetTime();\n}\nvoid GetTime(){\n  mySerial.println(\"AT+CCLK?\"); //nhận ngày giờ\n  delay(100);\n  while(mySerial.available()){\n    char ch=mySerial.read();\n    time+=ch;\n  }\n  date = time.substring(19,27);\n  mm \n  dd =\n  yy =\n"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":44,"character":5},"end":{"line":44,"character":5}},"text":"="}]},"jsonrpc":"2.0"}Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":44,"character":6},"end":{"line":44,"character":6}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 2077

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":32},"start":{"character":2,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mm'","range":{"end":{"character":4,"line":44},"start":{"character":2,"line":44}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":0,"line":47},"start":{"character":0,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yy'","range":{"end":{"character":4,"line":46},"start":{"character":2,"line":46}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'dd'","range":{"end":{"character":4,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:37:15: note: to match this '{'","range":{"end":{"character":0,"line":47},"start":{"character":0,"line":47}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:48:1: error: expected '}'","range":{"end":{"character":15,"line":36},"start":{"character":14,"line":36}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":41}}Content-Length: 1543

{"id":59,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":35},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"GetTime","range":{"end":{"character":6,"line":46},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":12,"line":36},"start":{"character":5,"line":36}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":6}},"context":{"diagnostics":[]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":54},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":61,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 1543

{"id":61,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":35},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"GetTime","range":{"end":{"character":6,"line":46},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":12,"line":36},"start":{"character":5,"line":36}}}]}Content-Length: 1543

{"id":62,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":35},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"GetTime","range":{"end":{"character":6,"line":46},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":12,"line":36},"start":{"character":5,"line":36}}}]}
>>>
Content-Length: 485

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dd'"}]}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":63,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 1543

{"id":64,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":35},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"GetTime","range":{"end":{"character":6,"line":46},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":12,"line":36},"start":{"character":5,"line":36}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":45,"character":2}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":65,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 485

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dd'"}]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 485

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dd'"}]}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":67,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 418

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":6}},"rangeLength":4,"text":""},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":2}},"text":"dd ="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 2077

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":32},"start":{"character":2,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'dd'","range":{"end":{"character":4,"line":44},"start":{"character":2,"line":44}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":0,"line":47},"start":{"character":0,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yy'","range":{"end":{"character":4,"line":46},"start":{"character":2,"line":46}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mm'","range":{"end":{"character":8,"line":44},"start":{"character":6,"line":44}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:37:15: note: to match this '{'","range":{"end":{"character":0,"line":47},"start":{"character":0,"line":47}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:48:1: error: expected '}'","range":{"end":{"character":15,"line":36},"start":{"character":14,"line":36}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":43}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":44,"character":1}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":68,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 1543

{"id":69,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":35},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"GetTime","range":{"end":{"character":6,"line":46},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":12,"line":36},"start":{"character":5,"line":36}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":44,"character":5}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":70,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 667

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dd'"},{"range":{"start":{"line":44,"character":6},"end":{"line":44,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mm'"}]}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":71,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":44,"character":7}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":72,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 485

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":44,"character":6},"end":{"line":44,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":44,"character":6},"end":{"line":44,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mm'"}]}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":73,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 485

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":44,"character":6},"end":{"line":44,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":44,"character":6},"end":{"line":44,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mm'"}]}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":74,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":44,"character":6},"end":{"line":44,"character":6}},"text":"\r\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 2077

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":32},"start":{"character":2,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'dd'","range":{"end":{"character":4,"line":44},"start":{"character":2,"line":44}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":0,"line":48},"start":{"character":0,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yy'","range":{"end":{"character":4,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mm'","range":{"end":{"character":4,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:37:15: note: to match this '{'","range":{"end":{"character":0,"line":48},"start":{"character":0,"line":48}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:49:1: error: expected '}'","range":{"end":{"character":15,"line":36},"start":{"character":14,"line":36}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":44}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":2}},"context":{"diagnostics":[]}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":75,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 1543

{"id":76,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":13,"name":"date","range":{"end":{"character":14,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":7,"line":6}}},{"kind":13,"name":"hour","range":{"end":{"character":14,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":7,"line":7}}},{"kind":13,"name":"time","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":7,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"GetTime","range":{"end":{"character":14,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":12,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":35},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"GetTime","range":{"end":{"character":6,"line":47},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":12,"line":36},"start":{"character":5,"line":36}}}]}
>>>
Content-Length: 485

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'yy'"}]}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":77,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 2077

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":26},"start":{"character":2,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":28},"start":{"character":2,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":30},"start":{"character":2,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'updateSerial'","range":{"end":{"character":14,"line":32},"start":{"character":2,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'dd'","range":{"end":{"character":4,"line":44},"start":{"character":2,"line":44}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":0,"line":48},"start":{"character":0,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yy'","range":{"end":{"character":4,"line":47},"start":{"character":2,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mm'","range":{"end":{"character":4,"line":45},"start":{"character":2,"line":45}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nSIM800L_ver1.ino.cpp:37:15: note: to match this '{'","range":{"end":{"character":0,"line":48},"start":{"character":0,"line":48}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nSIM800L_ver1.ino.cpp:49:1: error: expected '}'","range":{"end":{"character":15,"line":36},"start":{"character":14,"line":36}},"severity":3}],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":45}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":45,"character":6},"end":{"line":46,"character":0}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server516447807/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":46,"character":3}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 102

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":78,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":1412,"rootPath":"C:\\Users\\Admin\\AppData\\Local\\Temp\\arduino-language-server218052903\\sketch","rootUri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2426

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/28","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/28","percentage":3.5714285714285716}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp","version":1}}Content-Length: 1741

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":43,"character":29}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":2,"jsonrpc":"2.0","result":null}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/28","percentage":7.1428571428571432}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/28","percentage":10.714285714285714}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/28","percentage":14.285714285714286}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/28","percentage":17.857142857142858}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/28","percentage":21.428571428571427}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":21,"character":31}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":3,"jsonrpc":"2.0","result":null}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/28","percentage":25}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/28","percentage":28.571428571428573}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/28","percentage":32.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/28","percentage":35.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/28","percentage":39.285714285714285}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/28","percentage":42.857142857142854}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/28","percentage":46.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/28","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/28","percentage":53.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/28","percentage":57.142857142857146}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/28","percentage":60.714285714285715}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/28","percentage":64.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/28","percentage":67.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/28","percentage":71.428571428571431}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/28","percentage":75}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/28","percentage":78.571428571428569}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/28","percentage":82.142857142857139}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/28","percentage":85.714285714285708}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/28","percentage":89.285714285714292}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/28","percentage":92.857142857142861}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/28","percentage":96.428571428571431}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":2}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `sms`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid sms()\n```"},"range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}}}}
>>>
Content-Length: 242

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"},"position":{"line":35,"character":2}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":1,"range":{"end":{"character":5,"line":35},"start":{"character":2,"line":35}}},{"kind":1,"range":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":2}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":35,"character":2},"end":{"line":35,"character":2}},"text":"/"}]},"jsonrpc":"2.0"}Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":35,"character":3},"end":{"line":35,"character":3}},"text":"/"}]},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"},"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":4}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp","version":3}}
>>>
Content-Length: 2432

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\n#include \u003cSoftwareSerial.h\u003e\n\n//Create software serial object to communicate with SIM800L\nSoftwareSerial mySerial(3, 2); //SIM800L Tx \u0026 Rx is connected to Arduino #3 \u0026 #2\n\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup();\n#line 28 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid loop();\n#line 32 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid sms();\n#line 41 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid updateSerial();\n#line 6 \"D:\\\\Desktop\\\\MyPhone\\\\CODE\\\\SIM800L_ver1\\\\SIM800L_ver1.ino\"\nvoid setup()\n{\n  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)\n  Serial.begin(9600);\n  \n  //Begin serial communication with Arduino and SIM800L\n  mySerial.begin(9600);\n\n  Serial.println(\"Initializing...\");\n  delay(1000);\n\n  mySerial.println(\"AT\"); //Once the handshake test is successful, it will back to OK\n  updateSerial();\n  mySerial.println(\"AT+CSQ\"); //Signal quality test, value range is 0-31 , 31 is the best\n  updateSerial();\n  mySerial.println(\"AT+CCID\"); //Read SIM information to confirm whether the SIM is plugged\n  updateSerial();\n  mySerial.println(\"AT+CREG?\"); //Check whether it has registered in the network\n  updateSerial();\n  //sms();\n}\n\nvoid loop()\n{\n  updateSerial();\n}\nvoid sms(){\n  mySerial.println(\"AT+CMGF=1\"); // Configuring TEXT mode\n  updateSerial();\n  mySerial.println(\"AT+CMGS=\\\"+84868242509\\\"\");//change ZZ with country code and xxxxxxxxxxx with phone number to sms\n  updateSerial();\n  mySerial.print(\"This is Message of TrunTrun\"); //text content\n  updateSerial();\n  mySerial.write(26);\n}\nvoid updateSerial()\n{\n  delay(500);\n  while (Serial.available()) \n  {\n    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port\n  }\n  while(mySerial.available()) \n  {\n    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 58

{"method":"shutdown","params":null,"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":8,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/Admin/AppData/Local/Temp/arduino-language-server218052903/sketch/SIM800L_ver1.ino.cpp"}},"id":9,"jsonrpc":"2.0"}Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}
<<<
Content-Length: 1741

{"id":9,"jsonrpc":"2.0","result":[{"kind":13,"name":"mySerial","range":{"end":{"character":29,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":23,"line":5},"start":{"character":15,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"sms","range":{"end":{"character":10,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":19,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":17,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":36},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":41},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":9,"line":38},"start":{"character":5,"line":38}}},{"kind":12,"name":"sms","range":{"end":{"character":1,"line":50},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":8,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"updateSerial","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":51}},"selectionRange":{"end":{"character":17,"line":51},"start":{"character":5,"line":51}}}]}<<< Read Error: EOF
